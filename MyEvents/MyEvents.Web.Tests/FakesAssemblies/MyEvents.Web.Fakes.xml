<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MyEvents.Web.Fakes</name>
    </assembly>
    <members>
        <member name="T:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimErrorController">
            <summary>Shim type of MyEvents.Web.Areas.Organizer.Controllers.ErrorController</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimErrorController.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimErrorController.#ctor(MyEvents.Web.Areas.Organizer.Controllers.ErrorController)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimErrorController.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimErrorController.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimErrorController.Bind(System.Web.Mvc.IActionFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimErrorController.Bind(System.Web.Mvc.IAuthorizationFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimErrorController.Bind(System.Web.Mvc.IController)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimErrorController.Bind(System.Web.Mvc.IExceptionFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimErrorController.Bind(System.Web.Mvc.IResultFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimErrorController.Bind(System.Web.Mvc.Async.IAsyncController)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimErrorController.Bind(System.Web.Mvc.Async.IAsyncManagerContainer)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimErrorController.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimErrorController.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimErrorController.Constructor">
            <summary>Sets the shim of ErrorController.ErrorController()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimErrorController.Index">
            <summary>Sets the shim of ErrorController.Index()</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimErrorController.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimErrorController.AllInstances.Index">
            <summary>Sets the shim of ErrorController.Index()</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimEventController">
            <summary>Shim type of MyEvents.Web.Areas.Organizer.Controllers.EventController</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimEventController.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimEventController.#ctor(MyEvents.Web.Areas.Organizer.Controllers.EventController)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimEventController.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimEventController.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimEventController.Bind(System.Web.Mvc.IActionFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimEventController.Bind(System.Web.Mvc.IAuthorizationFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimEventController.Bind(System.Web.Mvc.IController)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimEventController.Bind(System.Web.Mvc.IExceptionFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimEventController.Bind(System.Web.Mvc.IResultFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimEventController.Bind(System.Web.Mvc.Async.IAsyncController)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimEventController.Bind(System.Web.Mvc.Async.IAsyncManagerContainer)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimEventController.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimEventController.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimEventController.ConstructorIEventDefinitionRepositoryIAuthorizationService">
            <summary>Sets the shim of EventController.EventController(IEventDefinitionRepository eventsRepository, IAuthorizationService authorizationService)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimEventController.Create">
            <summary>Sets the shim of EventController.Create()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimEventController.CreateMyEventsIdentityEditEventViewModel">
            <summary>Sets the shim of EventController.Create(MyEventsIdentity identity, EditEventViewModel viewModel)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimEventController.CurrentLogo">
            <summary>Sets the shim of EventController.CurrentLogo()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimEventController.DeleteMyEventsIdentityInt32">
            <summary>Sets the shim of EventController.Delete(MyEventsIdentity identity, Int32 eventDefinitionId)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimEventController.EditMyEventsIdentityEditEventViewModel">
            <summary>Sets the shim of EventController.Edit(MyEventsIdentity identity, EditEventViewModel viewModel)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimEventController.EditMyEventsIdentityInt32">
            <summary>Sets the shim of EventController.Edit(MyEventsIdentity identity, Int32 eventDefinitionId)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimEventController.EventLogoInt32">
            <summary>Sets the shim of EventController.EventLogo(Int32 eventDefinitionId)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimEventController.MapEventDefinitionToViewModelEventDefinitionEditEventViewModel">
            <summary>Sets the shim of EventController.MapEventDefinitionToViewModel(EventDefinition eventDefinition, EditEventViewModel viewModel)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimEventController.MapViewModelToEventDefinitionEditEventViewModelEventDefinition">
            <summary>Sets the shim of EventController.MapViewModelToEventDefinition(EditEventViewModel viewModel, EventDefinition eventDefinition)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimEventController.ResetLogo">
            <summary>Sets the shim of EventController.ResetLogo()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimEventController.SetLogoEditEventViewModelModelStateDictionary">
            <summary>Sets the shim of EventController.SetLogo(EditEventViewModel viewModel, ModelStateDictionary modelState)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimEventController.UploadEventLogo">
            <summary>Sets the shim of EventController.UploadEventLogo()</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimEventController.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimEventController.AllInstances.Create">
            <summary>Sets the shim of EventController.Create()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimEventController.AllInstances.CreateMyEventsIdentityEditEventViewModel">
            <summary>Sets the shim of EventController.Create(MyEventsIdentity identity, EditEventViewModel viewModel)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimEventController.AllInstances.CurrentLogo">
            <summary>Sets the shim of EventController.CurrentLogo()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimEventController.AllInstances.DeleteMyEventsIdentityInt32">
            <summary>Sets the shim of EventController.Delete(MyEventsIdentity identity, Int32 eventDefinitionId)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimEventController.AllInstances.EditMyEventsIdentityEditEventViewModel">
            <summary>Sets the shim of EventController.Edit(MyEventsIdentity identity, EditEventViewModel viewModel)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimEventController.AllInstances.EditMyEventsIdentityInt32">
            <summary>Sets the shim of EventController.Edit(MyEventsIdentity identity, Int32 eventDefinitionId)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimEventController.AllInstances.EventLogoInt32">
            <summary>Sets the shim of EventController.EventLogo(Int32 eventDefinitionId)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimEventController.AllInstances.MapEventDefinitionToViewModelEventDefinitionEditEventViewModel">
            <summary>Sets the shim of EventController.MapEventDefinitionToViewModel(EventDefinition eventDefinition, EditEventViewModel viewModel)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimEventController.AllInstances.MapViewModelToEventDefinitionEditEventViewModelEventDefinition">
            <summary>Sets the shim of EventController.MapViewModelToEventDefinition(EditEventViewModel viewModel, EventDefinition eventDefinition)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimEventController.AllInstances.ResetLogo">
            <summary>Sets the shim of EventController.ResetLogo()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimEventController.AllInstances.SetLogoEditEventViewModelModelStateDictionary">
            <summary>Sets the shim of EventController.SetLogo(EditEventViewModel viewModel, ModelStateDictionary modelState)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimEventController.AllInstances.UploadEventLogo">
            <summary>Sets the shim of EventController.UploadEventLogo()</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimHomeController">
            <summary>Shim type of MyEvents.Web.Areas.Organizer.Controllers.HomeController</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimHomeController.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimHomeController.#ctor(MyEvents.Web.Areas.Organizer.Controllers.HomeController)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimHomeController.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimHomeController.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimHomeController.Bind(System.Web.Mvc.IActionFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimHomeController.Bind(System.Web.Mvc.IAuthorizationFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimHomeController.Bind(System.Web.Mvc.IController)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimHomeController.Bind(System.Web.Mvc.IExceptionFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimHomeController.Bind(System.Web.Mvc.IResultFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimHomeController.Bind(System.Web.Mvc.Async.IAsyncController)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimHomeController.Bind(System.Web.Mvc.Async.IAsyncManagerContainer)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimHomeController.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimHomeController.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimHomeController.ConstructorIEventDefinitionRepository">
            <summary>Sets the shim of HomeController.HomeController(IEventDefinitionRepository eventsRepository)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimHomeController.IndexMyEventsIdentity">
            <summary>Sets the shim of HomeController.Index(MyEventsIdentity identity)</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimHomeController.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimHomeController.AllInstances.IndexMyEventsIdentity">
            <summary>Sets the shim of HomeController.Index(MyEventsIdentity identity)</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimRegisteredUsersController">
            <summary>Shim type of MyEvents.Web.Areas.Organizer.Controllers.RegisteredUsersController</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimRegisteredUsersController.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimRegisteredUsersController.#ctor(MyEvents.Web.Areas.Organizer.Controllers.RegisteredUsersController)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimRegisteredUsersController.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimRegisteredUsersController.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimRegisteredUsersController.Bind(System.Web.Mvc.IActionFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimRegisteredUsersController.Bind(System.Web.Mvc.IAuthorizationFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimRegisteredUsersController.Bind(System.Web.Mvc.IController)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimRegisteredUsersController.Bind(System.Web.Mvc.IExceptionFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimRegisteredUsersController.Bind(System.Web.Mvc.IResultFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimRegisteredUsersController.Bind(System.Web.Mvc.Async.IAsyncController)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimRegisteredUsersController.Bind(System.Web.Mvc.Async.IAsyncManagerContainer)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimRegisteredUsersController.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimRegisteredUsersController.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimRegisteredUsersController.ConstructorIEventDefinitionRepositoryIRegisteredUserRepository">
            <summary>Sets the shim of RegisteredUsersController.RegisteredUsersController(IEventDefinitionRepository eventDefinitionRepository, IRegisteredUserRepository registeredUserRepository)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimRegisteredUsersController.IndexMyEventsIdentityInt32">
            <summary>Sets the shim of RegisteredUsersController.Index(MyEventsIdentity identity, Int32 eventDefinitionId)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimRegisteredUsersController.ValidateEventAuthorizationMyEventsIdentityEventDefinition">
            <summary>Sets the shim of RegisteredUsersController.ValidateEventAuthorization(MyEventsIdentity identity, EventDefinition eventDefinition)</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimRegisteredUsersController.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimRegisteredUsersController.AllInstances.IndexMyEventsIdentityInt32">
            <summary>Sets the shim of RegisteredUsersController.Index(MyEventsIdentity identity, Int32 eventDefinitionId)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimRegisteredUsersController.AllInstances.ValidateEventAuthorizationMyEventsIdentityEventDefinition">
            <summary>Sets the shim of RegisteredUsersController.ValidateEventAuthorization(MyEventsIdentity identity, EventDefinition eventDefinition)</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimScheduleController">
            <summary>Shim type of MyEvents.Web.Areas.Organizer.Controllers.ScheduleController</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimScheduleController.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimScheduleController.#ctor(MyEvents.Web.Areas.Organizer.Controllers.ScheduleController)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimScheduleController.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimScheduleController.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimScheduleController.Bind(System.Web.Mvc.IActionFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimScheduleController.Bind(System.Web.Mvc.IAuthorizationFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimScheduleController.Bind(System.Web.Mvc.IController)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimScheduleController.Bind(System.Web.Mvc.IExceptionFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimScheduleController.Bind(System.Web.Mvc.IResultFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimScheduleController.Bind(System.Web.Mvc.Async.IAsyncController)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimScheduleController.Bind(System.Web.Mvc.Async.IAsyncManagerContainer)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimScheduleController.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimScheduleController.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimScheduleController.ConstructorISessionRepositoryIEventDefinitionRepositoryIAuthorizationService">
            <summary>Sets the shim of ScheduleController.ScheduleController(ISessionRepository sessionRepository, IEventDefinitionRepository eventDefinitionRepository, IAuthorizationService authorizationService)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimScheduleController.GetSheduleInfoMyEventsIdentityInt32">
            <summary>Sets the shim of ScheduleController.GetSheduleInfo(MyEventsIdentity identity, Int32 eventDefinitionId)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimScheduleController.IndexInt32">
            <summary>Sets the shim of ScheduleController.Index(Int32 eventDefinitionId)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimScheduleController.UpdateSessionMyEventsIdentityInt32DateTimeInt32Int32">
            <summary>Sets the shim of ScheduleController.UpdateSession(MyEventsIdentity identity, Int32 sessionId, DateTime startTime, Int32 duration, Int32 roomNumber)</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimScheduleController.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimScheduleController.AllInstances.GetSheduleInfoMyEventsIdentityInt32">
            <summary>Sets the shim of ScheduleController.GetSheduleInfo(MyEventsIdentity identity, Int32 eventDefinitionId)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimScheduleController.AllInstances.IndexInt32">
            <summary>Sets the shim of ScheduleController.Index(Int32 eventDefinitionId)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimScheduleController.AllInstances.UpdateSessionMyEventsIdentityInt32DateTimeInt32Int32">
            <summary>Sets the shim of ScheduleController.UpdateSession(MyEventsIdentity identity, Int32 sessionId, DateTime startTime, Int32 duration, Int32 roomNumber)</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimSessionController">
            <summary>Shim type of MyEvents.Web.Areas.Organizer.Controllers.SessionController</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimSessionController.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimSessionController.#ctor(MyEvents.Web.Areas.Organizer.Controllers.SessionController)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimSessionController.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimSessionController.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimSessionController.Bind(System.Web.Mvc.IActionFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimSessionController.Bind(System.Web.Mvc.IAuthorizationFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimSessionController.Bind(System.Web.Mvc.IController)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimSessionController.Bind(System.Web.Mvc.IExceptionFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimSessionController.Bind(System.Web.Mvc.IResultFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimSessionController.Bind(System.Web.Mvc.Async.IAsyncController)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimSessionController.Bind(System.Web.Mvc.Async.IAsyncManagerContainer)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimSessionController.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimSessionController.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimSessionController.ConstructorISessionRepositoryIMaterialRepositoryIEventDefinitionRepositoryIAuthorizationService">
            <summary>Sets the shim of SessionController.SessionController(ISessionRepository sessionRepository, IMaterialRepository materialRepository, IEventDefinitionRepository eventsRepository, IAuthorizationService authorizationService)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimSessionController.CreateInt32">
            <summary>Sets the shim of SessionController.Create(Int32 eventDefinitionId)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimSessionController.DeleteMaterialMyEventsIdentityInt32">
            <summary>Sets the shim of SessionController.DeleteMaterial(MyEventsIdentity identity, Int32 materialId)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimSessionController.DeleteMyEventsIdentityInt32Int32">
            <summary>Sets the shim of SessionController.Delete(MyEventsIdentity identity, Int32 sessionId, Int32 eventDefinitionId)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimSessionController.EditMyEventsIdentityInt32">
            <summary>Sets the shim of SessionController.Edit(MyEventsIdentity identity, Int32 sessionId)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimSessionController.GetMaterialInt32">
            <summary>Sets the shim of SessionController.GetMaterial(Int32 materialId)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimSessionController.ManageMyEventsIdentityInt32">
            <summary>Sets the shim of SessionController.Manage(MyEventsIdentity identity, Int32 eventDefinitionId)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimSessionController.MapSessionSessionSession">
            <summary>Sets the shim of SessionController.MapSession(Session sessionToUpdate, Session session)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimSessionController.MaterialsInt32">
            <summary>Sets the shim of SessionController.Materials(Int32 sessionId)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimSessionController.SaveMyEventsIdentitySession">
            <summary>Sets the shim of SessionController.Save(MyEventsIdentity identity, Session session)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimSessionController.SaveSessionSession">
            <summary>Sets the shim of SessionController.SaveSession(Session session)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimSessionController.UploadMaterialMyEventsIdentityInt32">
            <summary>Sets the shim of SessionController.UploadMaterial(MyEventsIdentity identity, Int32 sessionId)</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimSessionController.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimSessionController.AllInstances.CreateInt32">
            <summary>Sets the shim of SessionController.Create(Int32 eventDefinitionId)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimSessionController.AllInstances.DeleteMaterialMyEventsIdentityInt32">
            <summary>Sets the shim of SessionController.DeleteMaterial(MyEventsIdentity identity, Int32 materialId)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimSessionController.AllInstances.DeleteMyEventsIdentityInt32Int32">
            <summary>Sets the shim of SessionController.Delete(MyEventsIdentity identity, Int32 sessionId, Int32 eventDefinitionId)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimSessionController.AllInstances.EditMyEventsIdentityInt32">
            <summary>Sets the shim of SessionController.Edit(MyEventsIdentity identity, Int32 sessionId)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimSessionController.AllInstances.GetMaterialInt32">
            <summary>Sets the shim of SessionController.GetMaterial(Int32 materialId)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimSessionController.AllInstances.ManageMyEventsIdentityInt32">
            <summary>Sets the shim of SessionController.Manage(MyEventsIdentity identity, Int32 eventDefinitionId)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimSessionController.AllInstances.MapSessionSessionSession">
            <summary>Sets the shim of SessionController.MapSession(Session sessionToUpdate, Session session)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimSessionController.AllInstances.MaterialsInt32">
            <summary>Sets the shim of SessionController.Materials(Int32 sessionId)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimSessionController.AllInstances.SaveMyEventsIdentitySession">
            <summary>Sets the shim of SessionController.Save(MyEventsIdentity identity, Session session)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimSessionController.AllInstances.SaveSessionSession">
            <summary>Sets the shim of SessionController.SaveSession(Session session)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.ShimSessionController.AllInstances.UploadMaterialMyEventsIdentityInt32">
            <summary>Sets the shim of SessionController.UploadMaterial(MyEventsIdentity identity, Int32 sessionId)</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController">
            <summary>Stub type of MyEvents.Web.Areas.Organizer.Controllers.ErrorController</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Controller.BeginExecute(RequestContext requestContext, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.BeginExecuteCore(System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Controller.BeginExecuteCore(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.BeginExecuteCoreAsyncCallbackObject">
            <summary>Sets the stub of Controller.BeginExecuteCore(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.BeginExecuteRequestContextAsyncCallbackObject">
            <summary>Sets the stub of Controller.BeginExecute(RequestContext requestContext, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.Content(System.String,System.String,System.Text.Encoding)">
            <summary>Sets the stub of Controller.Content(String content, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.ContentStringStringEncoding">
            <summary>Sets the stub of Controller.Content(String content, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.CreateActionInvoker">
            <summary>Sets the stub of Controller.CreateActionInvoker()</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.CreateActionInvoker01">
            <summary>Sets the stub of Controller.CreateActionInvoker()</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.CreateTempDataProvider">
            <summary>Sets the stub of Controller.CreateTempDataProvider()</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.CreateTempDataProvider01">
            <summary>Sets the stub of Controller.CreateTempDataProvider()</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.DisableAsyncSupportGet">
            <summary>Sets the stub of Controller.get_DisableAsyncSupport()</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.Dispose(System.Boolean)">
            <summary>Sets the stub of Controller.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.DisposeBoolean">
            <summary>Sets the stub of Controller.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.EndExecute(System.IAsyncResult)">
            <summary>Sets the stub of Controller.EndExecute(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.EndExecuteCore(System.IAsyncResult)">
            <summary>Sets the stub of Controller.EndExecuteCore(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.EndExecuteCoreIAsyncResult">
            <summary>Sets the stub of Controller.EndExecuteCore(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.EndExecuteIAsyncResult">
            <summary>Sets the stub of Controller.EndExecute(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.Execute(System.Web.Routing.RequestContext)">
            <summary>Sets the stub of ControllerBase.Execute(RequestContext requestContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.ExecuteCore">
            <summary>Sets the stub of Controller.ExecuteCore()</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.ExecuteCore01">
            <summary>Sets the stub of Controller.ExecuteCore()</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.ExecuteRequestContext">
            <summary>Sets the stub of ControllerBase.Execute(RequestContext requestContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.File(System.Byte[],System.String,System.String)">
            <summary>Sets the stub of Controller.File(Byte[] fileContents, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.File(System.String,System.String,System.String)">
            <summary>Sets the stub of Controller.File(String fileName, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.File(System.IO.Stream,System.String,System.String)">
            <summary>Sets the stub of Controller.File(Stream fileStream, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.FileByteArrayStringString">
            <summary>Sets the stub of Controller.File(Byte[] fileContents, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.FileStreamStringString">
            <summary>Sets the stub of Controller.File(Stream fileStream, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.FileStringStringString">
            <summary>Sets the stub of Controller.File(String fileName, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.HandleUnknownAction(System.String)">
            <summary>Sets the stub of Controller.HandleUnknownAction(String actionName)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.HandleUnknownActionString">
            <summary>Sets the stub of Controller.HandleUnknownAction(String actionName)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.HttpNotFound(System.String)">
            <summary>Sets the stub of Controller.HttpNotFound(String statusDescription)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.HttpNotFoundString">
            <summary>Sets the stub of Controller.HttpNotFound(String statusDescription)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.Initialize(System.Web.Routing.RequestContext)">
            <summary>Sets the stub of Controller.Initialize(RequestContext requestContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.InitializeRequestContext">
            <summary>Sets the stub of Controller.Initialize(RequestContext requestContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.InitializeStub">
            <summary>Initializes a new instance of type StubErrorController</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.JavaScript(System.String)">
            <summary>Sets the stub of Controller.JavaScript(String script)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.JavaScriptString">
            <summary>Sets the stub of Controller.JavaScript(String script)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.Json(System.Object,System.String,System.Text.Encoding)">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.Json(System.Object,System.String,System.Text.Encoding,System.Web.Mvc.JsonRequestBehavior)">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding, JsonRequestBehavior behavior)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.JsonObjectStringEncoding">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.JsonObjectStringEncodingJsonRequestBehavior">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding, JsonRequestBehavior behavior)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
            <summary>Sets the stub of Controller.OnActionExecuted(ActionExecutedContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.OnActionExecutedActionExecutedContext">
            <summary>Sets the stub of Controller.OnActionExecuted(ActionExecutedContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <summary>Sets the stub of Controller.OnActionExecuting(ActionExecutingContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.OnActionExecutingActionExecutingContext">
            <summary>Sets the stub of Controller.OnActionExecuting(ActionExecutingContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
            <summary>Sets the stub of Controller.OnAuthorization(AuthorizationContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.OnAuthorizationAuthorizationContext">
            <summary>Sets the stub of Controller.OnAuthorization(AuthorizationContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.OnException(System.Web.Mvc.ExceptionContext)">
            <summary>Sets the stub of Controller.OnException(ExceptionContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.OnExceptionExceptionContext">
            <summary>Sets the stub of Controller.OnException(ExceptionContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
            <summary>Sets the stub of Controller.OnResultExecuted(ResultExecutedContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.OnResultExecutedResultExecutedContext">
            <summary>Sets the stub of Controller.OnResultExecuted(ResultExecutedContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
            <summary>Sets the stub of Controller.OnResultExecuting(ResultExecutingContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.OnResultExecutingResultExecutingContext">
            <summary>Sets the stub of Controller.OnResultExecuting(ResultExecutingContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.PartialView(System.String,System.Object)">
            <summary>Sets the stub of Controller.PartialView(String viewName, Object model)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.PartialViewStringObject">
            <summary>Sets the stub of Controller.PartialView(String viewName, Object model)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.Redirect(System.String)">
            <summary>Sets the stub of Controller.Redirect(String url)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.RedirectPermanent(System.String)">
            <summary>Sets the stub of Controller.RedirectPermanent(String url)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.RedirectPermanentString">
            <summary>Sets the stub of Controller.RedirectPermanent(String url)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.RedirectString">
            <summary>Sets the stub of Controller.Redirect(String url)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.RedirectToAction(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToAction(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.RedirectToActionPermanent(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToActionPermanent(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.RedirectToActionPermanentStringStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToActionPermanent(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.RedirectToActionStringStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToAction(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToRoute(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToRoutePermanent(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.RedirectToRoutePermanentStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToRoutePermanent(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.RedirectToRouteStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToRoute(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.View(System.Web.Mvc.IView,System.Object)">
            <summary>Sets the stub of Controller.View(IView view, Object model)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.View(System.String,System.String,System.Object)">
            <summary>Sets the stub of Controller.View(String viewName, String masterName, Object model)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.ViewIViewObject">
            <summary>Sets the stub of Controller.View(IView view, Object model)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.ViewStringStringObject">
            <summary>Sets the stub of Controller.View(String viewName, String masterName, Object model)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.DisableAsyncSupport">
            <summary>Sets the stub of Controller.get_DisableAsyncSupport()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubErrorController.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController">
            <summary>Stub type of MyEvents.Web.Areas.Organizer.Controllers.EventController</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.#ctor(MyEvents.Data.IEventDefinitionRepository,MyEvents.Web.Services.IAuthorizationService)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Controller.BeginExecute(RequestContext requestContext, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.BeginExecuteCore(System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Controller.BeginExecuteCore(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.BeginExecuteCoreAsyncCallbackObject">
            <summary>Sets the stub of Controller.BeginExecuteCore(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.BeginExecuteRequestContextAsyncCallbackObject">
            <summary>Sets the stub of Controller.BeginExecute(RequestContext requestContext, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.Content(System.String,System.String,System.Text.Encoding)">
            <summary>Sets the stub of Controller.Content(String content, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.ContentStringStringEncoding">
            <summary>Sets the stub of Controller.Content(String content, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.CreateActionInvoker">
            <summary>Sets the stub of Controller.CreateActionInvoker()</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.CreateActionInvoker01">
            <summary>Sets the stub of Controller.CreateActionInvoker()</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.CreateTempDataProvider">
            <summary>Sets the stub of Controller.CreateTempDataProvider()</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.CreateTempDataProvider01">
            <summary>Sets the stub of Controller.CreateTempDataProvider()</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.DisableAsyncSupportGet">
            <summary>Sets the stub of Controller.get_DisableAsyncSupport()</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.Dispose(System.Boolean)">
            <summary>Sets the stub of Controller.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.DisposeBoolean">
            <summary>Sets the stub of Controller.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.EndExecute(System.IAsyncResult)">
            <summary>Sets the stub of Controller.EndExecute(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.EndExecuteCore(System.IAsyncResult)">
            <summary>Sets the stub of Controller.EndExecuteCore(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.EndExecuteCoreIAsyncResult">
            <summary>Sets the stub of Controller.EndExecuteCore(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.EndExecuteIAsyncResult">
            <summary>Sets the stub of Controller.EndExecute(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.Execute(System.Web.Routing.RequestContext)">
            <summary>Sets the stub of ControllerBase.Execute(RequestContext requestContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.ExecuteCore">
            <summary>Sets the stub of Controller.ExecuteCore()</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.ExecuteCore01">
            <summary>Sets the stub of Controller.ExecuteCore()</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.ExecuteRequestContext">
            <summary>Sets the stub of ControllerBase.Execute(RequestContext requestContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.File(System.Byte[],System.String,System.String)">
            <summary>Sets the stub of Controller.File(Byte[] fileContents, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.File(System.String,System.String,System.String)">
            <summary>Sets the stub of Controller.File(String fileName, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.File(System.IO.Stream,System.String,System.String)">
            <summary>Sets the stub of Controller.File(Stream fileStream, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.FileByteArrayStringString">
            <summary>Sets the stub of Controller.File(Byte[] fileContents, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.FileStreamStringString">
            <summary>Sets the stub of Controller.File(Stream fileStream, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.FileStringStringString">
            <summary>Sets the stub of Controller.File(String fileName, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.HandleUnknownAction(System.String)">
            <summary>Sets the stub of Controller.HandleUnknownAction(String actionName)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.HandleUnknownActionString">
            <summary>Sets the stub of Controller.HandleUnknownAction(String actionName)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.HttpNotFound(System.String)">
            <summary>Sets the stub of Controller.HttpNotFound(String statusDescription)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.HttpNotFoundString">
            <summary>Sets the stub of Controller.HttpNotFound(String statusDescription)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.Initialize(System.Web.Routing.RequestContext)">
            <summary>Sets the stub of Controller.Initialize(RequestContext requestContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.InitializeRequestContext">
            <summary>Sets the stub of Controller.Initialize(RequestContext requestContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.InitializeStub">
            <summary>Initializes a new instance of type StubEventController</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.JavaScript(System.String)">
            <summary>Sets the stub of Controller.JavaScript(String script)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.JavaScriptString">
            <summary>Sets the stub of Controller.JavaScript(String script)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.Json(System.Object,System.String,System.Text.Encoding)">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.Json(System.Object,System.String,System.Text.Encoding,System.Web.Mvc.JsonRequestBehavior)">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding, JsonRequestBehavior behavior)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.JsonObjectStringEncoding">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.JsonObjectStringEncodingJsonRequestBehavior">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding, JsonRequestBehavior behavior)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
            <summary>Sets the stub of Controller.OnActionExecuted(ActionExecutedContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.OnActionExecutedActionExecutedContext">
            <summary>Sets the stub of Controller.OnActionExecuted(ActionExecutedContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <summary>Sets the stub of Controller.OnActionExecuting(ActionExecutingContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.OnActionExecutingActionExecutingContext">
            <summary>Sets the stub of Controller.OnActionExecuting(ActionExecutingContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
            <summary>Sets the stub of Controller.OnAuthorization(AuthorizationContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.OnAuthorizationAuthorizationContext">
            <summary>Sets the stub of Controller.OnAuthorization(AuthorizationContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.OnException(System.Web.Mvc.ExceptionContext)">
            <summary>Sets the stub of Controller.OnException(ExceptionContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.OnExceptionExceptionContext">
            <summary>Sets the stub of Controller.OnException(ExceptionContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
            <summary>Sets the stub of Controller.OnResultExecuted(ResultExecutedContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.OnResultExecutedResultExecutedContext">
            <summary>Sets the stub of Controller.OnResultExecuted(ResultExecutedContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
            <summary>Sets the stub of Controller.OnResultExecuting(ResultExecutingContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.OnResultExecutingResultExecutingContext">
            <summary>Sets the stub of Controller.OnResultExecuting(ResultExecutingContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.PartialView(System.String,System.Object)">
            <summary>Sets the stub of Controller.PartialView(String viewName, Object model)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.PartialViewStringObject">
            <summary>Sets the stub of Controller.PartialView(String viewName, Object model)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.Redirect(System.String)">
            <summary>Sets the stub of Controller.Redirect(String url)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.RedirectPermanent(System.String)">
            <summary>Sets the stub of Controller.RedirectPermanent(String url)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.RedirectPermanentString">
            <summary>Sets the stub of Controller.RedirectPermanent(String url)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.RedirectString">
            <summary>Sets the stub of Controller.Redirect(String url)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.RedirectToAction(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToAction(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.RedirectToActionPermanent(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToActionPermanent(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.RedirectToActionPermanentStringStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToActionPermanent(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.RedirectToActionStringStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToAction(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToRoute(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToRoutePermanent(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.RedirectToRoutePermanentStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToRoutePermanent(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.RedirectToRouteStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToRoute(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.View(System.Web.Mvc.IView,System.Object)">
            <summary>Sets the stub of Controller.View(IView view, Object model)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.View(System.String,System.String,System.Object)">
            <summary>Sets the stub of Controller.View(String viewName, String masterName, Object model)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.ViewIViewObject">
            <summary>Sets the stub of Controller.View(IView view, Object model)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.ViewStringStringObject">
            <summary>Sets the stub of Controller.View(String viewName, String masterName, Object model)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.DisableAsyncSupport">
            <summary>Sets the stub of Controller.get_DisableAsyncSupport()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubEventController.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController">
            <summary>Stub type of MyEvents.Web.Areas.Organizer.Controllers.HomeController</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.#ctor(MyEvents.Data.IEventDefinitionRepository)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Controller.BeginExecute(RequestContext requestContext, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.BeginExecuteCore(System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Controller.BeginExecuteCore(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.BeginExecuteCoreAsyncCallbackObject">
            <summary>Sets the stub of Controller.BeginExecuteCore(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.BeginExecuteRequestContextAsyncCallbackObject">
            <summary>Sets the stub of Controller.BeginExecute(RequestContext requestContext, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.Content(System.String,System.String,System.Text.Encoding)">
            <summary>Sets the stub of Controller.Content(String content, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.ContentStringStringEncoding">
            <summary>Sets the stub of Controller.Content(String content, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.CreateActionInvoker">
            <summary>Sets the stub of Controller.CreateActionInvoker()</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.CreateActionInvoker01">
            <summary>Sets the stub of Controller.CreateActionInvoker()</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.CreateTempDataProvider">
            <summary>Sets the stub of Controller.CreateTempDataProvider()</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.CreateTempDataProvider01">
            <summary>Sets the stub of Controller.CreateTempDataProvider()</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.DisableAsyncSupportGet">
            <summary>Sets the stub of Controller.get_DisableAsyncSupport()</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.Dispose(System.Boolean)">
            <summary>Sets the stub of Controller.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.DisposeBoolean">
            <summary>Sets the stub of Controller.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.EndExecute(System.IAsyncResult)">
            <summary>Sets the stub of Controller.EndExecute(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.EndExecuteCore(System.IAsyncResult)">
            <summary>Sets the stub of Controller.EndExecuteCore(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.EndExecuteCoreIAsyncResult">
            <summary>Sets the stub of Controller.EndExecuteCore(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.EndExecuteIAsyncResult">
            <summary>Sets the stub of Controller.EndExecute(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.Execute(System.Web.Routing.RequestContext)">
            <summary>Sets the stub of ControllerBase.Execute(RequestContext requestContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.ExecuteCore">
            <summary>Sets the stub of Controller.ExecuteCore()</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.ExecuteCore01">
            <summary>Sets the stub of Controller.ExecuteCore()</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.ExecuteRequestContext">
            <summary>Sets the stub of ControllerBase.Execute(RequestContext requestContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.File(System.Byte[],System.String,System.String)">
            <summary>Sets the stub of Controller.File(Byte[] fileContents, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.File(System.String,System.String,System.String)">
            <summary>Sets the stub of Controller.File(String fileName, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.File(System.IO.Stream,System.String,System.String)">
            <summary>Sets the stub of Controller.File(Stream fileStream, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.FileByteArrayStringString">
            <summary>Sets the stub of Controller.File(Byte[] fileContents, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.FileStreamStringString">
            <summary>Sets the stub of Controller.File(Stream fileStream, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.FileStringStringString">
            <summary>Sets the stub of Controller.File(String fileName, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.HandleUnknownAction(System.String)">
            <summary>Sets the stub of Controller.HandleUnknownAction(String actionName)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.HandleUnknownActionString">
            <summary>Sets the stub of Controller.HandleUnknownAction(String actionName)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.HttpNotFound(System.String)">
            <summary>Sets the stub of Controller.HttpNotFound(String statusDescription)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.HttpNotFoundString">
            <summary>Sets the stub of Controller.HttpNotFound(String statusDescription)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.Initialize(System.Web.Routing.RequestContext)">
            <summary>Sets the stub of Controller.Initialize(RequestContext requestContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.InitializeRequestContext">
            <summary>Sets the stub of Controller.Initialize(RequestContext requestContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.InitializeStub">
            <summary>Initializes a new instance of type StubHomeController</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.JavaScript(System.String)">
            <summary>Sets the stub of Controller.JavaScript(String script)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.JavaScriptString">
            <summary>Sets the stub of Controller.JavaScript(String script)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.Json(System.Object,System.String,System.Text.Encoding)">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.Json(System.Object,System.String,System.Text.Encoding,System.Web.Mvc.JsonRequestBehavior)">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding, JsonRequestBehavior behavior)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.JsonObjectStringEncoding">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.JsonObjectStringEncodingJsonRequestBehavior">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding, JsonRequestBehavior behavior)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
            <summary>Sets the stub of Controller.OnActionExecuted(ActionExecutedContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.OnActionExecutedActionExecutedContext">
            <summary>Sets the stub of Controller.OnActionExecuted(ActionExecutedContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <summary>Sets the stub of Controller.OnActionExecuting(ActionExecutingContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.OnActionExecutingActionExecutingContext">
            <summary>Sets the stub of Controller.OnActionExecuting(ActionExecutingContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
            <summary>Sets the stub of Controller.OnAuthorization(AuthorizationContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.OnAuthorizationAuthorizationContext">
            <summary>Sets the stub of Controller.OnAuthorization(AuthorizationContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.OnException(System.Web.Mvc.ExceptionContext)">
            <summary>Sets the stub of Controller.OnException(ExceptionContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.OnExceptionExceptionContext">
            <summary>Sets the stub of Controller.OnException(ExceptionContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
            <summary>Sets the stub of Controller.OnResultExecuted(ResultExecutedContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.OnResultExecutedResultExecutedContext">
            <summary>Sets the stub of Controller.OnResultExecuted(ResultExecutedContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
            <summary>Sets the stub of Controller.OnResultExecuting(ResultExecutingContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.OnResultExecutingResultExecutingContext">
            <summary>Sets the stub of Controller.OnResultExecuting(ResultExecutingContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.PartialView(System.String,System.Object)">
            <summary>Sets the stub of Controller.PartialView(String viewName, Object model)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.PartialViewStringObject">
            <summary>Sets the stub of Controller.PartialView(String viewName, Object model)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.Redirect(System.String)">
            <summary>Sets the stub of Controller.Redirect(String url)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.RedirectPermanent(System.String)">
            <summary>Sets the stub of Controller.RedirectPermanent(String url)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.RedirectPermanentString">
            <summary>Sets the stub of Controller.RedirectPermanent(String url)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.RedirectString">
            <summary>Sets the stub of Controller.Redirect(String url)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.RedirectToAction(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToAction(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.RedirectToActionPermanent(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToActionPermanent(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.RedirectToActionPermanentStringStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToActionPermanent(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.RedirectToActionStringStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToAction(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToRoute(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToRoutePermanent(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.RedirectToRoutePermanentStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToRoutePermanent(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.RedirectToRouteStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToRoute(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.View(System.Web.Mvc.IView,System.Object)">
            <summary>Sets the stub of Controller.View(IView view, Object model)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.View(System.String,System.String,System.Object)">
            <summary>Sets the stub of Controller.View(String viewName, String masterName, Object model)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.ViewIViewObject">
            <summary>Sets the stub of Controller.View(IView view, Object model)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.ViewStringStringObject">
            <summary>Sets the stub of Controller.View(String viewName, String masterName, Object model)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.DisableAsyncSupport">
            <summary>Sets the stub of Controller.get_DisableAsyncSupport()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubHomeController.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController">
            <summary>Stub type of MyEvents.Web.Areas.Organizer.Controllers.RegisteredUsersController</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.#ctor(MyEvents.Data.IEventDefinitionRepository,MyEvents.Data.IRegisteredUserRepository)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Controller.BeginExecute(RequestContext requestContext, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.BeginExecuteCore(System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Controller.BeginExecuteCore(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.BeginExecuteCoreAsyncCallbackObject">
            <summary>Sets the stub of Controller.BeginExecuteCore(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.BeginExecuteRequestContextAsyncCallbackObject">
            <summary>Sets the stub of Controller.BeginExecute(RequestContext requestContext, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.Content(System.String,System.String,System.Text.Encoding)">
            <summary>Sets the stub of Controller.Content(String content, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.ContentStringStringEncoding">
            <summary>Sets the stub of Controller.Content(String content, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.CreateActionInvoker">
            <summary>Sets the stub of Controller.CreateActionInvoker()</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.CreateActionInvoker01">
            <summary>Sets the stub of Controller.CreateActionInvoker()</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.CreateTempDataProvider">
            <summary>Sets the stub of Controller.CreateTempDataProvider()</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.CreateTempDataProvider01">
            <summary>Sets the stub of Controller.CreateTempDataProvider()</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.DisableAsyncSupportGet">
            <summary>Sets the stub of Controller.get_DisableAsyncSupport()</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.Dispose(System.Boolean)">
            <summary>Sets the stub of Controller.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.DisposeBoolean">
            <summary>Sets the stub of Controller.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.EndExecute(System.IAsyncResult)">
            <summary>Sets the stub of Controller.EndExecute(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.EndExecuteCore(System.IAsyncResult)">
            <summary>Sets the stub of Controller.EndExecuteCore(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.EndExecuteCoreIAsyncResult">
            <summary>Sets the stub of Controller.EndExecuteCore(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.EndExecuteIAsyncResult">
            <summary>Sets the stub of Controller.EndExecute(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.Execute(System.Web.Routing.RequestContext)">
            <summary>Sets the stub of ControllerBase.Execute(RequestContext requestContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.ExecuteCore">
            <summary>Sets the stub of Controller.ExecuteCore()</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.ExecuteCore01">
            <summary>Sets the stub of Controller.ExecuteCore()</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.ExecuteRequestContext">
            <summary>Sets the stub of ControllerBase.Execute(RequestContext requestContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.File(System.Byte[],System.String,System.String)">
            <summary>Sets the stub of Controller.File(Byte[] fileContents, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.File(System.String,System.String,System.String)">
            <summary>Sets the stub of Controller.File(String fileName, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.File(System.IO.Stream,System.String,System.String)">
            <summary>Sets the stub of Controller.File(Stream fileStream, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.FileByteArrayStringString">
            <summary>Sets the stub of Controller.File(Byte[] fileContents, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.FileStreamStringString">
            <summary>Sets the stub of Controller.File(Stream fileStream, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.FileStringStringString">
            <summary>Sets the stub of Controller.File(String fileName, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.HandleUnknownAction(System.String)">
            <summary>Sets the stub of Controller.HandleUnknownAction(String actionName)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.HandleUnknownActionString">
            <summary>Sets the stub of Controller.HandleUnknownAction(String actionName)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.HttpNotFound(System.String)">
            <summary>Sets the stub of Controller.HttpNotFound(String statusDescription)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.HttpNotFoundString">
            <summary>Sets the stub of Controller.HttpNotFound(String statusDescription)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.Initialize(System.Web.Routing.RequestContext)">
            <summary>Sets the stub of Controller.Initialize(RequestContext requestContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.InitializeRequestContext">
            <summary>Sets the stub of Controller.Initialize(RequestContext requestContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.InitializeStub">
            <summary>Initializes a new instance of type StubRegisteredUsersController</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.JavaScript(System.String)">
            <summary>Sets the stub of Controller.JavaScript(String script)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.JavaScriptString">
            <summary>Sets the stub of Controller.JavaScript(String script)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.Json(System.Object,System.String,System.Text.Encoding)">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.Json(System.Object,System.String,System.Text.Encoding,System.Web.Mvc.JsonRequestBehavior)">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding, JsonRequestBehavior behavior)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.JsonObjectStringEncoding">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.JsonObjectStringEncodingJsonRequestBehavior">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding, JsonRequestBehavior behavior)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
            <summary>Sets the stub of Controller.OnActionExecuted(ActionExecutedContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.OnActionExecutedActionExecutedContext">
            <summary>Sets the stub of Controller.OnActionExecuted(ActionExecutedContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <summary>Sets the stub of Controller.OnActionExecuting(ActionExecutingContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.OnActionExecutingActionExecutingContext">
            <summary>Sets the stub of Controller.OnActionExecuting(ActionExecutingContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
            <summary>Sets the stub of Controller.OnAuthorization(AuthorizationContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.OnAuthorizationAuthorizationContext">
            <summary>Sets the stub of Controller.OnAuthorization(AuthorizationContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.OnException(System.Web.Mvc.ExceptionContext)">
            <summary>Sets the stub of Controller.OnException(ExceptionContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.OnExceptionExceptionContext">
            <summary>Sets the stub of Controller.OnException(ExceptionContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
            <summary>Sets the stub of Controller.OnResultExecuted(ResultExecutedContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.OnResultExecutedResultExecutedContext">
            <summary>Sets the stub of Controller.OnResultExecuted(ResultExecutedContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
            <summary>Sets the stub of Controller.OnResultExecuting(ResultExecutingContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.OnResultExecutingResultExecutingContext">
            <summary>Sets the stub of Controller.OnResultExecuting(ResultExecutingContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.PartialView(System.String,System.Object)">
            <summary>Sets the stub of Controller.PartialView(String viewName, Object model)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.PartialViewStringObject">
            <summary>Sets the stub of Controller.PartialView(String viewName, Object model)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.Redirect(System.String)">
            <summary>Sets the stub of Controller.Redirect(String url)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.RedirectPermanent(System.String)">
            <summary>Sets the stub of Controller.RedirectPermanent(String url)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.RedirectPermanentString">
            <summary>Sets the stub of Controller.RedirectPermanent(String url)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.RedirectString">
            <summary>Sets the stub of Controller.Redirect(String url)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.RedirectToAction(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToAction(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.RedirectToActionPermanent(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToActionPermanent(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.RedirectToActionPermanentStringStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToActionPermanent(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.RedirectToActionStringStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToAction(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToRoute(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToRoutePermanent(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.RedirectToRoutePermanentStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToRoutePermanent(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.RedirectToRouteStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToRoute(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.View(System.Web.Mvc.IView,System.Object)">
            <summary>Sets the stub of Controller.View(IView view, Object model)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.View(System.String,System.String,System.Object)">
            <summary>Sets the stub of Controller.View(String viewName, String masterName, Object model)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.ViewIViewObject">
            <summary>Sets the stub of Controller.View(IView view, Object model)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.ViewStringStringObject">
            <summary>Sets the stub of Controller.View(String viewName, String masterName, Object model)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.DisableAsyncSupport">
            <summary>Sets the stub of Controller.get_DisableAsyncSupport()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubRegisteredUsersController.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController">
            <summary>Stub type of MyEvents.Web.Areas.Organizer.Controllers.ScheduleController</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.#ctor(MyEvents.Data.ISessionRepository,MyEvents.Data.IEventDefinitionRepository,MyEvents.Web.Services.IAuthorizationService)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Controller.BeginExecute(RequestContext requestContext, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.BeginExecuteCore(System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Controller.BeginExecuteCore(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.BeginExecuteCoreAsyncCallbackObject">
            <summary>Sets the stub of Controller.BeginExecuteCore(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.BeginExecuteRequestContextAsyncCallbackObject">
            <summary>Sets the stub of Controller.BeginExecute(RequestContext requestContext, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.Content(System.String,System.String,System.Text.Encoding)">
            <summary>Sets the stub of Controller.Content(String content, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.ContentStringStringEncoding">
            <summary>Sets the stub of Controller.Content(String content, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.CreateActionInvoker">
            <summary>Sets the stub of Controller.CreateActionInvoker()</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.CreateActionInvoker01">
            <summary>Sets the stub of Controller.CreateActionInvoker()</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.CreateTempDataProvider">
            <summary>Sets the stub of Controller.CreateTempDataProvider()</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.CreateTempDataProvider01">
            <summary>Sets the stub of Controller.CreateTempDataProvider()</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.DisableAsyncSupportGet">
            <summary>Sets the stub of Controller.get_DisableAsyncSupport()</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.Dispose(System.Boolean)">
            <summary>Sets the stub of Controller.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.DisposeBoolean">
            <summary>Sets the stub of Controller.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.EndExecute(System.IAsyncResult)">
            <summary>Sets the stub of Controller.EndExecute(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.EndExecuteCore(System.IAsyncResult)">
            <summary>Sets the stub of Controller.EndExecuteCore(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.EndExecuteCoreIAsyncResult">
            <summary>Sets the stub of Controller.EndExecuteCore(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.EndExecuteIAsyncResult">
            <summary>Sets the stub of Controller.EndExecute(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.Execute(System.Web.Routing.RequestContext)">
            <summary>Sets the stub of ControllerBase.Execute(RequestContext requestContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.ExecuteCore">
            <summary>Sets the stub of Controller.ExecuteCore()</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.ExecuteCore01">
            <summary>Sets the stub of Controller.ExecuteCore()</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.ExecuteRequestContext">
            <summary>Sets the stub of ControllerBase.Execute(RequestContext requestContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.File(System.Byte[],System.String,System.String)">
            <summary>Sets the stub of Controller.File(Byte[] fileContents, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.File(System.String,System.String,System.String)">
            <summary>Sets the stub of Controller.File(String fileName, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.File(System.IO.Stream,System.String,System.String)">
            <summary>Sets the stub of Controller.File(Stream fileStream, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.FileByteArrayStringString">
            <summary>Sets the stub of Controller.File(Byte[] fileContents, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.FileStreamStringString">
            <summary>Sets the stub of Controller.File(Stream fileStream, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.FileStringStringString">
            <summary>Sets the stub of Controller.File(String fileName, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.HandleUnknownAction(System.String)">
            <summary>Sets the stub of Controller.HandleUnknownAction(String actionName)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.HandleUnknownActionString">
            <summary>Sets the stub of Controller.HandleUnknownAction(String actionName)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.HttpNotFound(System.String)">
            <summary>Sets the stub of Controller.HttpNotFound(String statusDescription)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.HttpNotFoundString">
            <summary>Sets the stub of Controller.HttpNotFound(String statusDescription)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.Initialize(System.Web.Routing.RequestContext)">
            <summary>Sets the stub of Controller.Initialize(RequestContext requestContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.InitializeRequestContext">
            <summary>Sets the stub of Controller.Initialize(RequestContext requestContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.InitializeStub">
            <summary>Initializes a new instance of type StubScheduleController</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.JavaScript(System.String)">
            <summary>Sets the stub of Controller.JavaScript(String script)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.JavaScriptString">
            <summary>Sets the stub of Controller.JavaScript(String script)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.Json(System.Object,System.String,System.Text.Encoding)">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.Json(System.Object,System.String,System.Text.Encoding,System.Web.Mvc.JsonRequestBehavior)">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding, JsonRequestBehavior behavior)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.JsonObjectStringEncoding">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.JsonObjectStringEncodingJsonRequestBehavior">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding, JsonRequestBehavior behavior)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
            <summary>Sets the stub of Controller.OnActionExecuted(ActionExecutedContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.OnActionExecutedActionExecutedContext">
            <summary>Sets the stub of Controller.OnActionExecuted(ActionExecutedContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <summary>Sets the stub of Controller.OnActionExecuting(ActionExecutingContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.OnActionExecutingActionExecutingContext">
            <summary>Sets the stub of Controller.OnActionExecuting(ActionExecutingContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
            <summary>Sets the stub of Controller.OnAuthorization(AuthorizationContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.OnAuthorizationAuthorizationContext">
            <summary>Sets the stub of Controller.OnAuthorization(AuthorizationContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.OnException(System.Web.Mvc.ExceptionContext)">
            <summary>Sets the stub of Controller.OnException(ExceptionContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.OnExceptionExceptionContext">
            <summary>Sets the stub of Controller.OnException(ExceptionContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
            <summary>Sets the stub of Controller.OnResultExecuted(ResultExecutedContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.OnResultExecutedResultExecutedContext">
            <summary>Sets the stub of Controller.OnResultExecuted(ResultExecutedContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
            <summary>Sets the stub of Controller.OnResultExecuting(ResultExecutingContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.OnResultExecutingResultExecutingContext">
            <summary>Sets the stub of Controller.OnResultExecuting(ResultExecutingContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.PartialView(System.String,System.Object)">
            <summary>Sets the stub of Controller.PartialView(String viewName, Object model)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.PartialViewStringObject">
            <summary>Sets the stub of Controller.PartialView(String viewName, Object model)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.Redirect(System.String)">
            <summary>Sets the stub of Controller.Redirect(String url)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.RedirectPermanent(System.String)">
            <summary>Sets the stub of Controller.RedirectPermanent(String url)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.RedirectPermanentString">
            <summary>Sets the stub of Controller.RedirectPermanent(String url)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.RedirectString">
            <summary>Sets the stub of Controller.Redirect(String url)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.RedirectToAction(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToAction(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.RedirectToActionPermanent(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToActionPermanent(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.RedirectToActionPermanentStringStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToActionPermanent(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.RedirectToActionStringStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToAction(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToRoute(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToRoutePermanent(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.RedirectToRoutePermanentStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToRoutePermanent(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.RedirectToRouteStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToRoute(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.View(System.Web.Mvc.IView,System.Object)">
            <summary>Sets the stub of Controller.View(IView view, Object model)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.View(System.String,System.String,System.Object)">
            <summary>Sets the stub of Controller.View(String viewName, String masterName, Object model)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.ViewIViewObject">
            <summary>Sets the stub of Controller.View(IView view, Object model)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.ViewStringStringObject">
            <summary>Sets the stub of Controller.View(String viewName, String masterName, Object model)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.DisableAsyncSupport">
            <summary>Sets the stub of Controller.get_DisableAsyncSupport()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubScheduleController.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController">
            <summary>Stub type of MyEvents.Web.Areas.Organizer.Controllers.SessionController</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.#ctor(MyEvents.Data.ISessionRepository,MyEvents.Data.IMaterialRepository,MyEvents.Data.IEventDefinitionRepository,MyEvents.Web.Services.IAuthorizationService)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Controller.BeginExecute(RequestContext requestContext, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.BeginExecuteCore(System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Controller.BeginExecuteCore(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.BeginExecuteCoreAsyncCallbackObject">
            <summary>Sets the stub of Controller.BeginExecuteCore(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.BeginExecuteRequestContextAsyncCallbackObject">
            <summary>Sets the stub of Controller.BeginExecute(RequestContext requestContext, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.Content(System.String,System.String,System.Text.Encoding)">
            <summary>Sets the stub of Controller.Content(String content, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.ContentStringStringEncoding">
            <summary>Sets the stub of Controller.Content(String content, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.CreateActionInvoker">
            <summary>Sets the stub of Controller.CreateActionInvoker()</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.CreateActionInvoker01">
            <summary>Sets the stub of Controller.CreateActionInvoker()</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.CreateTempDataProvider">
            <summary>Sets the stub of Controller.CreateTempDataProvider()</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.CreateTempDataProvider01">
            <summary>Sets the stub of Controller.CreateTempDataProvider()</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.DisableAsyncSupportGet">
            <summary>Sets the stub of Controller.get_DisableAsyncSupport()</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.Dispose(System.Boolean)">
            <summary>Sets the stub of Controller.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.DisposeBoolean">
            <summary>Sets the stub of Controller.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.EndExecute(System.IAsyncResult)">
            <summary>Sets the stub of Controller.EndExecute(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.EndExecuteCore(System.IAsyncResult)">
            <summary>Sets the stub of Controller.EndExecuteCore(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.EndExecuteCoreIAsyncResult">
            <summary>Sets the stub of Controller.EndExecuteCore(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.EndExecuteIAsyncResult">
            <summary>Sets the stub of Controller.EndExecute(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.Execute(System.Web.Routing.RequestContext)">
            <summary>Sets the stub of ControllerBase.Execute(RequestContext requestContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.ExecuteCore">
            <summary>Sets the stub of Controller.ExecuteCore()</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.ExecuteCore01">
            <summary>Sets the stub of Controller.ExecuteCore()</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.ExecuteRequestContext">
            <summary>Sets the stub of ControllerBase.Execute(RequestContext requestContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.File(System.Byte[],System.String,System.String)">
            <summary>Sets the stub of Controller.File(Byte[] fileContents, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.File(System.String,System.String,System.String)">
            <summary>Sets the stub of Controller.File(String fileName, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.File(System.IO.Stream,System.String,System.String)">
            <summary>Sets the stub of Controller.File(Stream fileStream, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.FileByteArrayStringString">
            <summary>Sets the stub of Controller.File(Byte[] fileContents, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.FileStreamStringString">
            <summary>Sets the stub of Controller.File(Stream fileStream, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.FileStringStringString">
            <summary>Sets the stub of Controller.File(String fileName, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.HandleUnknownAction(System.String)">
            <summary>Sets the stub of Controller.HandleUnknownAction(String actionName)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.HandleUnknownActionString">
            <summary>Sets the stub of Controller.HandleUnknownAction(String actionName)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.HttpNotFound(System.String)">
            <summary>Sets the stub of Controller.HttpNotFound(String statusDescription)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.HttpNotFoundString">
            <summary>Sets the stub of Controller.HttpNotFound(String statusDescription)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.Initialize(System.Web.Routing.RequestContext)">
            <summary>Sets the stub of Controller.Initialize(RequestContext requestContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.InitializeRequestContext">
            <summary>Sets the stub of Controller.Initialize(RequestContext requestContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.InitializeStub">
            <summary>Initializes a new instance of type StubSessionController</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.JavaScript(System.String)">
            <summary>Sets the stub of Controller.JavaScript(String script)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.JavaScriptString">
            <summary>Sets the stub of Controller.JavaScript(String script)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.Json(System.Object,System.String,System.Text.Encoding)">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.Json(System.Object,System.String,System.Text.Encoding,System.Web.Mvc.JsonRequestBehavior)">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding, JsonRequestBehavior behavior)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.JsonObjectStringEncoding">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.JsonObjectStringEncodingJsonRequestBehavior">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding, JsonRequestBehavior behavior)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
            <summary>Sets the stub of Controller.OnActionExecuted(ActionExecutedContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.OnActionExecutedActionExecutedContext">
            <summary>Sets the stub of Controller.OnActionExecuted(ActionExecutedContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <summary>Sets the stub of Controller.OnActionExecuting(ActionExecutingContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.OnActionExecutingActionExecutingContext">
            <summary>Sets the stub of Controller.OnActionExecuting(ActionExecutingContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
            <summary>Sets the stub of Controller.OnAuthorization(AuthorizationContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.OnAuthorizationAuthorizationContext">
            <summary>Sets the stub of Controller.OnAuthorization(AuthorizationContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.OnException(System.Web.Mvc.ExceptionContext)">
            <summary>Sets the stub of Controller.OnException(ExceptionContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.OnExceptionExceptionContext">
            <summary>Sets the stub of Controller.OnException(ExceptionContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
            <summary>Sets the stub of Controller.OnResultExecuted(ResultExecutedContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.OnResultExecutedResultExecutedContext">
            <summary>Sets the stub of Controller.OnResultExecuted(ResultExecutedContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
            <summary>Sets the stub of Controller.OnResultExecuting(ResultExecutingContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.OnResultExecutingResultExecutingContext">
            <summary>Sets the stub of Controller.OnResultExecuting(ResultExecutingContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.PartialView(System.String,System.Object)">
            <summary>Sets the stub of Controller.PartialView(String viewName, Object model)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.PartialViewStringObject">
            <summary>Sets the stub of Controller.PartialView(String viewName, Object model)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.Redirect(System.String)">
            <summary>Sets the stub of Controller.Redirect(String url)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.RedirectPermanent(System.String)">
            <summary>Sets the stub of Controller.RedirectPermanent(String url)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.RedirectPermanentString">
            <summary>Sets the stub of Controller.RedirectPermanent(String url)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.RedirectString">
            <summary>Sets the stub of Controller.Redirect(String url)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.RedirectToAction(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToAction(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.RedirectToActionPermanent(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToActionPermanent(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.RedirectToActionPermanentStringStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToActionPermanent(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.RedirectToActionStringStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToAction(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToRoute(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToRoutePermanent(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.RedirectToRoutePermanentStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToRoutePermanent(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.RedirectToRouteStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToRoute(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.View(System.Web.Mvc.IView,System.Object)">
            <summary>Sets the stub of Controller.View(IView view, Object model)</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.View(System.String,System.String,System.Object)">
            <summary>Sets the stub of Controller.View(String viewName, String masterName, Object model)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.ViewIViewObject">
            <summary>Sets the stub of Controller.View(IView view, Object model)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.ViewStringStringObject">
            <summary>Sets the stub of Controller.View(String viewName, String masterName, Object model)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.DisableAsyncSupport">
            <summary>Sets the stub of Controller.get_DisableAsyncSupport()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Controllers.Fakes.StubSessionController.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Fakes.ShimOrganizerAreaRegistration">
            <summary>Shim type of MyEvents.Web.Areas.Organizer.OrganizerAreaRegistration</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Fakes.ShimOrganizerAreaRegistration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Fakes.ShimOrganizerAreaRegistration.#ctor(MyEvents.Web.Areas.Organizer.OrganizerAreaRegistration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Fakes.ShimOrganizerAreaRegistration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Fakes.ShimOrganizerAreaRegistration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Fakes.ShimOrganizerAreaRegistration.AreaNameGet">
            <summary>Sets the shim of OrganizerAreaRegistration.get_AreaName()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Fakes.ShimOrganizerAreaRegistration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Fakes.ShimOrganizerAreaRegistration.Constructor">
            <summary>Sets the shim of OrganizerAreaRegistration.OrganizerAreaRegistration()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Fakes.ShimOrganizerAreaRegistration.RegisterAreaAreaRegistrationContext">
            <summary>Sets the shim of OrganizerAreaRegistration.RegisterArea(AreaRegistrationContext context)</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Fakes.ShimOrganizerAreaRegistration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Fakes.ShimOrganizerAreaRegistration.AllInstances.AreaNameGet">
            <summary>Sets the shim of OrganizerAreaRegistration.get_AreaName()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Fakes.ShimOrganizerAreaRegistration.AllInstances.RegisterAreaAreaRegistrationContext">
            <summary>Sets the shim of OrganizerAreaRegistration.RegisterArea(AreaRegistrationContext context)</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Fakes.StubOrganizerAreaRegistration">
            <summary>Stub type of MyEvents.Web.Areas.Organizer.OrganizerAreaRegistration</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Fakes.StubOrganizerAreaRegistration.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Fakes.StubOrganizerAreaRegistration.AreaNameGet">
            <summary>Sets the stub of OrganizerAreaRegistration.get_AreaName()</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Fakes.StubOrganizerAreaRegistration.InitializeStub">
            <summary>Initializes a new instance of type StubOrganizerAreaRegistration</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Fakes.StubOrganizerAreaRegistration.RegisterArea(System.Web.Mvc.AreaRegistrationContext)">
            <summary>Sets the stub of OrganizerAreaRegistration.RegisterArea(AreaRegistrationContext context)</summary>
        </member>
        <member name="F:MyEvents.Web.Areas.Organizer.Fakes.StubOrganizerAreaRegistration.RegisterAreaAreaRegistrationContext">
            <summary>Sets the stub of OrganizerAreaRegistration.RegisterArea(AreaRegistrationContext context)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Fakes.StubOrganizerAreaRegistration.AreaName">
            <summary>Sets the stub of OrganizerAreaRegistration.get_AreaName()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Fakes.StubOrganizerAreaRegistration.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Fakes.StubOrganizerAreaRegistration.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Fakes.StubOrganizerAreaRegistration.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel">
            <summary>Shim type of MyEvents.Web.Areas.Organizer.Models.EditEventViewModel</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.#ctor(MyEvents.Web.Areas.Organizer.Models.EditEventViewModel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AddressGet">
            <summary>Sets the shim of EditEventViewModel.get_Address()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AddressSetString">
            <summary>Sets the shim of EditEventViewModel.set_Address(String value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.CityGet">
            <summary>Sets the shim of EditEventViewModel.get_City()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.CitySetString">
            <summary>Sets the shim of EditEventViewModel.set_City(String value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.Constructor">
            <summary>Sets the shim of EditEventViewModel.EditEventViewModel()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.DateGet">
            <summary>Sets the shim of EditEventViewModel.get_Date()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.DateSetDateTime">
            <summary>Sets the shim of EditEventViewModel.set_Date(DateTime value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.DescriptionGet">
            <summary>Sets the shim of EditEventViewModel.get_Description()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.DescriptionSetString">
            <summary>Sets the shim of EditEventViewModel.set_Description(String value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.EndTimeGet">
            <summary>Sets the shim of EditEventViewModel.get_EndTime()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.EndTimeSetDateTime">
            <summary>Sets the shim of EditEventViewModel.set_EndTime(DateTime value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.EventDefinitionIdGet">
            <summary>Sets the shim of EditEventViewModel.get_EventDefinitionId()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.EventDefinitionIdSetInt32">
            <summary>Sets the shim of EditEventViewModel.set_EventDefinitionId(Int32 value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.GetRoomList">
            <summary>Sets the shim of EditEventViewModel.GetRoomList()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.HasLogoGet">
            <summary>Sets the shim of EditEventViewModel.get_HasLogo()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.HasLogoSetBoolean">
            <summary>Sets the shim of EditEventViewModel.set_HasLogo(Boolean value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.IsLogoSettedGet">
            <summary>Sets the shim of EditEventViewModel.get_IsLogoSetted()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.IsLogoSettedSetBoolean">
            <summary>Sets the shim of EditEventViewModel.set_IsLogoSetted(Boolean value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.LatitudeGet">
            <summary>Sets the shim of EditEventViewModel.get_Latitude()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.LatitudeSetSingle">
            <summary>Sets the shim of EditEventViewModel.set_Latitude(Single value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.LogoGet">
            <summary>Sets the shim of EditEventViewModel.get_Logo()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.LogoSetByteArray">
            <summary>Sets the shim of EditEventViewModel.set_Logo(Byte[] value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.LongitudeGet">
            <summary>Sets the shim of EditEventViewModel.get_Longitude()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.LongitudeSetSingle">
            <summary>Sets the shim of EditEventViewModel.set_Longitude(Single value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.NameGet">
            <summary>Sets the shim of EditEventViewModel.get_Name()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.NameSetString">
            <summary>Sets the shim of EditEventViewModel.set_Name(String value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.OrganizerIdGet">
            <summary>Sets the shim of EditEventViewModel.get_OrganizerId()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.OrganizerIdSetInt32">
            <summary>Sets the shim of EditEventViewModel.set_OrganizerId(Int32 value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.RoomNumberGet">
            <summary>Sets the shim of EditEventViewModel.get_RoomNumber()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.RoomNumberSetInt32">
            <summary>Sets the shim of EditEventViewModel.set_RoomNumber(Int32 value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.RoomsGet">
            <summary>Sets the shim of EditEventViewModel.get_Rooms()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.RoomsSetSelectList">
            <summary>Sets the shim of EditEventViewModel.set_Rooms(SelectList value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.StartTimeGet">
            <summary>Sets the shim of EditEventViewModel.get_StartTime()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.StartTimeSetDateTime">
            <summary>Sets the shim of EditEventViewModel.set_StartTime(DateTime value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.TagsGet">
            <summary>Sets the shim of EditEventViewModel.get_Tags()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.TagsSetString">
            <summary>Sets the shim of EditEventViewModel.set_Tags(String value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.TimeZoneOffsetGet">
            <summary>Sets the shim of EditEventViewModel.get_TimeZoneOffset()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.TimeZoneOffsetSetInt32">
            <summary>Sets the shim of EditEventViewModel.set_TimeZoneOffset(Int32 value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.TwitterAccountGet">
            <summary>Sets the shim of EditEventViewModel.get_TwitterAccount()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.TwitterAccountSetString">
            <summary>Sets the shim of EditEventViewModel.set_TwitterAccount(String value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.ZipCodeGet">
            <summary>Sets the shim of EditEventViewModel.get_ZipCode()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.ZipCodeSetString">
            <summary>Sets the shim of EditEventViewModel.set_ZipCode(String value)</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AllInstances.AddressGet">
            <summary>Sets the shim of EditEventViewModel.get_Address()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AllInstances.AddressSetString">
            <summary>Sets the shim of EditEventViewModel.set_Address(String value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AllInstances.CityGet">
            <summary>Sets the shim of EditEventViewModel.get_City()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AllInstances.CitySetString">
            <summary>Sets the shim of EditEventViewModel.set_City(String value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AllInstances.DateGet">
            <summary>Sets the shim of EditEventViewModel.get_Date()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AllInstances.DateSetDateTime">
            <summary>Sets the shim of EditEventViewModel.set_Date(DateTime value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AllInstances.DescriptionGet">
            <summary>Sets the shim of EditEventViewModel.get_Description()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AllInstances.DescriptionSetString">
            <summary>Sets the shim of EditEventViewModel.set_Description(String value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AllInstances.EndTimeGet">
            <summary>Sets the shim of EditEventViewModel.get_EndTime()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AllInstances.EndTimeSetDateTime">
            <summary>Sets the shim of EditEventViewModel.set_EndTime(DateTime value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AllInstances.EventDefinitionIdGet">
            <summary>Sets the shim of EditEventViewModel.get_EventDefinitionId()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AllInstances.EventDefinitionIdSetInt32">
            <summary>Sets the shim of EditEventViewModel.set_EventDefinitionId(Int32 value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AllInstances.GetRoomList">
            <summary>Sets the shim of EditEventViewModel.GetRoomList()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AllInstances.HasLogoGet">
            <summary>Sets the shim of EditEventViewModel.get_HasLogo()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AllInstances.HasLogoSetBoolean">
            <summary>Sets the shim of EditEventViewModel.set_HasLogo(Boolean value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AllInstances.IsLogoSettedGet">
            <summary>Sets the shim of EditEventViewModel.get_IsLogoSetted()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AllInstances.IsLogoSettedSetBoolean">
            <summary>Sets the shim of EditEventViewModel.set_IsLogoSetted(Boolean value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AllInstances.LatitudeGet">
            <summary>Sets the shim of EditEventViewModel.get_Latitude()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AllInstances.LatitudeSetSingle">
            <summary>Sets the shim of EditEventViewModel.set_Latitude(Single value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AllInstances.LogoGet">
            <summary>Sets the shim of EditEventViewModel.get_Logo()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AllInstances.LogoSetByteArray">
            <summary>Sets the shim of EditEventViewModel.set_Logo(Byte[] value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AllInstances.LongitudeGet">
            <summary>Sets the shim of EditEventViewModel.get_Longitude()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AllInstances.LongitudeSetSingle">
            <summary>Sets the shim of EditEventViewModel.set_Longitude(Single value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AllInstances.NameGet">
            <summary>Sets the shim of EditEventViewModel.get_Name()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AllInstances.NameSetString">
            <summary>Sets the shim of EditEventViewModel.set_Name(String value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AllInstances.OrganizerIdGet">
            <summary>Sets the shim of EditEventViewModel.get_OrganizerId()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AllInstances.OrganizerIdSetInt32">
            <summary>Sets the shim of EditEventViewModel.set_OrganizerId(Int32 value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AllInstances.RoomNumberGet">
            <summary>Sets the shim of EditEventViewModel.get_RoomNumber()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AllInstances.RoomNumberSetInt32">
            <summary>Sets the shim of EditEventViewModel.set_RoomNumber(Int32 value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AllInstances.RoomsGet">
            <summary>Sets the shim of EditEventViewModel.get_Rooms()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AllInstances.RoomsSetSelectList">
            <summary>Sets the shim of EditEventViewModel.set_Rooms(SelectList value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AllInstances.StartTimeGet">
            <summary>Sets the shim of EditEventViewModel.get_StartTime()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AllInstances.StartTimeSetDateTime">
            <summary>Sets the shim of EditEventViewModel.set_StartTime(DateTime value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AllInstances.TagsGet">
            <summary>Sets the shim of EditEventViewModel.get_Tags()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AllInstances.TagsSetString">
            <summary>Sets the shim of EditEventViewModel.set_Tags(String value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AllInstances.TimeZoneOffsetGet">
            <summary>Sets the shim of EditEventViewModel.get_TimeZoneOffset()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AllInstances.TimeZoneOffsetSetInt32">
            <summary>Sets the shim of EditEventViewModel.set_TimeZoneOffset(Int32 value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AllInstances.TwitterAccountGet">
            <summary>Sets the shim of EditEventViewModel.get_TwitterAccount()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AllInstances.TwitterAccountSetString">
            <summary>Sets the shim of EditEventViewModel.set_TwitterAccount(String value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AllInstances.ZipCodeGet">
            <summary>Sets the shim of EditEventViewModel.get_ZipCode()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimEditEventViewModel.AllInstances.ZipCodeSetString">
            <summary>Sets the shim of EditEventViewModel.set_ZipCode(String value)</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimHomeViewModel">
            <summary>Shim type of MyEvents.Web.Areas.Organizer.Models.HomeViewModel</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimHomeViewModel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimHomeViewModel.#ctor(MyEvents.Web.Areas.Organizer.Models.HomeViewModel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimHomeViewModel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimHomeViewModel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimHomeViewModel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimHomeViewModel.Constructor">
            <summary>Sets the shim of HomeViewModel.HomeViewModel()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimHomeViewModel.EventsGet">
            <summary>Sets the shim of HomeViewModel.get_Events()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimHomeViewModel.EventsSetIEnumerableOfEventDefinition">
            <summary>Sets the shim of HomeViewModel.set_Events(IEnumerable`1&lt;EventDefinition&gt; value)</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimHomeViewModel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimHomeViewModel.AllInstances.EventsGet">
            <summary>Sets the shim of HomeViewModel.get_Events()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimHomeViewModel.AllInstances.EventsSetIEnumerableOfEventDefinition">
            <summary>Sets the shim of HomeViewModel.set_Events(IEnumerable`1&lt;EventDefinition&gt; value)</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimManageMaterialsViewModel">
            <summary>Shim type of MyEvents.Web.Areas.Organizer.Models.ManageMaterialsViewModel</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimManageMaterialsViewModel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimManageMaterialsViewModel.#ctor(MyEvents.Web.Areas.Organizer.Models.ManageMaterialsViewModel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimManageMaterialsViewModel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimManageMaterialsViewModel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimManageMaterialsViewModel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimManageMaterialsViewModel.Constructor">
            <summary>Sets the shim of ManageMaterialsViewModel.ManageMaterialsViewModel()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimManageMaterialsViewModel.MaterialsGet">
            <summary>Sets the shim of ManageMaterialsViewModel.get_Materials()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimManageMaterialsViewModel.MaterialsSetListOfMaterial">
            <summary>Sets the shim of ManageMaterialsViewModel.set_Materials(List`1&lt;Material&gt; value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimManageMaterialsViewModel.SessionIdGet">
            <summary>Sets the shim of ManageMaterialsViewModel.get_SessionId()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimManageMaterialsViewModel.SessionIdSetInt32">
            <summary>Sets the shim of ManageMaterialsViewModel.set_SessionId(Int32 value)</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimManageMaterialsViewModel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimManageMaterialsViewModel.AllInstances.MaterialsGet">
            <summary>Sets the shim of ManageMaterialsViewModel.get_Materials()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimManageMaterialsViewModel.AllInstances.MaterialsSetListOfMaterial">
            <summary>Sets the shim of ManageMaterialsViewModel.set_Materials(List`1&lt;Material&gt; value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimManageMaterialsViewModel.AllInstances.SessionIdGet">
            <summary>Sets the shim of ManageMaterialsViewModel.get_SessionId()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimManageMaterialsViewModel.AllInstances.SessionIdSetInt32">
            <summary>Sets the shim of ManageMaterialsViewModel.set_SessionId(Int32 value)</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimManageSessionViewModel">
            <summary>Shim type of MyEvents.Web.Areas.Organizer.Models.ManageSessionViewModel</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimManageSessionViewModel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimManageSessionViewModel.#ctor(MyEvents.Web.Areas.Organizer.Models.ManageSessionViewModel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimManageSessionViewModel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimManageSessionViewModel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimManageSessionViewModel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimManageSessionViewModel.Constructor">
            <summary>Sets the shim of ManageSessionViewModel.ManageSessionViewModel()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimManageSessionViewModel.EventDefinitonIdGet">
            <summary>Sets the shim of ManageSessionViewModel.get_EventDefinitonId()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimManageSessionViewModel.EventDefinitonIdSetInt32">
            <summary>Sets the shim of ManageSessionViewModel.set_EventDefinitonId(Int32 value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimManageSessionViewModel.SessionsGet">
            <summary>Sets the shim of ManageSessionViewModel.get_Sessions()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimManageSessionViewModel.SessionsSetIEnumerableOfSession">
            <summary>Sets the shim of ManageSessionViewModel.set_Sessions(IEnumerable`1&lt;Session&gt; value)</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimManageSessionViewModel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimManageSessionViewModel.AllInstances.EventDefinitonIdGet">
            <summary>Sets the shim of ManageSessionViewModel.get_EventDefinitonId()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimManageSessionViewModel.AllInstances.EventDefinitonIdSetInt32">
            <summary>Sets the shim of ManageSessionViewModel.set_EventDefinitonId(Int32 value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimManageSessionViewModel.AllInstances.SessionsGet">
            <summary>Sets the shim of ManageSessionViewModel.get_Sessions()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimManageSessionViewModel.AllInstances.SessionsSetIEnumerableOfSession">
            <summary>Sets the shim of ManageSessionViewModel.set_Sessions(IEnumerable`1&lt;Session&gt; value)</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimRegisteredUsersViewModel">
            <summary>Shim type of MyEvents.Web.Areas.Organizer.Models.RegisteredUsersViewModel</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimRegisteredUsersViewModel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimRegisteredUsersViewModel.#ctor(MyEvents.Web.Areas.Organizer.Models.RegisteredUsersViewModel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimRegisteredUsersViewModel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimRegisteredUsersViewModel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimRegisteredUsersViewModel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimRegisteredUsersViewModel.Constructor">
            <summary>Sets the shim of RegisteredUsersViewModel.RegisteredUsersViewModel()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimRegisteredUsersViewModel.LikesGet">
            <summary>Sets the shim of RegisteredUsersViewModel.get_Likes()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimRegisteredUsersViewModel.LikesSetInt32">
            <summary>Sets the shim of RegisteredUsersViewModel.set_Likes(Int32 value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimRegisteredUsersViewModel.RegisteredUsersGet">
            <summary>Sets the shim of RegisteredUsersViewModel.get_RegisteredUsers()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimRegisteredUsersViewModel.RegisteredUsersSetIEnumerableOfRegisteredUser">
            <summary>Sets the shim of RegisteredUsersViewModel.set_RegisteredUsers(IEnumerable`1&lt;RegisteredUser&gt; value)</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimRegisteredUsersViewModel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimRegisteredUsersViewModel.AllInstances.LikesGet">
            <summary>Sets the shim of RegisteredUsersViewModel.get_Likes()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimRegisteredUsersViewModel.AllInstances.LikesSetInt32">
            <summary>Sets the shim of RegisteredUsersViewModel.set_Likes(Int32 value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimRegisteredUsersViewModel.AllInstances.RegisteredUsersGet">
            <summary>Sets the shim of RegisteredUsersViewModel.get_RegisteredUsers()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimRegisteredUsersViewModel.AllInstances.RegisteredUsersSetIEnumerableOfRegisteredUser">
            <summary>Sets the shim of RegisteredUsersViewModel.set_RegisteredUsers(IEnumerable`1&lt;RegisteredUser&gt; value)</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleEvent">
            <summary>Shim type of MyEvents.Web.Areas.Organizer.Models.ScheduleEvent</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleEvent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleEvent.#ctor(MyEvents.Web.Areas.Organizer.Models.ScheduleEvent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleEvent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleEvent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleEvent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleEvent.Constructor">
            <summary>Sets the shim of ScheduleEvent.ScheduleEvent()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleEvent.EventDefinitionIdGet">
            <summary>Sets the shim of ScheduleEvent.get_EventDefinitionId()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleEvent.EventDefinitionIdSetInt32">
            <summary>Sets the shim of ScheduleEvent.set_EventDefinitionId(Int32 value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleEvent.RoomsGet">
            <summary>Sets the shim of ScheduleEvent.get_Rooms()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleEvent.RoomsSetInt32">
            <summary>Sets the shim of ScheduleEvent.set_Rooms(Int32 value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleEvent.SessionsGet">
            <summary>Sets the shim of ScheduleEvent.get_Sessions()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleEvent.SessionsSetListOfScheduleSession">
            <summary>Sets the shim of ScheduleEvent.set_Sessions(List`1&lt;ScheduleSession&gt; value)</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleEvent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleEvent.AllInstances.EventDefinitionIdGet">
            <summary>Sets the shim of ScheduleEvent.get_EventDefinitionId()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleEvent.AllInstances.EventDefinitionIdSetInt32">
            <summary>Sets the shim of ScheduleEvent.set_EventDefinitionId(Int32 value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleEvent.AllInstances.RoomsGet">
            <summary>Sets the shim of ScheduleEvent.get_Rooms()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleEvent.AllInstances.RoomsSetInt32">
            <summary>Sets the shim of ScheduleEvent.set_Rooms(Int32 value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleEvent.AllInstances.SessionsGet">
            <summary>Sets the shim of ScheduleEvent.get_Sessions()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleEvent.AllInstances.SessionsSetListOfScheduleSession">
            <summary>Sets the shim of ScheduleEvent.set_Sessions(List`1&lt;ScheduleSession&gt; value)</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleSession">
            <summary>Shim type of MyEvents.Web.Areas.Organizer.Models.ScheduleSession</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleSession.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleSession.#ctor(MyEvents.Web.Areas.Organizer.Models.ScheduleSession)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleSession.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleSession.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleSession.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleSession.Constructor">
            <summary>Sets the shim of ScheduleSession.ScheduleSession()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleSession.DurationGet">
            <summary>Sets the shim of ScheduleSession.get_Duration()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleSession.DurationSetInt32">
            <summary>Sets the shim of ScheduleSession.set_Duration(Int32 value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleSession.EndTimeGet">
            <summary>Sets the shim of ScheduleSession.get_EndTime()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleSession.IsAssignedGet">
            <summary>Sets the shim of ScheduleSession.get_IsAssigned()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleSession.RoomNumberGet">
            <summary>Sets the shim of ScheduleSession.get_RoomNumber()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleSession.RoomNumberSetInt32">
            <summary>Sets the shim of ScheduleSession.set_RoomNumber(Int32 value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleSession.SessionIdGet">
            <summary>Sets the shim of ScheduleSession.get_SessionId()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleSession.SessionIdSetInt32">
            <summary>Sets the shim of ScheduleSession.set_SessionId(Int32 value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleSession.SpeakerGet">
            <summary>Sets the shim of ScheduleSession.get_Speaker()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleSession.SpeakerSetString">
            <summary>Sets the shim of ScheduleSession.set_Speaker(String value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleSession.StartTimeGet">
            <summary>Sets the shim of ScheduleSession.get_StartTime()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleSession.StartTimeSetDateTime">
            <summary>Sets the shim of ScheduleSession.set_StartTime(DateTime value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleSession.TitleGet">
            <summary>Sets the shim of ScheduleSession.get_Title()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleSession.TitleSetString">
            <summary>Sets the shim of ScheduleSession.set_Title(String value)</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleSession.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleSession.AllInstances.DurationGet">
            <summary>Sets the shim of ScheduleSession.get_Duration()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleSession.AllInstances.DurationSetInt32">
            <summary>Sets the shim of ScheduleSession.set_Duration(Int32 value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleSession.AllInstances.EndTimeGet">
            <summary>Sets the shim of ScheduleSession.get_EndTime()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleSession.AllInstances.IsAssignedGet">
            <summary>Sets the shim of ScheduleSession.get_IsAssigned()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleSession.AllInstances.RoomNumberGet">
            <summary>Sets the shim of ScheduleSession.get_RoomNumber()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleSession.AllInstances.RoomNumberSetInt32">
            <summary>Sets the shim of ScheduleSession.set_RoomNumber(Int32 value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleSession.AllInstances.SessionIdGet">
            <summary>Sets the shim of ScheduleSession.get_SessionId()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleSession.AllInstances.SessionIdSetInt32">
            <summary>Sets the shim of ScheduleSession.set_SessionId(Int32 value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleSession.AllInstances.SpeakerGet">
            <summary>Sets the shim of ScheduleSession.get_Speaker()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleSession.AllInstances.SpeakerSetString">
            <summary>Sets the shim of ScheduleSession.set_Speaker(String value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleSession.AllInstances.StartTimeGet">
            <summary>Sets the shim of ScheduleSession.get_StartTime()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleSession.AllInstances.StartTimeSetDateTime">
            <summary>Sets the shim of ScheduleSession.set_StartTime(DateTime value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleSession.AllInstances.TitleGet">
            <summary>Sets the shim of ScheduleSession.get_Title()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleSession.AllInstances.TitleSetString">
            <summary>Sets the shim of ScheduleSession.set_Title(String value)</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleViewModel">
            <summary>Shim type of MyEvents.Web.Areas.Organizer.Models.ScheduleViewModel</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleViewModel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleViewModel.#ctor(MyEvents.Web.Areas.Organizer.Models.ScheduleViewModel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleViewModel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleViewModel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleViewModel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleViewModel.Constructor">
            <summary>Sets the shim of ScheduleViewModel.ScheduleViewModel()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleViewModel.EventDefinitionGet">
            <summary>Sets the shim of ScheduleViewModel.get_EventDefinition()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleViewModel.EventDefinitionSetScheduleEvent">
            <summary>Sets the shim of ScheduleViewModel.set_EventDefinition(ScheduleEvent value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleViewModel.TimesGet">
            <summary>Sets the shim of ScheduleViewModel.get_Times()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleViewModel.TimesSetListOfDateTime">
            <summary>Sets the shim of ScheduleViewModel.set_Times(List`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleViewModel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleViewModel.AllInstances.EventDefinitionGet">
            <summary>Sets the shim of ScheduleViewModel.get_EventDefinition()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleViewModel.AllInstances.EventDefinitionSetScheduleEvent">
            <summary>Sets the shim of ScheduleViewModel.set_EventDefinition(ScheduleEvent value)</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleViewModel.AllInstances.TimesGet">
            <summary>Sets the shim of ScheduleViewModel.get_Times()</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.ShimScheduleViewModel.AllInstances.TimesSetListOfDateTime">
            <summary>Sets the shim of ScheduleViewModel.set_Times(List`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Models.Fakes.StubEditEventViewModel">
            <summary>Stub type of MyEvents.Web.Areas.Organizer.Models.EditEventViewModel</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.StubEditEventViewModel.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.StubEditEventViewModel.InitializeStub">
            <summary>Initializes a new instance of type StubEditEventViewModel</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.StubEditEventViewModel.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.StubEditEventViewModel.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.StubEditEventViewModel.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Models.Fakes.StubHomeViewModel">
            <summary>Stub type of MyEvents.Web.Areas.Organizer.Models.HomeViewModel</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.StubHomeViewModel.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.StubHomeViewModel.InitializeStub">
            <summary>Initializes a new instance of type StubHomeViewModel</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.StubHomeViewModel.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.StubHomeViewModel.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.StubHomeViewModel.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Models.Fakes.StubManageMaterialsViewModel">
            <summary>Stub type of MyEvents.Web.Areas.Organizer.Models.ManageMaterialsViewModel</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.StubManageMaterialsViewModel.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.StubManageMaterialsViewModel.InitializeStub">
            <summary>Initializes a new instance of type StubManageMaterialsViewModel</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.StubManageMaterialsViewModel.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.StubManageMaterialsViewModel.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.StubManageMaterialsViewModel.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Models.Fakes.StubManageSessionViewModel">
            <summary>Stub type of MyEvents.Web.Areas.Organizer.Models.ManageSessionViewModel</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.StubManageSessionViewModel.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.StubManageSessionViewModel.InitializeStub">
            <summary>Initializes a new instance of type StubManageSessionViewModel</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.StubManageSessionViewModel.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.StubManageSessionViewModel.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.StubManageSessionViewModel.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Models.Fakes.StubRegisteredUsersViewModel">
            <summary>Stub type of MyEvents.Web.Areas.Organizer.Models.RegisteredUsersViewModel</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.StubRegisteredUsersViewModel.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.StubRegisteredUsersViewModel.InitializeStub">
            <summary>Initializes a new instance of type StubRegisteredUsersViewModel</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.StubRegisteredUsersViewModel.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.StubRegisteredUsersViewModel.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.StubRegisteredUsersViewModel.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Models.Fakes.StubScheduleEvent">
            <summary>Stub type of MyEvents.Web.Areas.Organizer.Models.ScheduleEvent</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.StubScheduleEvent.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.StubScheduleEvent.InitializeStub">
            <summary>Initializes a new instance of type StubScheduleEvent</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.StubScheduleEvent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.StubScheduleEvent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.StubScheduleEvent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Models.Fakes.StubScheduleSession">
            <summary>Stub type of MyEvents.Web.Areas.Organizer.Models.ScheduleSession</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.StubScheduleSession.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.StubScheduleSession.InitializeStub">
            <summary>Initializes a new instance of type StubScheduleSession</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.StubScheduleSession.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.StubScheduleSession.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.StubScheduleSession.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:MyEvents.Web.Areas.Organizer.Models.Fakes.StubScheduleViewModel">
            <summary>Stub type of MyEvents.Web.Areas.Organizer.Models.ScheduleViewModel</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.StubScheduleViewModel.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:MyEvents.Web.Areas.Organizer.Models.Fakes.StubScheduleViewModel.InitializeStub">
            <summary>Initializes a new instance of type StubScheduleViewModel</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.StubScheduleViewModel.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.StubScheduleViewModel.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.Areas.Organizer.Models.Fakes.StubScheduleViewModel.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:MyEvents.Web.Authentication.Fakes.ShimAuthorizeAttribute">
            <summary>Shim type of MyEvents.Web.Authentication.AuthorizeAttribute</summary>
        </member>
        <member name="M:MyEvents.Web.Authentication.Fakes.ShimAuthorizeAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.Authentication.Fakes.ShimAuthorizeAttribute.#ctor(MyEvents.Web.Authentication.AuthorizeAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.Authentication.Fakes.ShimAuthorizeAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Authentication.Fakes.ShimAuthorizeAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Authentication.Fakes.ShimAuthorizeAttribute.Bind(System.Web.Mvc.IAuthorizationFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Authentication.Fakes.ShimAuthorizeAttribute.Bind(System.Web.Mvc.IMvcFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimAuthorizeAttribute.AuthenticationServiceGet">
            <summary>Sets the shim of AuthorizeAttribute.get_AuthenticationService()</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimAuthorizeAttribute.AuthenticationServiceSetIAuthenticationService">
            <summary>Sets the shim of AuthorizeAttribute.set_AuthenticationService(IAuthenticationService value)</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimAuthorizeAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimAuthorizeAttribute.Constructor">
            <summary>Sets the shim of AuthorizeAttribute.AuthorizeAttribute()</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimAuthorizeAttribute.OnAuthorizationAuthorizationContext">
            <summary>Sets the shim of AuthorizeAttribute.OnAuthorization(AuthorizationContext filterContext)</summary>
        </member>
        <member name="T:MyEvents.Web.Authentication.Fakes.ShimAuthorizeAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimAuthorizeAttribute.AllInstances.AuthenticationServiceGet">
            <summary>Sets the shim of AuthorizeAttribute.get_AuthenticationService()</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimAuthorizeAttribute.AllInstances.AuthenticationServiceSetIAuthenticationService">
            <summary>Sets the shim of AuthorizeAttribute.set_AuthenticationService(IAuthenticationService value)</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimAuthorizeAttribute.AllInstances.OnAuthorizationAuthorizationContext">
            <summary>Sets the shim of AuthorizeAttribute.OnAuthorization(AuthorizationContext filterContext)</summary>
        </member>
        <member name="T:MyEvents.Web.Authentication.Fakes.ShimMyEventsIdentity">
            <summary>Shim type of MyEvents.Web.Authentication.MyEventsIdentity</summary>
        </member>
        <member name="M:MyEvents.Web.Authentication.Fakes.ShimMyEventsIdentity.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.Authentication.Fakes.ShimMyEventsIdentity.#ctor(MyEvents.Web.Authentication.MyEventsIdentity)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.Authentication.Fakes.ShimMyEventsIdentity.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Authentication.Fakes.ShimMyEventsIdentity.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Authentication.Fakes.ShimMyEventsIdentity.Bind(System.Security.Principal.IIdentity)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimMyEventsIdentity.AccessTokenGet">
            <summary>Sets the shim of MyEventsIdentity.get_AccessToken()</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimMyEventsIdentity.AccessTokenSetString">
            <summary>Sets the shim of MyEventsIdentity.set_AccessToken(String value)</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimMyEventsIdentity.AuthenticationTypeGet">
            <summary>Sets the shim of MyEventsIdentity.get_AuthenticationType()</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimMyEventsIdentity.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimMyEventsIdentity.BioGet">
            <summary>Sets the shim of MyEventsIdentity.get_Bio()</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimMyEventsIdentity.BioSetString">
            <summary>Sets the shim of MyEventsIdentity.set_Bio(String value)</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimMyEventsIdentity.CityGet">
            <summary>Sets the shim of MyEventsIdentity.get_City()</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimMyEventsIdentity.CitySetString">
            <summary>Sets the shim of MyEventsIdentity.set_City(String value)</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimMyEventsIdentity.Constructor">
            <summary>Sets the shim of MyEventsIdentity.MyEventsIdentity()</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimMyEventsIdentity.EmailGet">
            <summary>Sets the shim of MyEventsIdentity.get_Email()</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimMyEventsIdentity.EmailSetString">
            <summary>Sets the shim of MyEventsIdentity.set_Email(String value)</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimMyEventsIdentity.IsAuthenticatedGet">
            <summary>Sets the shim of MyEventsIdentity.get_IsAuthenticated()</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimMyEventsIdentity.NameGet">
            <summary>Sets the shim of MyEventsIdentity.get_Name()</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimMyEventsIdentity.ThirdPartyUserIdGet">
            <summary>Sets the shim of MyEventsIdentity.get_ThirdPartyUserId()</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimMyEventsIdentity.ThirdPartyUserIdSetString">
            <summary>Sets the shim of MyEventsIdentity.set_ThirdPartyUserId(String value)</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimMyEventsIdentity.UserIdGet">
            <summary>Sets the shim of MyEventsIdentity.get_UserId()</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimMyEventsIdentity.UserIdSetInt32">
            <summary>Sets the shim of MyEventsIdentity.set_UserId(Int32 value)</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimMyEventsIdentity.UserNameGet">
            <summary>Sets the shim of MyEventsIdentity.get_UserName()</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimMyEventsIdentity.UserNameSetString">
            <summary>Sets the shim of MyEventsIdentity.set_UserName(String value)</summary>
        </member>
        <member name="T:MyEvents.Web.Authentication.Fakes.ShimMyEventsIdentity.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimMyEventsIdentity.AllInstances.AccessTokenGet">
            <summary>Sets the shim of MyEventsIdentity.get_AccessToken()</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimMyEventsIdentity.AllInstances.AccessTokenSetString">
            <summary>Sets the shim of MyEventsIdentity.set_AccessToken(String value)</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimMyEventsIdentity.AllInstances.AuthenticationTypeGet">
            <summary>Sets the shim of MyEventsIdentity.get_AuthenticationType()</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimMyEventsIdentity.AllInstances.BioGet">
            <summary>Sets the shim of MyEventsIdentity.get_Bio()</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimMyEventsIdentity.AllInstances.BioSetString">
            <summary>Sets the shim of MyEventsIdentity.set_Bio(String value)</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimMyEventsIdentity.AllInstances.CityGet">
            <summary>Sets the shim of MyEventsIdentity.get_City()</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimMyEventsIdentity.AllInstances.CitySetString">
            <summary>Sets the shim of MyEventsIdentity.set_City(String value)</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimMyEventsIdentity.AllInstances.EmailGet">
            <summary>Sets the shim of MyEventsIdentity.get_Email()</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimMyEventsIdentity.AllInstances.EmailSetString">
            <summary>Sets the shim of MyEventsIdentity.set_Email(String value)</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimMyEventsIdentity.AllInstances.IsAuthenticatedGet">
            <summary>Sets the shim of MyEventsIdentity.get_IsAuthenticated()</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimMyEventsIdentity.AllInstances.NameGet">
            <summary>Sets the shim of MyEventsIdentity.get_Name()</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimMyEventsIdentity.AllInstances.ThirdPartyUserIdGet">
            <summary>Sets the shim of MyEventsIdentity.get_ThirdPartyUserId()</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimMyEventsIdentity.AllInstances.ThirdPartyUserIdSetString">
            <summary>Sets the shim of MyEventsIdentity.set_ThirdPartyUserId(String value)</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimMyEventsIdentity.AllInstances.UserIdGet">
            <summary>Sets the shim of MyEventsIdentity.get_UserId()</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimMyEventsIdentity.AllInstances.UserIdSetInt32">
            <summary>Sets the shim of MyEventsIdentity.set_UserId(Int32 value)</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimMyEventsIdentity.AllInstances.UserNameGet">
            <summary>Sets the shim of MyEventsIdentity.get_UserName()</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimMyEventsIdentity.AllInstances.UserNameSetString">
            <summary>Sets the shim of MyEventsIdentity.set_UserName(String value)</summary>
        </member>
        <member name="T:MyEvents.Web.Authentication.Fakes.ShimOauthCodeProcessAttribute">
            <summary>Shim type of MyEvents.Web.Authentication.OauthCodeProcessAttribute</summary>
        </member>
        <member name="M:MyEvents.Web.Authentication.Fakes.ShimOauthCodeProcessAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.Authentication.Fakes.ShimOauthCodeProcessAttribute.#ctor(MyEvents.Web.Authentication.OauthCodeProcessAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.Authentication.Fakes.ShimOauthCodeProcessAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Authentication.Fakes.ShimOauthCodeProcessAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Authentication.Fakes.ShimOauthCodeProcessAttribute.Bind(System.Web.Mvc.IActionFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Authentication.Fakes.ShimOauthCodeProcessAttribute.Bind(System.Web.Mvc.IMvcFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Authentication.Fakes.ShimOauthCodeProcessAttribute.Bind(System.Web.Mvc.IResultFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimOauthCodeProcessAttribute.AuthenticationServiceGet">
            <summary>Sets the shim of OauthCodeProcessAttribute.get_AuthenticationService()</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimOauthCodeProcessAttribute.AuthenticationServiceSetAuthenticationService">
            <summary>Sets the shim of OauthCodeProcessAttribute.set_AuthenticationService(AuthenticationService value)</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimOauthCodeProcessAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimOauthCodeProcessAttribute.Constructor">
            <summary>Sets the shim of OauthCodeProcessAttribute.OauthCodeProcessAttribute()</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimOauthCodeProcessAttribute.OnActionExecutingActionExecutingContext">
            <summary>Sets the shim of OauthCodeProcessAttribute.OnActionExecuting(ActionExecutingContext filterContext)</summary>
        </member>
        <member name="T:MyEvents.Web.Authentication.Fakes.ShimOauthCodeProcessAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimOauthCodeProcessAttribute.AllInstances.AuthenticationServiceGet">
            <summary>Sets the shim of OauthCodeProcessAttribute.get_AuthenticationService()</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimOauthCodeProcessAttribute.AllInstances.AuthenticationServiceSetAuthenticationService">
            <summary>Sets the shim of OauthCodeProcessAttribute.set_AuthenticationService(AuthenticationService value)</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.ShimOauthCodeProcessAttribute.AllInstances.OnActionExecutingActionExecutingContext">
            <summary>Sets the shim of OauthCodeProcessAttribute.OnActionExecuting(ActionExecutingContext filterContext)</summary>
        </member>
        <member name="T:MyEvents.Web.Authentication.Fakes.StubAuthorizeAttribute">
            <summary>Stub type of MyEvents.Web.Authentication.AuthorizeAttribute</summary>
        </member>
        <member name="M:MyEvents.Web.Authentication.Fakes.StubAuthorizeAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:MyEvents.Web.Authentication.Fakes.StubAuthorizeAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:MyEvents.Web.Authentication.Fakes.StubAuthorizeAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:MyEvents.Web.Authentication.Fakes.StubAuthorizeAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:MyEvents.Web.Authentication.Fakes.StubAuthorizeAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:MyEvents.Web.Authentication.Fakes.StubAuthorizeAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubAuthorizeAttribute</summary>
        </member>
        <member name="M:MyEvents.Web.Authentication.Fakes.StubAuthorizeAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:MyEvents.Web.Authentication.Fakes.StubAuthorizeAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:MyEvents.Web.Authentication.Fakes.StubAuthorizeAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:MyEvents.Web.Authentication.Fakes.StubAuthorizeAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:MyEvents.Web.Authentication.Fakes.StubAuthorizeAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.StubAuthorizeAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.StubAuthorizeAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.StubAuthorizeAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.StubAuthorizeAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:MyEvents.Web.Authentication.Fakes.StubMyEventsIdentity">
            <summary>Stub type of MyEvents.Web.Authentication.MyEventsIdentity</summary>
        </member>
        <member name="M:MyEvents.Web.Authentication.Fakes.StubMyEventsIdentity.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:MyEvents.Web.Authentication.Fakes.StubMyEventsIdentity.InitializeStub">
            <summary>Initializes a new instance of type StubMyEventsIdentity</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.StubMyEventsIdentity.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.StubMyEventsIdentity.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.StubMyEventsIdentity.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:MyEvents.Web.Authentication.Fakes.StubOauthCodeProcessAttribute">
            <summary>Stub type of MyEvents.Web.Authentication.OauthCodeProcessAttribute</summary>
        </member>
        <member name="M:MyEvents.Web.Authentication.Fakes.StubOauthCodeProcessAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:MyEvents.Web.Authentication.Fakes.StubOauthCodeProcessAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:MyEvents.Web.Authentication.Fakes.StubOauthCodeProcessAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:MyEvents.Web.Authentication.Fakes.StubOauthCodeProcessAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:MyEvents.Web.Authentication.Fakes.StubOauthCodeProcessAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:MyEvents.Web.Authentication.Fakes.StubOauthCodeProcessAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubOauthCodeProcessAttribute</summary>
        </member>
        <member name="M:MyEvents.Web.Authentication.Fakes.StubOauthCodeProcessAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:MyEvents.Web.Authentication.Fakes.StubOauthCodeProcessAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:MyEvents.Web.Authentication.Fakes.StubOauthCodeProcessAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:MyEvents.Web.Authentication.Fakes.StubOauthCodeProcessAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="M:MyEvents.Web.Authentication.Fakes.StubOauthCodeProcessAttribute.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
            <summary>Sets the stub of ActionFilterAttribute.OnActionExecuted(ActionExecutedContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Authentication.Fakes.StubOauthCodeProcessAttribute.OnActionExecutedActionExecutedContext">
            <summary>Sets the stub of ActionFilterAttribute.OnActionExecuted(ActionExecutedContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Authentication.Fakes.StubOauthCodeProcessAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <summary>Sets the stub of OauthCodeProcessAttribute.OnActionExecuting(ActionExecutingContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Authentication.Fakes.StubOauthCodeProcessAttribute.OnActionExecutingActionExecutingContext">
            <summary>Sets the stub of OauthCodeProcessAttribute.OnActionExecuting(ActionExecutingContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Authentication.Fakes.StubOauthCodeProcessAttribute.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
            <summary>Sets the stub of ActionFilterAttribute.OnResultExecuted(ResultExecutedContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Authentication.Fakes.StubOauthCodeProcessAttribute.OnResultExecutedResultExecutedContext">
            <summary>Sets the stub of ActionFilterAttribute.OnResultExecuted(ResultExecutedContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Authentication.Fakes.StubOauthCodeProcessAttribute.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
            <summary>Sets the stub of ActionFilterAttribute.OnResultExecuting(ResultExecutingContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Authentication.Fakes.StubOauthCodeProcessAttribute.OnResultExecutingResultExecutingContext">
            <summary>Sets the stub of ActionFilterAttribute.OnResultExecuting(ResultExecutingContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Authentication.Fakes.StubOauthCodeProcessAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.StubOauthCodeProcessAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.StubOauthCodeProcessAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.StubOauthCodeProcessAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:MyEvents.Web.Authentication.Fakes.StubOauthCodeProcessAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:MyEvents.Web.Binders.Fakes.ShimMyEventsIdentityModelBinder">
            <summary>Shim type of MyEvents.Web.Binders.MyEventsIdentityModelBinder</summary>
        </member>
        <member name="M:MyEvents.Web.Binders.Fakes.ShimMyEventsIdentityModelBinder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.Binders.Fakes.ShimMyEventsIdentityModelBinder.#ctor(MyEvents.Web.Binders.MyEventsIdentityModelBinder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.Binders.Fakes.ShimMyEventsIdentityModelBinder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Binders.Fakes.ShimMyEventsIdentityModelBinder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Binders.Fakes.ShimMyEventsIdentityModelBinder.Bind(System.Web.Mvc.IModelBinder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:MyEvents.Web.Binders.Fakes.ShimMyEventsIdentityModelBinder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Binders.Fakes.ShimMyEventsIdentityModelBinder.BindModelControllerContextModelBindingContext">
            <summary>Sets the shim of MyEventsIdentityModelBinder.BindModel(ControllerContext controllerContext, ModelBindingContext bindingContext)</summary>
        </member>
        <member name="P:MyEvents.Web.Binders.Fakes.ShimMyEventsIdentityModelBinder.ConstructorIAuthenticationService">
            <summary>Sets the shim of MyEventsIdentityModelBinder.MyEventsIdentityModelBinder(IAuthenticationService authenticationService)</summary>
        </member>
        <member name="T:MyEvents.Web.Binders.Fakes.ShimMyEventsIdentityModelBinder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:MyEvents.Web.Binders.Fakes.ShimMyEventsIdentityModelBinder.AllInstances.BindModelControllerContextModelBindingContext">
            <summary>Sets the shim of MyEventsIdentityModelBinder.BindModel(ControllerContext controllerContext, ModelBindingContext bindingContext)</summary>
        </member>
        <member name="T:MyEvents.Web.Binders.Fakes.StubMyEventsIdentityModelBinder">
            <summary>Stub type of MyEvents.Web.Binders.MyEventsIdentityModelBinder</summary>
        </member>
        <member name="M:MyEvents.Web.Binders.Fakes.StubMyEventsIdentityModelBinder.#ctor(MyEvents.Web.Services.IAuthenticationService)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:MyEvents.Web.Binders.Fakes.StubMyEventsIdentityModelBinder.InitializeStub">
            <summary>Initializes a new instance of type StubMyEventsIdentityModelBinder</summary>
        </member>
        <member name="P:MyEvents.Web.Binders.Fakes.StubMyEventsIdentityModelBinder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.Binders.Fakes.StubMyEventsIdentityModelBinder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.Binders.Fakes.StubMyEventsIdentityModelBinder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:MyEvents.Web.Controllers.Fakes.ShimAccountController">
            <summary>Shim type of MyEvents.Web.Controllers.AccountController</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimAccountController.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimAccountController.#ctor(MyEvents.Web.Controllers.AccountController)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimAccountController.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimAccountController.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimAccountController.Bind(System.Web.Mvc.IActionFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimAccountController.Bind(System.Web.Mvc.IAuthorizationFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimAccountController.Bind(System.Web.Mvc.IController)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimAccountController.Bind(System.Web.Mvc.IExceptionFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimAccountController.Bind(System.Web.Mvc.IResultFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimAccountController.Bind(System.Web.Mvc.Async.IAsyncController)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimAccountController.Bind(System.Web.Mvc.Async.IAsyncManagerContainer)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimAccountController.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.ShimAccountController.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.ShimAccountController.ConstructorIAuthenticationService">
            <summary>Sets the shim of AccountController.AccountController(IAuthenticationService authenticationService)</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.ShimAccountController.LogOutMyEventsIdentity">
            <summary>Sets the shim of AccountController.LogOut(MyEventsIdentity identity)</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.ShimAccountController.LoginString">
            <summary>Sets the shim of AccountController.Login(String returnUrl)</summary>
        </member>
        <member name="T:MyEvents.Web.Controllers.Fakes.ShimAccountController.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.ShimAccountController.AllInstances.LogOutMyEventsIdentity">
            <summary>Sets the shim of AccountController.LogOut(MyEventsIdentity identity)</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.ShimAccountController.AllInstances.LoginString">
            <summary>Sets the shim of AccountController.Login(String returnUrl)</summary>
        </member>
        <member name="T:MyEvents.Web.Controllers.Fakes.ShimApplicationController">
            <summary>Shim type of MyEvents.Web.Controllers.ApplicationController</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimApplicationController.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimApplicationController.#ctor(MyEvents.Web.Controllers.ApplicationController)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimApplicationController.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimApplicationController.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimApplicationController.Bind(System.Web.Mvc.IActionFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimApplicationController.Bind(System.Web.Mvc.IAuthorizationFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimApplicationController.Bind(System.Web.Mvc.IController)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimApplicationController.Bind(System.Web.Mvc.IExceptionFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimApplicationController.Bind(System.Web.Mvc.IResultFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimApplicationController.Bind(System.Web.Mvc.Async.IAsyncController)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimApplicationController.Bind(System.Web.Mvc.Async.IAsyncManagerContainer)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimApplicationController.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.ShimApplicationController.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.ShimApplicationController.Constructor">
            <summary>Sets the shim of ApplicationController.ApplicationController()</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.ShimApplicationController.Internet">
            <summary>Sets the shim of ApplicationController.Internet()</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.ShimApplicationController.NoInternet">
            <summary>Sets the shim of ApplicationController.NoInternet()</summary>
        </member>
        <member name="T:MyEvents.Web.Controllers.Fakes.ShimApplicationController.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.ShimApplicationController.AllInstances.Internet">
            <summary>Sets the shim of ApplicationController.Internet()</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.ShimApplicationController.AllInstances.NoInternet">
            <summary>Sets the shim of ApplicationController.NoInternet()</summary>
        </member>
        <member name="T:MyEvents.Web.Controllers.Fakes.ShimErrorController">
            <summary>Shim type of MyEvents.Web.Controllers.ErrorController</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimErrorController.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimErrorController.#ctor(MyEvents.Web.Controllers.ErrorController)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimErrorController.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimErrorController.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimErrorController.Bind(System.Web.Mvc.IActionFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimErrorController.Bind(System.Web.Mvc.IAuthorizationFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimErrorController.Bind(System.Web.Mvc.IController)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimErrorController.Bind(System.Web.Mvc.IExceptionFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimErrorController.Bind(System.Web.Mvc.IResultFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimErrorController.Bind(System.Web.Mvc.Async.IAsyncController)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimErrorController.Bind(System.Web.Mvc.Async.IAsyncManagerContainer)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimErrorController.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.ShimErrorController.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.ShimErrorController.Constructor">
            <summary>Sets the shim of ErrorController.ErrorController()</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.ShimErrorController.Index">
            <summary>Sets the shim of ErrorController.Index()</summary>
        </member>
        <member name="T:MyEvents.Web.Controllers.Fakes.ShimErrorController.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.ShimErrorController.AllInstances.Index">
            <summary>Sets the shim of ErrorController.Index()</summary>
        </member>
        <member name="T:MyEvents.Web.Controllers.Fakes.ShimEventController">
            <summary>Shim type of MyEvents.Web.Controllers.EventController</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimEventController.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimEventController.#ctor(MyEvents.Web.Controllers.EventController)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimEventController.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimEventController.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimEventController.Bind(System.Web.Mvc.IActionFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimEventController.Bind(System.Web.Mvc.IAuthorizationFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimEventController.Bind(System.Web.Mvc.IController)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimEventController.Bind(System.Web.Mvc.IExceptionFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimEventController.Bind(System.Web.Mvc.IResultFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimEventController.Bind(System.Web.Mvc.Async.IAsyncController)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimEventController.Bind(System.Web.Mvc.Async.IAsyncManagerContainer)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimEventController.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.ShimEventController.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.ShimEventController.ConstructorIEventDefinitionRepositoryIRegisteredUserRepositoryISessionRepositoryIMaterialRepository">
            <summary>Sets the shim of EventController.EventController(IEventDefinitionRepository eventsRepository, IRegisteredUserRepository registeredUserRepository, ISessionRepository sessionRepository, IMaterialRepository materialRepository)</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.ShimEventController.DetailMyEventsIdentityInt32">
            <summary>Sets the shim of EventController.Detail(MyEventsIdentity identity, Int32 eventDefinitionId)</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.ShimEventController.EventLogoInt32">
            <summary>Sets the shim of EventController.EventLogo(Int32 eventDefinitionId)</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.ShimEventController.GetMaterialInt32">
            <summary>Sets the shim of EventController.GetMaterial(Int32 materialId)</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.ShimEventController.GetSheduleInfoInt32">
            <summary>Sets the shim of EventController.GetSheduleInfo(Int32 eventDefinitionId)</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.ShimEventController.RegisterMyEventsIdentityInt32">
            <summary>Sets the shim of EventController.Register(MyEventsIdentity identity, Int32 eventDefinitionId)</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.ShimEventController.ScheduleInt32">
            <summary>Sets the shim of EventController.Schedule(Int32 eventDefinitionId)</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.ShimEventController.ScheduleMobileInt32">
            <summary>Sets the shim of EventController.ScheduleMobile(Int32 eventDefinitionId)</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.ShimEventController.SessionDetailInt32">
            <summary>Sets the shim of EventController.SessionDetail(Int32 sessionId)</summary>
        </member>
        <member name="T:MyEvents.Web.Controllers.Fakes.ShimEventController.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.ShimEventController.AllInstances.DetailMyEventsIdentityInt32">
            <summary>Sets the shim of EventController.Detail(MyEventsIdentity identity, Int32 eventDefinitionId)</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.ShimEventController.AllInstances.EventLogoInt32">
            <summary>Sets the shim of EventController.EventLogo(Int32 eventDefinitionId)</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.ShimEventController.AllInstances.GetMaterialInt32">
            <summary>Sets the shim of EventController.GetMaterial(Int32 materialId)</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.ShimEventController.AllInstances.GetSheduleInfoInt32">
            <summary>Sets the shim of EventController.GetSheduleInfo(Int32 eventDefinitionId)</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.ShimEventController.AllInstances.RegisterMyEventsIdentityInt32">
            <summary>Sets the shim of EventController.Register(MyEventsIdentity identity, Int32 eventDefinitionId)</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.ShimEventController.AllInstances.ScheduleInt32">
            <summary>Sets the shim of EventController.Schedule(Int32 eventDefinitionId)</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.ShimEventController.AllInstances.ScheduleMobileInt32">
            <summary>Sets the shim of EventController.ScheduleMobile(Int32 eventDefinitionId)</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.ShimEventController.AllInstances.SessionDetailInt32">
            <summary>Sets the shim of EventController.SessionDetail(Int32 sessionId)</summary>
        </member>
        <member name="T:MyEvents.Web.Controllers.Fakes.ShimHomeController">
            <summary>Shim type of MyEvents.Web.Controllers.HomeController</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimHomeController.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimHomeController.#ctor(MyEvents.Web.Controllers.HomeController)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimHomeController.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimHomeController.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimHomeController.Bind(System.Web.Mvc.IActionFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimHomeController.Bind(System.Web.Mvc.IAuthorizationFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimHomeController.Bind(System.Web.Mvc.IController)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimHomeController.Bind(System.Web.Mvc.IExceptionFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimHomeController.Bind(System.Web.Mvc.IResultFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimHomeController.Bind(System.Web.Mvc.Async.IAsyncController)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimHomeController.Bind(System.Web.Mvc.Async.IAsyncManagerContainer)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.ShimHomeController.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.ShimHomeController.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.ShimHomeController.ConstructorIEventDefinitionRepository">
            <summary>Sets the shim of HomeController.HomeController(IEventDefinitionRepository eventsRepository)</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.ShimHomeController.IndexNullableOfInt32">
            <summary>Sets the shim of HomeController.Index(Nullable`1&lt;Int32&gt; pageIndex)</summary>
        </member>
        <member name="T:MyEvents.Web.Controllers.Fakes.ShimHomeController.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.ShimHomeController.AllInstances.IndexNullableOfInt32">
            <summary>Sets the shim of HomeController.Index(Nullable`1&lt;Int32&gt; pageIndex)</summary>
        </member>
        <member name="T:MyEvents.Web.Controllers.Fakes.StubAccountController">
            <summary>Stub type of MyEvents.Web.Controllers.AccountController</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubAccountController.#ctor(MyEvents.Web.Services.IAuthenticationService)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubAccountController.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Controller.BeginExecute(RequestContext requestContext, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubAccountController.BeginExecuteCore(System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Controller.BeginExecuteCore(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubAccountController.BeginExecuteCoreAsyncCallbackObject">
            <summary>Sets the stub of Controller.BeginExecuteCore(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubAccountController.BeginExecuteRequestContextAsyncCallbackObject">
            <summary>Sets the stub of Controller.BeginExecute(RequestContext requestContext, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubAccountController.Content(System.String,System.String,System.Text.Encoding)">
            <summary>Sets the stub of Controller.Content(String content, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubAccountController.ContentStringStringEncoding">
            <summary>Sets the stub of Controller.Content(String content, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubAccountController.CreateActionInvoker">
            <summary>Sets the stub of Controller.CreateActionInvoker()</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubAccountController.CreateActionInvoker01">
            <summary>Sets the stub of Controller.CreateActionInvoker()</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubAccountController.CreateTempDataProvider">
            <summary>Sets the stub of Controller.CreateTempDataProvider()</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubAccountController.CreateTempDataProvider01">
            <summary>Sets the stub of Controller.CreateTempDataProvider()</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubAccountController.DisableAsyncSupportGet">
            <summary>Sets the stub of Controller.get_DisableAsyncSupport()</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubAccountController.Dispose(System.Boolean)">
            <summary>Sets the stub of Controller.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubAccountController.DisposeBoolean">
            <summary>Sets the stub of Controller.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubAccountController.EndExecute(System.IAsyncResult)">
            <summary>Sets the stub of Controller.EndExecute(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubAccountController.EndExecuteCore(System.IAsyncResult)">
            <summary>Sets the stub of Controller.EndExecuteCore(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubAccountController.EndExecuteCoreIAsyncResult">
            <summary>Sets the stub of Controller.EndExecuteCore(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubAccountController.EndExecuteIAsyncResult">
            <summary>Sets the stub of Controller.EndExecute(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubAccountController.Execute(System.Web.Routing.RequestContext)">
            <summary>Sets the stub of ControllerBase.Execute(RequestContext requestContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubAccountController.ExecuteCore">
            <summary>Sets the stub of Controller.ExecuteCore()</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubAccountController.ExecuteCore01">
            <summary>Sets the stub of Controller.ExecuteCore()</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubAccountController.ExecuteRequestContext">
            <summary>Sets the stub of ControllerBase.Execute(RequestContext requestContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubAccountController.File(System.Byte[],System.String,System.String)">
            <summary>Sets the stub of Controller.File(Byte[] fileContents, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubAccountController.File(System.String,System.String,System.String)">
            <summary>Sets the stub of Controller.File(String fileName, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubAccountController.File(System.IO.Stream,System.String,System.String)">
            <summary>Sets the stub of Controller.File(Stream fileStream, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubAccountController.FileByteArrayStringString">
            <summary>Sets the stub of Controller.File(Byte[] fileContents, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubAccountController.FileStreamStringString">
            <summary>Sets the stub of Controller.File(Stream fileStream, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubAccountController.FileStringStringString">
            <summary>Sets the stub of Controller.File(String fileName, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubAccountController.HandleUnknownAction(System.String)">
            <summary>Sets the stub of Controller.HandleUnknownAction(String actionName)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubAccountController.HandleUnknownActionString">
            <summary>Sets the stub of Controller.HandleUnknownAction(String actionName)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubAccountController.HttpNotFound(System.String)">
            <summary>Sets the stub of Controller.HttpNotFound(String statusDescription)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubAccountController.HttpNotFoundString">
            <summary>Sets the stub of Controller.HttpNotFound(String statusDescription)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubAccountController.Initialize(System.Web.Routing.RequestContext)">
            <summary>Sets the stub of Controller.Initialize(RequestContext requestContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubAccountController.InitializeRequestContext">
            <summary>Sets the stub of Controller.Initialize(RequestContext requestContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubAccountController.InitializeStub">
            <summary>Initializes a new instance of type StubAccountController</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubAccountController.JavaScript(System.String)">
            <summary>Sets the stub of Controller.JavaScript(String script)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubAccountController.JavaScriptString">
            <summary>Sets the stub of Controller.JavaScript(String script)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubAccountController.Json(System.Object,System.String,System.Text.Encoding)">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubAccountController.Json(System.Object,System.String,System.Text.Encoding,System.Web.Mvc.JsonRequestBehavior)">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding, JsonRequestBehavior behavior)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubAccountController.JsonObjectStringEncoding">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubAccountController.JsonObjectStringEncodingJsonRequestBehavior">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding, JsonRequestBehavior behavior)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubAccountController.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
            <summary>Sets the stub of Controller.OnActionExecuted(ActionExecutedContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubAccountController.OnActionExecutedActionExecutedContext">
            <summary>Sets the stub of Controller.OnActionExecuted(ActionExecutedContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubAccountController.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <summary>Sets the stub of Controller.OnActionExecuting(ActionExecutingContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubAccountController.OnActionExecutingActionExecutingContext">
            <summary>Sets the stub of Controller.OnActionExecuting(ActionExecutingContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubAccountController.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
            <summary>Sets the stub of Controller.OnAuthorization(AuthorizationContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubAccountController.OnAuthorizationAuthorizationContext">
            <summary>Sets the stub of Controller.OnAuthorization(AuthorizationContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubAccountController.OnException(System.Web.Mvc.ExceptionContext)">
            <summary>Sets the stub of Controller.OnException(ExceptionContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubAccountController.OnExceptionExceptionContext">
            <summary>Sets the stub of Controller.OnException(ExceptionContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubAccountController.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
            <summary>Sets the stub of Controller.OnResultExecuted(ResultExecutedContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubAccountController.OnResultExecutedResultExecutedContext">
            <summary>Sets the stub of Controller.OnResultExecuted(ResultExecutedContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubAccountController.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
            <summary>Sets the stub of Controller.OnResultExecuting(ResultExecutingContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubAccountController.OnResultExecutingResultExecutingContext">
            <summary>Sets the stub of Controller.OnResultExecuting(ResultExecutingContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubAccountController.PartialView(System.String,System.Object)">
            <summary>Sets the stub of Controller.PartialView(String viewName, Object model)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubAccountController.PartialViewStringObject">
            <summary>Sets the stub of Controller.PartialView(String viewName, Object model)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubAccountController.Redirect(System.String)">
            <summary>Sets the stub of Controller.Redirect(String url)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubAccountController.RedirectPermanent(System.String)">
            <summary>Sets the stub of Controller.RedirectPermanent(String url)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubAccountController.RedirectPermanentString">
            <summary>Sets the stub of Controller.RedirectPermanent(String url)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubAccountController.RedirectString">
            <summary>Sets the stub of Controller.Redirect(String url)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubAccountController.RedirectToAction(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToAction(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubAccountController.RedirectToActionPermanent(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToActionPermanent(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubAccountController.RedirectToActionPermanentStringStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToActionPermanent(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubAccountController.RedirectToActionStringStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToAction(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubAccountController.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToRoute(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubAccountController.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToRoutePermanent(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubAccountController.RedirectToRoutePermanentStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToRoutePermanent(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubAccountController.RedirectToRouteStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToRoute(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubAccountController.View(System.Web.Mvc.IView,System.Object)">
            <summary>Sets the stub of Controller.View(IView view, Object model)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubAccountController.View(System.String,System.String,System.Object)">
            <summary>Sets the stub of Controller.View(String viewName, String masterName, Object model)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubAccountController.ViewIViewObject">
            <summary>Sets the stub of Controller.View(IView view, Object model)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubAccountController.ViewStringStringObject">
            <summary>Sets the stub of Controller.View(String viewName, String masterName, Object model)</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.StubAccountController.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.StubAccountController.DisableAsyncSupport">
            <summary>Sets the stub of Controller.get_DisableAsyncSupport()</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.StubAccountController.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.StubAccountController.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:MyEvents.Web.Controllers.Fakes.StubApplicationController">
            <summary>Stub type of MyEvents.Web.Controllers.ApplicationController</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubApplicationController.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubApplicationController.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Controller.BeginExecute(RequestContext requestContext, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubApplicationController.BeginExecuteCore(System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Controller.BeginExecuteCore(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubApplicationController.BeginExecuteCoreAsyncCallbackObject">
            <summary>Sets the stub of Controller.BeginExecuteCore(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubApplicationController.BeginExecuteRequestContextAsyncCallbackObject">
            <summary>Sets the stub of Controller.BeginExecute(RequestContext requestContext, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubApplicationController.Content(System.String,System.String,System.Text.Encoding)">
            <summary>Sets the stub of Controller.Content(String content, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubApplicationController.ContentStringStringEncoding">
            <summary>Sets the stub of Controller.Content(String content, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubApplicationController.CreateActionInvoker">
            <summary>Sets the stub of Controller.CreateActionInvoker()</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubApplicationController.CreateActionInvoker01">
            <summary>Sets the stub of Controller.CreateActionInvoker()</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubApplicationController.CreateTempDataProvider">
            <summary>Sets the stub of Controller.CreateTempDataProvider()</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubApplicationController.CreateTempDataProvider01">
            <summary>Sets the stub of Controller.CreateTempDataProvider()</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubApplicationController.DisableAsyncSupportGet">
            <summary>Sets the stub of Controller.get_DisableAsyncSupport()</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubApplicationController.Dispose(System.Boolean)">
            <summary>Sets the stub of Controller.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubApplicationController.DisposeBoolean">
            <summary>Sets the stub of Controller.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubApplicationController.EndExecute(System.IAsyncResult)">
            <summary>Sets the stub of Controller.EndExecute(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubApplicationController.EndExecuteCore(System.IAsyncResult)">
            <summary>Sets the stub of Controller.EndExecuteCore(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubApplicationController.EndExecuteCoreIAsyncResult">
            <summary>Sets the stub of Controller.EndExecuteCore(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubApplicationController.EndExecuteIAsyncResult">
            <summary>Sets the stub of Controller.EndExecute(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubApplicationController.Execute(System.Web.Routing.RequestContext)">
            <summary>Sets the stub of ControllerBase.Execute(RequestContext requestContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubApplicationController.ExecuteCore">
            <summary>Sets the stub of Controller.ExecuteCore()</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubApplicationController.ExecuteCore01">
            <summary>Sets the stub of Controller.ExecuteCore()</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubApplicationController.ExecuteRequestContext">
            <summary>Sets the stub of ControllerBase.Execute(RequestContext requestContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubApplicationController.File(System.Byte[],System.String,System.String)">
            <summary>Sets the stub of Controller.File(Byte[] fileContents, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubApplicationController.File(System.String,System.String,System.String)">
            <summary>Sets the stub of Controller.File(String fileName, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubApplicationController.File(System.IO.Stream,System.String,System.String)">
            <summary>Sets the stub of Controller.File(Stream fileStream, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubApplicationController.FileByteArrayStringString">
            <summary>Sets the stub of Controller.File(Byte[] fileContents, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubApplicationController.FileStreamStringString">
            <summary>Sets the stub of Controller.File(Stream fileStream, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubApplicationController.FileStringStringString">
            <summary>Sets the stub of Controller.File(String fileName, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubApplicationController.HandleUnknownAction(System.String)">
            <summary>Sets the stub of Controller.HandleUnknownAction(String actionName)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubApplicationController.HandleUnknownActionString">
            <summary>Sets the stub of Controller.HandleUnknownAction(String actionName)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubApplicationController.HttpNotFound(System.String)">
            <summary>Sets the stub of Controller.HttpNotFound(String statusDescription)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubApplicationController.HttpNotFoundString">
            <summary>Sets the stub of Controller.HttpNotFound(String statusDescription)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubApplicationController.Initialize(System.Web.Routing.RequestContext)">
            <summary>Sets the stub of Controller.Initialize(RequestContext requestContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubApplicationController.InitializeRequestContext">
            <summary>Sets the stub of Controller.Initialize(RequestContext requestContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubApplicationController.InitializeStub">
            <summary>Initializes a new instance of type StubApplicationController</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubApplicationController.JavaScript(System.String)">
            <summary>Sets the stub of Controller.JavaScript(String script)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubApplicationController.JavaScriptString">
            <summary>Sets the stub of Controller.JavaScript(String script)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubApplicationController.Json(System.Object,System.String,System.Text.Encoding)">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubApplicationController.Json(System.Object,System.String,System.Text.Encoding,System.Web.Mvc.JsonRequestBehavior)">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding, JsonRequestBehavior behavior)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubApplicationController.JsonObjectStringEncoding">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubApplicationController.JsonObjectStringEncodingJsonRequestBehavior">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding, JsonRequestBehavior behavior)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubApplicationController.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
            <summary>Sets the stub of Controller.OnActionExecuted(ActionExecutedContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubApplicationController.OnActionExecutedActionExecutedContext">
            <summary>Sets the stub of Controller.OnActionExecuted(ActionExecutedContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubApplicationController.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <summary>Sets the stub of Controller.OnActionExecuting(ActionExecutingContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubApplicationController.OnActionExecutingActionExecutingContext">
            <summary>Sets the stub of Controller.OnActionExecuting(ActionExecutingContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubApplicationController.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
            <summary>Sets the stub of Controller.OnAuthorization(AuthorizationContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubApplicationController.OnAuthorizationAuthorizationContext">
            <summary>Sets the stub of Controller.OnAuthorization(AuthorizationContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubApplicationController.OnException(System.Web.Mvc.ExceptionContext)">
            <summary>Sets the stub of Controller.OnException(ExceptionContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubApplicationController.OnExceptionExceptionContext">
            <summary>Sets the stub of Controller.OnException(ExceptionContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubApplicationController.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
            <summary>Sets the stub of Controller.OnResultExecuted(ResultExecutedContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubApplicationController.OnResultExecutedResultExecutedContext">
            <summary>Sets the stub of Controller.OnResultExecuted(ResultExecutedContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubApplicationController.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
            <summary>Sets the stub of Controller.OnResultExecuting(ResultExecutingContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubApplicationController.OnResultExecutingResultExecutingContext">
            <summary>Sets the stub of Controller.OnResultExecuting(ResultExecutingContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubApplicationController.PartialView(System.String,System.Object)">
            <summary>Sets the stub of Controller.PartialView(String viewName, Object model)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubApplicationController.PartialViewStringObject">
            <summary>Sets the stub of Controller.PartialView(String viewName, Object model)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubApplicationController.Redirect(System.String)">
            <summary>Sets the stub of Controller.Redirect(String url)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubApplicationController.RedirectPermanent(System.String)">
            <summary>Sets the stub of Controller.RedirectPermanent(String url)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubApplicationController.RedirectPermanentString">
            <summary>Sets the stub of Controller.RedirectPermanent(String url)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubApplicationController.RedirectString">
            <summary>Sets the stub of Controller.Redirect(String url)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubApplicationController.RedirectToAction(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToAction(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubApplicationController.RedirectToActionPermanent(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToActionPermanent(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubApplicationController.RedirectToActionPermanentStringStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToActionPermanent(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubApplicationController.RedirectToActionStringStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToAction(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubApplicationController.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToRoute(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubApplicationController.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToRoutePermanent(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubApplicationController.RedirectToRoutePermanentStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToRoutePermanent(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubApplicationController.RedirectToRouteStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToRoute(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubApplicationController.View(System.Web.Mvc.IView,System.Object)">
            <summary>Sets the stub of Controller.View(IView view, Object model)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubApplicationController.View(System.String,System.String,System.Object)">
            <summary>Sets the stub of Controller.View(String viewName, String masterName, Object model)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubApplicationController.ViewIViewObject">
            <summary>Sets the stub of Controller.View(IView view, Object model)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubApplicationController.ViewStringStringObject">
            <summary>Sets the stub of Controller.View(String viewName, String masterName, Object model)</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.StubApplicationController.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.StubApplicationController.DisableAsyncSupport">
            <summary>Sets the stub of Controller.get_DisableAsyncSupport()</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.StubApplicationController.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.StubApplicationController.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:MyEvents.Web.Controllers.Fakes.StubErrorController">
            <summary>Stub type of MyEvents.Web.Controllers.ErrorController</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubErrorController.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubErrorController.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Controller.BeginExecute(RequestContext requestContext, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubErrorController.BeginExecuteCore(System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Controller.BeginExecuteCore(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubErrorController.BeginExecuteCoreAsyncCallbackObject">
            <summary>Sets the stub of Controller.BeginExecuteCore(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubErrorController.BeginExecuteRequestContextAsyncCallbackObject">
            <summary>Sets the stub of Controller.BeginExecute(RequestContext requestContext, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubErrorController.Content(System.String,System.String,System.Text.Encoding)">
            <summary>Sets the stub of Controller.Content(String content, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubErrorController.ContentStringStringEncoding">
            <summary>Sets the stub of Controller.Content(String content, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubErrorController.CreateActionInvoker">
            <summary>Sets the stub of Controller.CreateActionInvoker()</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubErrorController.CreateActionInvoker01">
            <summary>Sets the stub of Controller.CreateActionInvoker()</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubErrorController.CreateTempDataProvider">
            <summary>Sets the stub of Controller.CreateTempDataProvider()</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubErrorController.CreateTempDataProvider01">
            <summary>Sets the stub of Controller.CreateTempDataProvider()</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubErrorController.DisableAsyncSupportGet">
            <summary>Sets the stub of Controller.get_DisableAsyncSupport()</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubErrorController.Dispose(System.Boolean)">
            <summary>Sets the stub of Controller.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubErrorController.DisposeBoolean">
            <summary>Sets the stub of Controller.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubErrorController.EndExecute(System.IAsyncResult)">
            <summary>Sets the stub of Controller.EndExecute(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubErrorController.EndExecuteCore(System.IAsyncResult)">
            <summary>Sets the stub of Controller.EndExecuteCore(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubErrorController.EndExecuteCoreIAsyncResult">
            <summary>Sets the stub of Controller.EndExecuteCore(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubErrorController.EndExecuteIAsyncResult">
            <summary>Sets the stub of Controller.EndExecute(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubErrorController.Execute(System.Web.Routing.RequestContext)">
            <summary>Sets the stub of ControllerBase.Execute(RequestContext requestContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubErrorController.ExecuteCore">
            <summary>Sets the stub of Controller.ExecuteCore()</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubErrorController.ExecuteCore01">
            <summary>Sets the stub of Controller.ExecuteCore()</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubErrorController.ExecuteRequestContext">
            <summary>Sets the stub of ControllerBase.Execute(RequestContext requestContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubErrorController.File(System.Byte[],System.String,System.String)">
            <summary>Sets the stub of Controller.File(Byte[] fileContents, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubErrorController.File(System.String,System.String,System.String)">
            <summary>Sets the stub of Controller.File(String fileName, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubErrorController.File(System.IO.Stream,System.String,System.String)">
            <summary>Sets the stub of Controller.File(Stream fileStream, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubErrorController.FileByteArrayStringString">
            <summary>Sets the stub of Controller.File(Byte[] fileContents, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubErrorController.FileStreamStringString">
            <summary>Sets the stub of Controller.File(Stream fileStream, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubErrorController.FileStringStringString">
            <summary>Sets the stub of Controller.File(String fileName, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubErrorController.HandleUnknownAction(System.String)">
            <summary>Sets the stub of Controller.HandleUnknownAction(String actionName)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubErrorController.HandleUnknownActionString">
            <summary>Sets the stub of Controller.HandleUnknownAction(String actionName)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubErrorController.HttpNotFound(System.String)">
            <summary>Sets the stub of Controller.HttpNotFound(String statusDescription)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubErrorController.HttpNotFoundString">
            <summary>Sets the stub of Controller.HttpNotFound(String statusDescription)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubErrorController.Initialize(System.Web.Routing.RequestContext)">
            <summary>Sets the stub of Controller.Initialize(RequestContext requestContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubErrorController.InitializeRequestContext">
            <summary>Sets the stub of Controller.Initialize(RequestContext requestContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubErrorController.InitializeStub">
            <summary>Initializes a new instance of type StubErrorController</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubErrorController.JavaScript(System.String)">
            <summary>Sets the stub of Controller.JavaScript(String script)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubErrorController.JavaScriptString">
            <summary>Sets the stub of Controller.JavaScript(String script)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubErrorController.Json(System.Object,System.String,System.Text.Encoding)">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubErrorController.Json(System.Object,System.String,System.Text.Encoding,System.Web.Mvc.JsonRequestBehavior)">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding, JsonRequestBehavior behavior)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubErrorController.JsonObjectStringEncoding">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubErrorController.JsonObjectStringEncodingJsonRequestBehavior">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding, JsonRequestBehavior behavior)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubErrorController.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
            <summary>Sets the stub of Controller.OnActionExecuted(ActionExecutedContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubErrorController.OnActionExecutedActionExecutedContext">
            <summary>Sets the stub of Controller.OnActionExecuted(ActionExecutedContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubErrorController.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <summary>Sets the stub of Controller.OnActionExecuting(ActionExecutingContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubErrorController.OnActionExecutingActionExecutingContext">
            <summary>Sets the stub of Controller.OnActionExecuting(ActionExecutingContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubErrorController.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
            <summary>Sets the stub of Controller.OnAuthorization(AuthorizationContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubErrorController.OnAuthorizationAuthorizationContext">
            <summary>Sets the stub of Controller.OnAuthorization(AuthorizationContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubErrorController.OnException(System.Web.Mvc.ExceptionContext)">
            <summary>Sets the stub of Controller.OnException(ExceptionContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubErrorController.OnExceptionExceptionContext">
            <summary>Sets the stub of Controller.OnException(ExceptionContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubErrorController.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
            <summary>Sets the stub of Controller.OnResultExecuted(ResultExecutedContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubErrorController.OnResultExecutedResultExecutedContext">
            <summary>Sets the stub of Controller.OnResultExecuted(ResultExecutedContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubErrorController.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
            <summary>Sets the stub of Controller.OnResultExecuting(ResultExecutingContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubErrorController.OnResultExecutingResultExecutingContext">
            <summary>Sets the stub of Controller.OnResultExecuting(ResultExecutingContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubErrorController.PartialView(System.String,System.Object)">
            <summary>Sets the stub of Controller.PartialView(String viewName, Object model)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubErrorController.PartialViewStringObject">
            <summary>Sets the stub of Controller.PartialView(String viewName, Object model)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubErrorController.Redirect(System.String)">
            <summary>Sets the stub of Controller.Redirect(String url)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubErrorController.RedirectPermanent(System.String)">
            <summary>Sets the stub of Controller.RedirectPermanent(String url)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubErrorController.RedirectPermanentString">
            <summary>Sets the stub of Controller.RedirectPermanent(String url)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubErrorController.RedirectString">
            <summary>Sets the stub of Controller.Redirect(String url)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubErrorController.RedirectToAction(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToAction(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubErrorController.RedirectToActionPermanent(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToActionPermanent(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubErrorController.RedirectToActionPermanentStringStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToActionPermanent(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubErrorController.RedirectToActionStringStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToAction(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubErrorController.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToRoute(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubErrorController.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToRoutePermanent(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubErrorController.RedirectToRoutePermanentStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToRoutePermanent(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubErrorController.RedirectToRouteStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToRoute(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubErrorController.View(System.Web.Mvc.IView,System.Object)">
            <summary>Sets the stub of Controller.View(IView view, Object model)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubErrorController.View(System.String,System.String,System.Object)">
            <summary>Sets the stub of Controller.View(String viewName, String masterName, Object model)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubErrorController.ViewIViewObject">
            <summary>Sets the stub of Controller.View(IView view, Object model)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubErrorController.ViewStringStringObject">
            <summary>Sets the stub of Controller.View(String viewName, String masterName, Object model)</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.StubErrorController.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.StubErrorController.DisableAsyncSupport">
            <summary>Sets the stub of Controller.get_DisableAsyncSupport()</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.StubErrorController.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.StubErrorController.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:MyEvents.Web.Controllers.Fakes.StubEventController">
            <summary>Stub type of MyEvents.Web.Controllers.EventController</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubEventController.#ctor(MyEvents.Data.IEventDefinitionRepository,MyEvents.Data.IRegisteredUserRepository,MyEvents.Data.ISessionRepository,MyEvents.Data.IMaterialRepository)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubEventController.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Controller.BeginExecute(RequestContext requestContext, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubEventController.BeginExecuteCore(System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Controller.BeginExecuteCore(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubEventController.BeginExecuteCoreAsyncCallbackObject">
            <summary>Sets the stub of Controller.BeginExecuteCore(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubEventController.BeginExecuteRequestContextAsyncCallbackObject">
            <summary>Sets the stub of Controller.BeginExecute(RequestContext requestContext, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubEventController.Content(System.String,System.String,System.Text.Encoding)">
            <summary>Sets the stub of Controller.Content(String content, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubEventController.ContentStringStringEncoding">
            <summary>Sets the stub of Controller.Content(String content, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubEventController.CreateActionInvoker">
            <summary>Sets the stub of Controller.CreateActionInvoker()</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubEventController.CreateActionInvoker01">
            <summary>Sets the stub of Controller.CreateActionInvoker()</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubEventController.CreateTempDataProvider">
            <summary>Sets the stub of Controller.CreateTempDataProvider()</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubEventController.CreateTempDataProvider01">
            <summary>Sets the stub of Controller.CreateTempDataProvider()</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubEventController.DisableAsyncSupportGet">
            <summary>Sets the stub of Controller.get_DisableAsyncSupport()</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubEventController.Dispose(System.Boolean)">
            <summary>Sets the stub of Controller.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubEventController.DisposeBoolean">
            <summary>Sets the stub of Controller.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubEventController.EndExecute(System.IAsyncResult)">
            <summary>Sets the stub of Controller.EndExecute(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubEventController.EndExecuteCore(System.IAsyncResult)">
            <summary>Sets the stub of Controller.EndExecuteCore(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubEventController.EndExecuteCoreIAsyncResult">
            <summary>Sets the stub of Controller.EndExecuteCore(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubEventController.EndExecuteIAsyncResult">
            <summary>Sets the stub of Controller.EndExecute(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubEventController.Execute(System.Web.Routing.RequestContext)">
            <summary>Sets the stub of ControllerBase.Execute(RequestContext requestContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubEventController.ExecuteCore">
            <summary>Sets the stub of Controller.ExecuteCore()</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubEventController.ExecuteCore01">
            <summary>Sets the stub of Controller.ExecuteCore()</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubEventController.ExecuteRequestContext">
            <summary>Sets the stub of ControllerBase.Execute(RequestContext requestContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubEventController.File(System.Byte[],System.String,System.String)">
            <summary>Sets the stub of Controller.File(Byte[] fileContents, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubEventController.File(System.String,System.String,System.String)">
            <summary>Sets the stub of Controller.File(String fileName, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubEventController.File(System.IO.Stream,System.String,System.String)">
            <summary>Sets the stub of Controller.File(Stream fileStream, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubEventController.FileByteArrayStringString">
            <summary>Sets the stub of Controller.File(Byte[] fileContents, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubEventController.FileStreamStringString">
            <summary>Sets the stub of Controller.File(Stream fileStream, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubEventController.FileStringStringString">
            <summary>Sets the stub of Controller.File(String fileName, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubEventController.HandleUnknownAction(System.String)">
            <summary>Sets the stub of Controller.HandleUnknownAction(String actionName)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubEventController.HandleUnknownActionString">
            <summary>Sets the stub of Controller.HandleUnknownAction(String actionName)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubEventController.HttpNotFound(System.String)">
            <summary>Sets the stub of Controller.HttpNotFound(String statusDescription)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubEventController.HttpNotFoundString">
            <summary>Sets the stub of Controller.HttpNotFound(String statusDescription)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubEventController.Initialize(System.Web.Routing.RequestContext)">
            <summary>Sets the stub of Controller.Initialize(RequestContext requestContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubEventController.InitializeRequestContext">
            <summary>Sets the stub of Controller.Initialize(RequestContext requestContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubEventController.InitializeStub">
            <summary>Initializes a new instance of type StubEventController</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubEventController.JavaScript(System.String)">
            <summary>Sets the stub of Controller.JavaScript(String script)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubEventController.JavaScriptString">
            <summary>Sets the stub of Controller.JavaScript(String script)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubEventController.Json(System.Object,System.String,System.Text.Encoding)">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubEventController.Json(System.Object,System.String,System.Text.Encoding,System.Web.Mvc.JsonRequestBehavior)">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding, JsonRequestBehavior behavior)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubEventController.JsonObjectStringEncoding">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubEventController.JsonObjectStringEncodingJsonRequestBehavior">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding, JsonRequestBehavior behavior)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubEventController.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
            <summary>Sets the stub of Controller.OnActionExecuted(ActionExecutedContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubEventController.OnActionExecutedActionExecutedContext">
            <summary>Sets the stub of Controller.OnActionExecuted(ActionExecutedContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubEventController.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <summary>Sets the stub of Controller.OnActionExecuting(ActionExecutingContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubEventController.OnActionExecutingActionExecutingContext">
            <summary>Sets the stub of Controller.OnActionExecuting(ActionExecutingContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubEventController.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
            <summary>Sets the stub of Controller.OnAuthorization(AuthorizationContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubEventController.OnAuthorizationAuthorizationContext">
            <summary>Sets the stub of Controller.OnAuthorization(AuthorizationContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubEventController.OnException(System.Web.Mvc.ExceptionContext)">
            <summary>Sets the stub of Controller.OnException(ExceptionContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubEventController.OnExceptionExceptionContext">
            <summary>Sets the stub of Controller.OnException(ExceptionContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubEventController.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
            <summary>Sets the stub of Controller.OnResultExecuted(ResultExecutedContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubEventController.OnResultExecutedResultExecutedContext">
            <summary>Sets the stub of Controller.OnResultExecuted(ResultExecutedContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubEventController.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
            <summary>Sets the stub of Controller.OnResultExecuting(ResultExecutingContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubEventController.OnResultExecutingResultExecutingContext">
            <summary>Sets the stub of Controller.OnResultExecuting(ResultExecutingContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubEventController.PartialView(System.String,System.Object)">
            <summary>Sets the stub of Controller.PartialView(String viewName, Object model)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubEventController.PartialViewStringObject">
            <summary>Sets the stub of Controller.PartialView(String viewName, Object model)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubEventController.Redirect(System.String)">
            <summary>Sets the stub of Controller.Redirect(String url)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubEventController.RedirectPermanent(System.String)">
            <summary>Sets the stub of Controller.RedirectPermanent(String url)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubEventController.RedirectPermanentString">
            <summary>Sets the stub of Controller.RedirectPermanent(String url)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubEventController.RedirectString">
            <summary>Sets the stub of Controller.Redirect(String url)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubEventController.RedirectToAction(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToAction(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubEventController.RedirectToActionPermanent(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToActionPermanent(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubEventController.RedirectToActionPermanentStringStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToActionPermanent(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubEventController.RedirectToActionStringStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToAction(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubEventController.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToRoute(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubEventController.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToRoutePermanent(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubEventController.RedirectToRoutePermanentStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToRoutePermanent(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubEventController.RedirectToRouteStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToRoute(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubEventController.View(System.Web.Mvc.IView,System.Object)">
            <summary>Sets the stub of Controller.View(IView view, Object model)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubEventController.View(System.String,System.String,System.Object)">
            <summary>Sets the stub of Controller.View(String viewName, String masterName, Object model)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubEventController.ViewIViewObject">
            <summary>Sets the stub of Controller.View(IView view, Object model)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubEventController.ViewStringStringObject">
            <summary>Sets the stub of Controller.View(String viewName, String masterName, Object model)</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.StubEventController.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.StubEventController.DisableAsyncSupport">
            <summary>Sets the stub of Controller.get_DisableAsyncSupport()</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.StubEventController.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.StubEventController.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:MyEvents.Web.Controllers.Fakes.StubHomeController">
            <summary>Stub type of MyEvents.Web.Controllers.HomeController</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubHomeController.#ctor(MyEvents.Data.IEventDefinitionRepository)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubHomeController.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Controller.BeginExecute(RequestContext requestContext, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubHomeController.BeginExecuteCore(System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Controller.BeginExecuteCore(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubHomeController.BeginExecuteCoreAsyncCallbackObject">
            <summary>Sets the stub of Controller.BeginExecuteCore(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubHomeController.BeginExecuteRequestContextAsyncCallbackObject">
            <summary>Sets the stub of Controller.BeginExecute(RequestContext requestContext, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubHomeController.Content(System.String,System.String,System.Text.Encoding)">
            <summary>Sets the stub of Controller.Content(String content, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubHomeController.ContentStringStringEncoding">
            <summary>Sets the stub of Controller.Content(String content, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubHomeController.CreateActionInvoker">
            <summary>Sets the stub of Controller.CreateActionInvoker()</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubHomeController.CreateActionInvoker01">
            <summary>Sets the stub of Controller.CreateActionInvoker()</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubHomeController.CreateTempDataProvider">
            <summary>Sets the stub of Controller.CreateTempDataProvider()</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubHomeController.CreateTempDataProvider01">
            <summary>Sets the stub of Controller.CreateTempDataProvider()</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubHomeController.DisableAsyncSupportGet">
            <summary>Sets the stub of Controller.get_DisableAsyncSupport()</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubHomeController.Dispose(System.Boolean)">
            <summary>Sets the stub of Controller.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubHomeController.DisposeBoolean">
            <summary>Sets the stub of Controller.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubHomeController.EndExecute(System.IAsyncResult)">
            <summary>Sets the stub of Controller.EndExecute(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubHomeController.EndExecuteCore(System.IAsyncResult)">
            <summary>Sets the stub of Controller.EndExecuteCore(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubHomeController.EndExecuteCoreIAsyncResult">
            <summary>Sets the stub of Controller.EndExecuteCore(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubHomeController.EndExecuteIAsyncResult">
            <summary>Sets the stub of Controller.EndExecute(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubHomeController.Execute(System.Web.Routing.RequestContext)">
            <summary>Sets the stub of ControllerBase.Execute(RequestContext requestContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubHomeController.ExecuteCore">
            <summary>Sets the stub of Controller.ExecuteCore()</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubHomeController.ExecuteCore01">
            <summary>Sets the stub of Controller.ExecuteCore()</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubHomeController.ExecuteRequestContext">
            <summary>Sets the stub of ControllerBase.Execute(RequestContext requestContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubHomeController.File(System.Byte[],System.String,System.String)">
            <summary>Sets the stub of Controller.File(Byte[] fileContents, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubHomeController.File(System.String,System.String,System.String)">
            <summary>Sets the stub of Controller.File(String fileName, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubHomeController.File(System.IO.Stream,System.String,System.String)">
            <summary>Sets the stub of Controller.File(Stream fileStream, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubHomeController.FileByteArrayStringString">
            <summary>Sets the stub of Controller.File(Byte[] fileContents, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubHomeController.FileStreamStringString">
            <summary>Sets the stub of Controller.File(Stream fileStream, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubHomeController.FileStringStringString">
            <summary>Sets the stub of Controller.File(String fileName, String contentType, String fileDownloadName)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubHomeController.HandleUnknownAction(System.String)">
            <summary>Sets the stub of Controller.HandleUnknownAction(String actionName)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubHomeController.HandleUnknownActionString">
            <summary>Sets the stub of Controller.HandleUnknownAction(String actionName)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubHomeController.HttpNotFound(System.String)">
            <summary>Sets the stub of Controller.HttpNotFound(String statusDescription)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubHomeController.HttpNotFoundString">
            <summary>Sets the stub of Controller.HttpNotFound(String statusDescription)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubHomeController.Initialize(System.Web.Routing.RequestContext)">
            <summary>Sets the stub of Controller.Initialize(RequestContext requestContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubHomeController.InitializeRequestContext">
            <summary>Sets the stub of Controller.Initialize(RequestContext requestContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubHomeController.InitializeStub">
            <summary>Initializes a new instance of type StubHomeController</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubHomeController.JavaScript(System.String)">
            <summary>Sets the stub of Controller.JavaScript(String script)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubHomeController.JavaScriptString">
            <summary>Sets the stub of Controller.JavaScript(String script)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubHomeController.Json(System.Object,System.String,System.Text.Encoding)">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubHomeController.Json(System.Object,System.String,System.Text.Encoding,System.Web.Mvc.JsonRequestBehavior)">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding, JsonRequestBehavior behavior)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubHomeController.JsonObjectStringEncoding">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubHomeController.JsonObjectStringEncodingJsonRequestBehavior">
            <summary>Sets the stub of Controller.Json(Object data, String contentType, Encoding contentEncoding, JsonRequestBehavior behavior)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubHomeController.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
            <summary>Sets the stub of Controller.OnActionExecuted(ActionExecutedContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubHomeController.OnActionExecutedActionExecutedContext">
            <summary>Sets the stub of Controller.OnActionExecuted(ActionExecutedContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubHomeController.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <summary>Sets the stub of Controller.OnActionExecuting(ActionExecutingContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubHomeController.OnActionExecutingActionExecutingContext">
            <summary>Sets the stub of Controller.OnActionExecuting(ActionExecutingContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubHomeController.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
            <summary>Sets the stub of Controller.OnAuthorization(AuthorizationContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubHomeController.OnAuthorizationAuthorizationContext">
            <summary>Sets the stub of Controller.OnAuthorization(AuthorizationContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubHomeController.OnException(System.Web.Mvc.ExceptionContext)">
            <summary>Sets the stub of Controller.OnException(ExceptionContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubHomeController.OnExceptionExceptionContext">
            <summary>Sets the stub of Controller.OnException(ExceptionContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubHomeController.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
            <summary>Sets the stub of Controller.OnResultExecuted(ResultExecutedContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubHomeController.OnResultExecutedResultExecutedContext">
            <summary>Sets the stub of Controller.OnResultExecuted(ResultExecutedContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubHomeController.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
            <summary>Sets the stub of Controller.OnResultExecuting(ResultExecutingContext filterContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubHomeController.OnResultExecutingResultExecutingContext">
            <summary>Sets the stub of Controller.OnResultExecuting(ResultExecutingContext filterContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubHomeController.PartialView(System.String,System.Object)">
            <summary>Sets the stub of Controller.PartialView(String viewName, Object model)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubHomeController.PartialViewStringObject">
            <summary>Sets the stub of Controller.PartialView(String viewName, Object model)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubHomeController.Redirect(System.String)">
            <summary>Sets the stub of Controller.Redirect(String url)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubHomeController.RedirectPermanent(System.String)">
            <summary>Sets the stub of Controller.RedirectPermanent(String url)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubHomeController.RedirectPermanentString">
            <summary>Sets the stub of Controller.RedirectPermanent(String url)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubHomeController.RedirectString">
            <summary>Sets the stub of Controller.Redirect(String url)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubHomeController.RedirectToAction(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToAction(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubHomeController.RedirectToActionPermanent(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToActionPermanent(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubHomeController.RedirectToActionPermanentStringStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToActionPermanent(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubHomeController.RedirectToActionStringStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToAction(String actionName, String controllerName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubHomeController.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToRoute(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubHomeController.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>Sets the stub of Controller.RedirectToRoutePermanent(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubHomeController.RedirectToRoutePermanentStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToRoutePermanent(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubHomeController.RedirectToRouteStringRouteValueDictionary">
            <summary>Sets the stub of Controller.RedirectToRoute(String routeName, RouteValueDictionary routeValues)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubHomeController.View(System.Web.Mvc.IView,System.Object)">
            <summary>Sets the stub of Controller.View(IView view, Object model)</summary>
        </member>
        <member name="M:MyEvents.Web.Controllers.Fakes.StubHomeController.View(System.String,System.String,System.Object)">
            <summary>Sets the stub of Controller.View(String viewName, String masterName, Object model)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubHomeController.ViewIViewObject">
            <summary>Sets the stub of Controller.View(IView view, Object model)</summary>
        </member>
        <member name="F:MyEvents.Web.Controllers.Fakes.StubHomeController.ViewStringStringObject">
            <summary>Sets the stub of Controller.View(String viewName, String masterName, Object model)</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.StubHomeController.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.StubHomeController.DisableAsyncSupport">
            <summary>Sets the stub of Controller.get_DisableAsyncSupport()</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.StubHomeController.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.Controllers.Fakes.StubHomeController.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:MyEvents.Web.DisplayModes.Fakes.ShimMobileDisplayMode">
            <summary>Shim type of MyEvents.Web.DisplayModes.MobileDisplayMode</summary>
        </member>
        <member name="M:MyEvents.Web.DisplayModes.Fakes.ShimMobileDisplayMode.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.DisplayModes.Fakes.ShimMobileDisplayMode.#ctor(MyEvents.Web.DisplayModes.MobileDisplayMode)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.DisplayModes.Fakes.ShimMobileDisplayMode.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.DisplayModes.Fakes.ShimMobileDisplayMode.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.DisplayModes.Fakes.ShimMobileDisplayMode.Bind(System.Web.WebPages.IDisplayMode)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:MyEvents.Web.DisplayModes.Fakes.ShimMobileDisplayMode.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.DisplayModes.Fakes.ShimMobileDisplayMode.Constructor">
            <summary>Sets the shim of MobileDisplayMode.MobileDisplayMode()</summary>
        </member>
        <member name="P:MyEvents.Web.DisplayModes.Fakes.ShimMobileDisplayMode.IsMobileString">
            <summary>Sets the shim of MobileDisplayMode.IsMobile(String userAgent)</summary>
        </member>
        <member name="P:MyEvents.Web.DisplayModes.Fakes.ShimMobileDisplayMode._ctorb__1HttpContextBase">
            <summary>Sets the shim of MobileDisplayMode.&lt;.ctor&gt;b__1(HttpContextBase context)</summary>
        </member>
        <member name="T:MyEvents.Web.DisplayModes.Fakes.ShimMobileDisplayMode.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:MyEvents.Web.DisplayModes.Fakes.ShimMobileDisplayMode.AllInstances.IsMobileString">
            <summary>Sets the shim of MobileDisplayMode.IsMobile(String userAgent)</summary>
        </member>
        <member name="P:MyEvents.Web.DisplayModes.Fakes.ShimMobileDisplayMode.AllInstances._ctorb__1HttpContextBase">
            <summary>Sets the shim of MobileDisplayMode.&lt;.ctor&gt;b__1(HttpContextBase context)</summary>
        </member>
        <member name="T:MyEvents.Web.DisplayModes.Fakes.StubMobileDisplayMode">
            <summary>Stub type of MyEvents.Web.DisplayModes.MobileDisplayMode</summary>
        </member>
        <member name="M:MyEvents.Web.DisplayModes.Fakes.StubMobileDisplayMode.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:MyEvents.Web.DisplayModes.Fakes.StubMobileDisplayMode.DisplayModeIdGet">
            <summary>Sets the stub of DefaultDisplayMode.get_DisplayModeId()</summary>
        </member>
        <member name="M:MyEvents.Web.DisplayModes.Fakes.StubMobileDisplayMode.GetDisplayInfo(System.Web.HttpContextBase,System.String,System.Func{System.String,System.Boolean})">
            <summary>Sets the stub of DefaultDisplayMode.GetDisplayInfo(HttpContextBase httpContext, String virtualPath, Func`2&lt;String,Boolean&gt; virtualPathExists)</summary>
        </member>
        <member name="F:MyEvents.Web.DisplayModes.Fakes.StubMobileDisplayMode.GetDisplayInfoHttpContextBaseStringFuncOfStringBoolean">
            <summary>Sets the stub of DefaultDisplayMode.GetDisplayInfo(HttpContextBase httpContext, String virtualPath, Func`2&lt;String,Boolean&gt; virtualPathExists)</summary>
        </member>
        <member name="M:MyEvents.Web.DisplayModes.Fakes.StubMobileDisplayMode.InitializeStub">
            <summary>Initializes a new instance of type StubMobileDisplayMode</summary>
        </member>
        <member name="M:MyEvents.Web.DisplayModes.Fakes.StubMobileDisplayMode.TransformPath(System.String,System.String)">
            <summary>Sets the stub of DefaultDisplayMode.TransformPath(String virtualPath, String suffix)</summary>
        </member>
        <member name="F:MyEvents.Web.DisplayModes.Fakes.StubMobileDisplayMode.TransformPathStringString">
            <summary>Sets the stub of DefaultDisplayMode.TransformPath(String virtualPath, String suffix)</summary>
        </member>
        <member name="P:MyEvents.Web.DisplayModes.Fakes.StubMobileDisplayMode.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.DisplayModes.Fakes.StubMobileDisplayMode.DisplayModeId">
            <summary>Sets the stub of DefaultDisplayMode.get_DisplayModeId()</summary>
        </member>
        <member name="P:MyEvents.Web.DisplayModes.Fakes.StubMobileDisplayMode.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.DisplayModes.Fakes.StubMobileDisplayMode.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:MyEvents.Web.Fakes.ShimBundleConfig">
            <summary>Shim type of MyEvents.Web.BundleConfig</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimBundleConfig.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimBundleConfig.#ctor(MyEvents.Web.BundleConfig)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimBundleConfig.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimBundleConfig.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimBundleConfig.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimBundleConfig.Constructor">
            <summary>Sets the shim of BundleConfig.BundleConfig()</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimBundleConfig.RegisterScriptsBundleCollection">
            <summary>Sets the shim of BundleConfig.RegisterScripts(BundleCollection bundles)</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimBundleConfig.RegisterStylesBundleCollection">
            <summary>Sets the shim of BundleConfig.RegisterStyles(BundleCollection bundles)</summary>
        </member>
        <member name="T:MyEvents.Web.Fakes.ShimBundleConfig.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:MyEvents.Web.Fakes.ShimFilterAttributeProvider">
            <summary>Shim type of MyEvents.Web.FilterAttributeProvider</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimFilterAttributeProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimFilterAttributeProvider.#ctor(MyEvents.Web.FilterAttributeProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimFilterAttributeProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimFilterAttributeProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimFilterAttributeProvider.Bind(System.Web.Mvc.IFilterProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimFilterAttributeProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimFilterAttributeProvider.BuildUpAttributesIEnumerableOfFilterAttribute">
            <summary>Sets the shim of FilterAttributeProvider.BuildUpAttributes(IEnumerable`1&lt;FilterAttribute&gt; attributes)</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimFilterAttributeProvider.ConstructorIUnityContainer">
            <summary>Sets the shim of FilterAttributeProvider.FilterAttributeProvider(IUnityContainer container)</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimFilterAttributeProvider.GetActionAttributesControllerContextActionDescriptor">
            <summary>Sets the shim of FilterAttributeProvider.GetActionAttributes(ControllerContext controllerContext, ActionDescriptor actionDescriptor)</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimFilterAttributeProvider.GetControllerAttributesControllerContextActionDescriptor">
            <summary>Sets the shim of FilterAttributeProvider.GetControllerAttributes(ControllerContext controllerContext, ActionDescriptor actionDescriptor)</summary>
        </member>
        <member name="T:MyEvents.Web.Fakes.ShimFilterAttributeProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimFilterAttributeProvider.AllInstances.BuildUpAttributesIEnumerableOfFilterAttribute">
            <summary>Sets the shim of FilterAttributeProvider.BuildUpAttributes(IEnumerable`1&lt;FilterAttribute&gt; attributes)</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimFilterAttributeProvider.AllInstances.GetActionAttributesControllerContextActionDescriptor">
            <summary>Sets the shim of FilterAttributeProvider.GetActionAttributes(ControllerContext controllerContext, ActionDescriptor actionDescriptor)</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimFilterAttributeProvider.AllInstances.GetControllerAttributesControllerContextActionDescriptor">
            <summary>Sets the shim of FilterAttributeProvider.GetControllerAttributes(ControllerContext controllerContext, ActionDescriptor actionDescriptor)</summary>
        </member>
        <member name="T:MyEvents.Web.Fakes.ShimFilterConfig">
            <summary>Shim type of MyEvents.Web.FilterConfig</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimFilterConfig.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimFilterConfig.#ctor(MyEvents.Web.FilterConfig)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimFilterConfig.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimFilterConfig.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimFilterConfig.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimFilterConfig.Constructor">
            <summary>Sets the shim of FilterConfig.FilterConfig()</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimFilterConfig.RegisterFilterProvidersIUnityContainer">
            <summary>Sets the shim of FilterConfig.RegisterFilterProviders(IUnityContainer unityContainer)</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimFilterConfig.RegisterGlobalFiltersGlobalFilterCollectionIUnityContainer">
            <summary>Sets the shim of FilterConfig.RegisterGlobalFilters(GlobalFilterCollection filters, IUnityContainer unityContainer)</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimFilterConfig._RegisterFilterProvidersb__0IFilterProvider">
            <summary>Sets the shim of FilterConfig.&lt;RegisterFilterProviders&gt;b__0(IFilterProvider fp)</summary>
        </member>
        <member name="T:MyEvents.Web.Fakes.ShimFilterConfig.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:MyEvents.Web.Fakes.ShimJsNoTransform">
            <summary>Shim type of MyEvents.Web.JsNoTransform</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimJsNoTransform.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimJsNoTransform.#ctor(MyEvents.Web.JsNoTransform)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimJsNoTransform.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimJsNoTransform.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimJsNoTransform.Bind(System.Web.Optimization.IBundleTransform)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimJsNoTransform.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimJsNoTransform.Constructor">
            <summary>Sets the shim of JsNoTransform.JsNoTransform()</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimJsNoTransform.ProcessBundleContextBundleResponse">
            <summary>Sets the shim of JsNoTransform.Process(BundleContext context, BundleResponse response)</summary>
        </member>
        <member name="T:MyEvents.Web.Fakes.ShimJsNoTransform.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimJsNoTransform.AllInstances.ProcessBundleContextBundleResponse">
            <summary>Sets the shim of JsNoTransform.Process(BundleContext context, BundleResponse response)</summary>
        </member>
        <member name="T:MyEvents.Web.Fakes.ShimLessTransform">
            <summary>Shim type of MyEvents.Web.LessTransform</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimLessTransform.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimLessTransform.#ctor(MyEvents.Web.LessTransform)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimLessTransform.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimLessTransform.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimLessTransform.Bind(System.Web.Optimization.IBundleTransform)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimLessTransform.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimLessTransform.Constructor">
            <summary>Sets the shim of LessTransform.LessTransform()</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimLessTransform.ProcessBundleContextBundleResponse">
            <summary>Sets the shim of LessTransform.Process(BundleContext context, BundleResponse response)</summary>
        </member>
        <member name="T:MyEvents.Web.Fakes.ShimLessTransform.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimLessTransform.AllInstances.ProcessBundleContextBundleResponse">
            <summary>Sets the shim of LessTransform.Process(BundleContext context, BundleResponse response)</summary>
        </member>
        <member name="T:MyEvents.Web.Fakes.ShimModelBinderConfig">
            <summary>Shim type of MyEvents.Web.ModelBinderConfig</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimModelBinderConfig.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimModelBinderConfig.#ctor(MyEvents.Web.ModelBinderConfig)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimModelBinderConfig.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimModelBinderConfig.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimModelBinderConfig.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimModelBinderConfig.Constructor">
            <summary>Sets the shim of ModelBinderConfig.ModelBinderConfig()</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimModelBinderConfig.RegisterModelBindersIUnityContainer">
            <summary>Sets the shim of ModelBinderConfig.RegisterModelBinders(IUnityContainer unityContainer)</summary>
        </member>
        <member name="T:MyEvents.Web.Fakes.ShimModelBinderConfig.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:MyEvents.Web.Fakes.ShimMvcApplication">
            <summary>Shim type of MyEvents.Web.MvcApplication</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimMvcApplication.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimMvcApplication.#ctor(MyEvents.Web.MvcApplication)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimMvcApplication.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimMvcApplication.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimMvcApplication.Bind(System.ComponentModel.IComponent)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimMvcApplication.Bind(System.Web.IHttpAsyncHandler)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimMvcApplication.Bind(System.Web.IHttpHandler)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimMvcApplication.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimMvcApplication.Application_Start">
            <summary>Sets the shim of MvcApplication.Application_Start()</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimMvcApplication.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimMvcApplication.Constructor">
            <summary>Sets the shim of MvcApplication.MvcApplication()</summary>
        </member>
        <member name="T:MyEvents.Web.Fakes.ShimMvcApplication.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimMvcApplication.AllInstances.Application_Start">
            <summary>Sets the shim of MvcApplication.Application_Start()</summary>
        </member>
        <member name="T:MyEvents.Web.Fakes.ShimRouteConfig">
            <summary>Shim type of MyEvents.Web.RouteConfig</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimRouteConfig.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimRouteConfig.#ctor(MyEvents.Web.RouteConfig)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimRouteConfig.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimRouteConfig.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimRouteConfig.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimRouteConfig.Constructor">
            <summary>Sets the shim of RouteConfig.RouteConfig()</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimRouteConfig.RegisterRoutesRouteCollection">
            <summary>Sets the shim of RouteConfig.RegisterRoutes(RouteCollection routes)</summary>
        </member>
        <member name="T:MyEvents.Web.Fakes.ShimRouteConfig.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:MyEvents.Web.Fakes.ShimUnityDependencyResolver">
            <summary>Shim type of MyEvents.Web.UnityDependencyResolver</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimUnityDependencyResolver.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimUnityDependencyResolver.#ctor(MyEvents.Web.UnityDependencyResolver)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimUnityDependencyResolver.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimUnityDependencyResolver.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimUnityDependencyResolver.Bind(System.Web.Mvc.IDependencyResolver)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.ShimUnityDependencyResolver.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimUnityDependencyResolver.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimUnityDependencyResolver.ConfigureContainer">
            <summary>Sets the shim of UnityDependencyResolver.ConfigureContainer()</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimUnityDependencyResolver.ConstructorIUnityContainer">
            <summary>Sets the shim of UnityDependencyResolver.UnityDependencyResolver(IUnityContainer unityContainer)</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimUnityDependencyResolver.Dispose">
            <summary>Sets the shim of UnityDependencyResolver.Dispose()</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimUnityDependencyResolver.DisposeBoolean">
            <summary>Sets the shim of UnityDependencyResolver.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimUnityDependencyResolver.GetServiceType">
            <summary>Sets the shim of UnityDependencyResolver.GetService(Type serviceType)</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimUnityDependencyResolver.GetServicesType">
            <summary>Sets the shim of UnityDependencyResolver.GetServices(Type serviceType)</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimUnityDependencyResolver._ConfigureContainerb__0IUnityContainer">
            <summary>Sets the shim of UnityDependencyResolver.&lt;ConfigureContainer&gt;b__0(IUnityContainer c)</summary>
        </member>
        <member name="T:MyEvents.Web.Fakes.ShimUnityDependencyResolver.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimUnityDependencyResolver.AllInstances.ConfigureContainer">
            <summary>Sets the shim of UnityDependencyResolver.ConfigureContainer()</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimUnityDependencyResolver.AllInstances.Dispose">
            <summary>Sets the shim of UnityDependencyResolver.Dispose()</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimUnityDependencyResolver.AllInstances.DisposeBoolean">
            <summary>Sets the shim of UnityDependencyResolver.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimUnityDependencyResolver.AllInstances.GetServiceType">
            <summary>Sets the shim of UnityDependencyResolver.GetService(Type serviceType)</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimUnityDependencyResolver.AllInstances.GetServicesType">
            <summary>Sets the shim of UnityDependencyResolver.GetServices(Type serviceType)</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.ShimUnityDependencyResolver.AllInstances._ConfigureContainerb__0IUnityContainer">
            <summary>Sets the shim of UnityDependencyResolver.&lt;ConfigureContainer&gt;b__0(IUnityContainer c)</summary>
        </member>
        <member name="T:MyEvents.Web.Fakes.StubBundleConfig">
            <summary>Stub type of MyEvents.Web.BundleConfig</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.StubBundleConfig.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.StubBundleConfig.InitializeStub">
            <summary>Initializes a new instance of type StubBundleConfig</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.StubBundleConfig.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.StubBundleConfig.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.StubBundleConfig.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:MyEvents.Web.Fakes.StubFilterAttributeProvider">
            <summary>Stub type of MyEvents.Web.FilterAttributeProvider</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.StubFilterAttributeProvider.#ctor(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.StubFilterAttributeProvider.GetActionAttributes(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
            <summary>Sets the stub of FilterAttributeProvider.GetActionAttributes(ControllerContext controllerContext, ActionDescriptor actionDescriptor)</summary>
        </member>
        <member name="F:MyEvents.Web.Fakes.StubFilterAttributeProvider.GetActionAttributesControllerContextActionDescriptor">
            <summary>Sets the stub of FilterAttributeProvider.GetActionAttributes(ControllerContext controllerContext, ActionDescriptor actionDescriptor)</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.StubFilterAttributeProvider.GetControllerAttributes(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
            <summary>Sets the stub of FilterAttributeProvider.GetControllerAttributes(ControllerContext controllerContext, ActionDescriptor actionDescriptor)</summary>
        </member>
        <member name="F:MyEvents.Web.Fakes.StubFilterAttributeProvider.GetControllerAttributesControllerContextActionDescriptor">
            <summary>Sets the stub of FilterAttributeProvider.GetControllerAttributes(ControllerContext controllerContext, ActionDescriptor actionDescriptor)</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.StubFilterAttributeProvider.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
            <summary>Sets the stub of FilterAttributeFilterProvider.GetFilters(ControllerContext controllerContext, ActionDescriptor actionDescriptor)</summary>
        </member>
        <member name="F:MyEvents.Web.Fakes.StubFilterAttributeProvider.GetFiltersControllerContextActionDescriptor">
            <summary>Sets the stub of FilterAttributeFilterProvider.GetFilters(ControllerContext controllerContext, ActionDescriptor actionDescriptor)</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.StubFilterAttributeProvider.InitializeStub">
            <summary>Initializes a new instance of type StubFilterAttributeProvider</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.StubFilterAttributeProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.StubFilterAttributeProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.StubFilterAttributeProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:MyEvents.Web.Fakes.StubFilterConfig">
            <summary>Stub type of MyEvents.Web.FilterConfig</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.StubFilterConfig.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.StubFilterConfig.InitializeStub">
            <summary>Initializes a new instance of type StubFilterConfig</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.StubFilterConfig.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.StubFilterConfig.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.StubFilterConfig.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:MyEvents.Web.Fakes.StubJsNoTransform">
            <summary>Stub type of MyEvents.Web.JsNoTransform</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.StubJsNoTransform.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.StubJsNoTransform.InitializeStub">
            <summary>Initializes a new instance of type StubJsNoTransform</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.StubJsNoTransform.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.StubJsNoTransform.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.StubJsNoTransform.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:MyEvents.Web.Fakes.StubLessTransform">
            <summary>Stub type of MyEvents.Web.LessTransform</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.StubLessTransform.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.StubLessTransform.InitializeStub">
            <summary>Initializes a new instance of type StubLessTransform</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.StubLessTransform.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.StubLessTransform.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.StubLessTransform.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:MyEvents.Web.Fakes.StubModelBinderConfig">
            <summary>Stub type of MyEvents.Web.ModelBinderConfig</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.StubModelBinderConfig.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.StubModelBinderConfig.InitializeStub">
            <summary>Initializes a new instance of type StubModelBinderConfig</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.StubModelBinderConfig.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.StubModelBinderConfig.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.StubModelBinderConfig.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:MyEvents.Web.Fakes.StubMvcApplication">
            <summary>Stub type of MyEvents.Web.MvcApplication</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.StubMvcApplication.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.StubMvcApplication.Dispose">
            <summary>Sets the stub of HttpApplication.Dispose()</summary>
        </member>
        <member name="F:MyEvents.Web.Fakes.StubMvcApplication.Dispose01">
            <summary>Sets the stub of HttpApplication.Dispose()</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.StubMvcApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
            <summary>Sets the stub of HttpApplication.GetOutputCacheProviderName(HttpContext context)</summary>
        </member>
        <member name="F:MyEvents.Web.Fakes.StubMvcApplication.GetOutputCacheProviderNameHttpContext">
            <summary>Sets the stub of HttpApplication.GetOutputCacheProviderName(HttpContext context)</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.StubMvcApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)">
            <summary>Sets the stub of HttpApplication.GetVaryByCustomString(HttpContext context, String custom)</summary>
        </member>
        <member name="F:MyEvents.Web.Fakes.StubMvcApplication.GetVaryByCustomStringHttpContextString">
            <summary>Sets the stub of HttpApplication.GetVaryByCustomString(HttpContext context, String custom)</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.StubMvcApplication.Init">
            <summary>Sets the stub of HttpApplication.Init()</summary>
        </member>
        <member name="F:MyEvents.Web.Fakes.StubMvcApplication.Init01">
            <summary>Sets the stub of HttpApplication.Init()</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.StubMvcApplication.InitializeStub">
            <summary>Initializes a new instance of type StubMvcApplication</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.StubMvcApplication.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.StubMvcApplication.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.StubMvcApplication.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:MyEvents.Web.Fakes.StubRouteConfig">
            <summary>Stub type of MyEvents.Web.RouteConfig</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.StubRouteConfig.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.StubRouteConfig.InitializeStub">
            <summary>Initializes a new instance of type StubRouteConfig</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.StubRouteConfig.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.StubRouteConfig.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.StubRouteConfig.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:MyEvents.Web.Fakes.StubUnityDependencyResolver">
            <summary>Stub type of MyEvents.Web.UnityDependencyResolver</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.StubUnityDependencyResolver.#ctor(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:MyEvents.Web.Fakes.StubUnityDependencyResolver.InitializeStub">
            <summary>Initializes a new instance of type StubUnityDependencyResolver</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.StubUnityDependencyResolver.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.StubUnityDependencyResolver.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.Fakes.StubUnityDependencyResolver.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:MyEvents.Web.LifetimeManagers.Fakes.ShimOfflineModeSwitcherTransientLifetimeManager">
            <summary>Shim type of MyEvents.Web.LifetimeManagers.OfflineModeSwitcherTransientLifetimeManager</summary>
        </member>
        <member name="M:MyEvents.Web.LifetimeManagers.Fakes.ShimOfflineModeSwitcherTransientLifetimeManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.LifetimeManagers.Fakes.ShimOfflineModeSwitcherTransientLifetimeManager.#ctor(MyEvents.Web.LifetimeManagers.OfflineModeSwitcherTransientLifetimeManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.LifetimeManagers.Fakes.ShimOfflineModeSwitcherTransientLifetimeManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.LifetimeManagers.Fakes.ShimOfflineModeSwitcherTransientLifetimeManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.LifetimeManagers.Fakes.ShimOfflineModeSwitcherTransientLifetimeManager.Bind(Microsoft.Practices.ObjectBuilder2.IBuilderPolicy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.LifetimeManagers.Fakes.ShimOfflineModeSwitcherTransientLifetimeManager.Bind(Microsoft.Practices.ObjectBuilder2.ILifetimePolicy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:MyEvents.Web.LifetimeManagers.Fakes.ShimOfflineModeSwitcherTransientLifetimeManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.LifetimeManagers.Fakes.ShimOfflineModeSwitcherTransientLifetimeManager.ConstructorType">
            <summary>Sets the shim of OfflineModeSwitcherTransientLifetimeManager.OfflineModeSwitcherTransientLifetimeManager(Type offlineFallback)</summary>
        </member>
        <member name="P:MyEvents.Web.LifetimeManagers.Fakes.ShimOfflineModeSwitcherTransientLifetimeManager.GetValue">
            <summary>Sets the shim of OfflineModeSwitcherTransientLifetimeManager.GetValue()</summary>
        </member>
        <member name="T:MyEvents.Web.LifetimeManagers.Fakes.ShimOfflineModeSwitcherTransientLifetimeManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:MyEvents.Web.LifetimeManagers.Fakes.ShimOfflineModeSwitcherTransientLifetimeManager.AllInstances.GetValue">
            <summary>Sets the shim of OfflineModeSwitcherTransientLifetimeManager.GetValue()</summary>
        </member>
        <member name="T:MyEvents.Web.LifetimeManagers.Fakes.StubOfflineModeSwitcherTransientLifetimeManager">
            <summary>Stub type of MyEvents.Web.LifetimeManagers.OfflineModeSwitcherTransientLifetimeManager</summary>
        </member>
        <member name="M:MyEvents.Web.LifetimeManagers.Fakes.StubOfflineModeSwitcherTransientLifetimeManager.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:MyEvents.Web.LifetimeManagers.Fakes.StubOfflineModeSwitcherTransientLifetimeManager.GetValue">
            <summary>Sets the stub of OfflineModeSwitcherTransientLifetimeManager.GetValue()</summary>
        </member>
        <member name="F:MyEvents.Web.LifetimeManagers.Fakes.StubOfflineModeSwitcherTransientLifetimeManager.GetValue01">
            <summary>Sets the stub of OfflineModeSwitcherTransientLifetimeManager.GetValue()</summary>
        </member>
        <member name="M:MyEvents.Web.LifetimeManagers.Fakes.StubOfflineModeSwitcherTransientLifetimeManager.InitializeStub">
            <summary>Initializes a new instance of type StubOfflineModeSwitcherTransientLifetimeManager</summary>
        </member>
        <member name="M:MyEvents.Web.LifetimeManagers.Fakes.StubOfflineModeSwitcherTransientLifetimeManager.RemoveValue">
            <summary>Sets the stub of TransientLifetimeManager.RemoveValue()</summary>
        </member>
        <member name="F:MyEvents.Web.LifetimeManagers.Fakes.StubOfflineModeSwitcherTransientLifetimeManager.RemoveValue01">
            <summary>Sets the stub of TransientLifetimeManager.RemoveValue()</summary>
        </member>
        <member name="M:MyEvents.Web.LifetimeManagers.Fakes.StubOfflineModeSwitcherTransientLifetimeManager.SetValue(System.Object)">
            <summary>Sets the stub of TransientLifetimeManager.SetValue(Object newValue)</summary>
        </member>
        <member name="F:MyEvents.Web.LifetimeManagers.Fakes.StubOfflineModeSwitcherTransientLifetimeManager.SetValueObject">
            <summary>Sets the stub of TransientLifetimeManager.SetValue(Object newValue)</summary>
        </member>
        <member name="P:MyEvents.Web.LifetimeManagers.Fakes.StubOfflineModeSwitcherTransientLifetimeManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.LifetimeManagers.Fakes.StubOfflineModeSwitcherTransientLifetimeManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.LifetimeManagers.Fakes.StubOfflineModeSwitcherTransientLifetimeManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:MyEvents.Web.Mappers.Fakes.ShimEventDefinitionToScheduleViewModelMapper">
            <summary>Shim type of MyEvents.Web.Mappers.EventDefinitionToScheduleViewModelMapper</summary>
        </member>
        <member name="M:MyEvents.Web.Mappers.Fakes.ShimEventDefinitionToScheduleViewModelMapper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.Mappers.Fakes.ShimEventDefinitionToScheduleViewModelMapper.#ctor(MyEvents.Web.Mappers.EventDefinitionToScheduleViewModelMapper)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.Mappers.Fakes.ShimEventDefinitionToScheduleViewModelMapper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Mappers.Fakes.ShimEventDefinitionToScheduleViewModelMapper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Mappers.Fakes.ShimEventDefinitionToScheduleViewModelMapper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Mappers.Fakes.ShimEventDefinitionToScheduleViewModelMapper.Constructor">
            <summary>Sets the shim of EventDefinitionToScheduleViewModelMapper.EventDefinitionToScheduleViewModelMapper()</summary>
        </member>
        <member name="P:MyEvents.Web.Mappers.Fakes.ShimEventDefinitionToScheduleViewModelMapper.GetTimesEventDefinition">
            <summary>Sets the shim of EventDefinitionToScheduleViewModelMapper.GetTimes(EventDefinition eventDefinition)</summary>
        </member>
        <member name="P:MyEvents.Web.Mappers.Fakes.ShimEventDefinitionToScheduleViewModelMapper.MapEventDefinition">
            <summary>Sets the shim of EventDefinitionToScheduleViewModelMapper.Map(EventDefinition eventDefinition)</summary>
        </member>
        <member name="P:MyEvents.Web.Mappers.Fakes.ShimEventDefinitionToScheduleViewModelMapper._Mapb__3Session">
            <summary>Sets the shim of EventDefinitionToScheduleViewModelMapper.&lt;Map&gt;b__3(Session s)</summary>
        </member>
        <member name="T:MyEvents.Web.Mappers.Fakes.ShimEventDefinitionToScheduleViewModelMapper.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:MyEvents.Web.Mappers.Fakes.ShimEventDefinitionToScheduleViewModelMapper.AllInstances.GetTimesEventDefinition">
            <summary>Sets the shim of EventDefinitionToScheduleViewModelMapper.GetTimes(EventDefinition eventDefinition)</summary>
        </member>
        <member name="P:MyEvents.Web.Mappers.Fakes.ShimEventDefinitionToScheduleViewModelMapper.AllInstances.MapEventDefinition">
            <summary>Sets the shim of EventDefinitionToScheduleViewModelMapper.Map(EventDefinition eventDefinition)</summary>
        </member>
        <member name="T:MyEvents.Web.Mappers.Fakes.ShimFacebookUserInformationToIdentityMapper">
            <summary>Shim type of MyEvents.Web.Mappers.FacebookUserInformationToIdentityMapper</summary>
        </member>
        <member name="M:MyEvents.Web.Mappers.Fakes.ShimFacebookUserInformationToIdentityMapper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.Mappers.Fakes.ShimFacebookUserInformationToIdentityMapper.#ctor(MyEvents.Web.Mappers.FacebookUserInformationToIdentityMapper)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.Mappers.Fakes.ShimFacebookUserInformationToIdentityMapper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Mappers.Fakes.ShimFacebookUserInformationToIdentityMapper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Mappers.Fakes.ShimFacebookUserInformationToIdentityMapper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Mappers.Fakes.ShimFacebookUserInformationToIdentityMapper.Constructor">
            <summary>Sets the shim of FacebookUserInformationToIdentityMapper.FacebookUserInformationToIdentityMapper()</summary>
        </member>
        <member name="P:MyEvents.Web.Mappers.Fakes.ShimFacebookUserInformationToIdentityMapper.MapDictionaryOfStringObjectMyEventsIdentity">
            <summary>Sets the shim of FacebookUserInformationToIdentityMapper.Map(Dictionary`2&lt;String,Object&gt; source, MyEventsIdentity target)</summary>
        </member>
        <member name="T:MyEvents.Web.Mappers.Fakes.ShimFacebookUserInformationToIdentityMapper.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:MyEvents.Web.Mappers.Fakes.ShimFacebookUserInformationToIdentityMapper.AllInstances.MapDictionaryOfStringObjectMyEventsIdentity">
            <summary>Sets the shim of FacebookUserInformationToIdentityMapper.Map(Dictionary`2&lt;String,Object&gt; source, MyEventsIdentity target)</summary>
        </member>
        <member name="T:MyEvents.Web.Mappers.Fakes.StubEventDefinitionToScheduleViewModelMapper">
            <summary>Stub type of MyEvents.Web.Mappers.EventDefinitionToScheduleViewModelMapper</summary>
        </member>
        <member name="M:MyEvents.Web.Mappers.Fakes.StubEventDefinitionToScheduleViewModelMapper.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:MyEvents.Web.Mappers.Fakes.StubEventDefinitionToScheduleViewModelMapper.InitializeStub">
            <summary>Initializes a new instance of type StubEventDefinitionToScheduleViewModelMapper</summary>
        </member>
        <member name="P:MyEvents.Web.Mappers.Fakes.StubEventDefinitionToScheduleViewModelMapper.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.Mappers.Fakes.StubEventDefinitionToScheduleViewModelMapper.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.Mappers.Fakes.StubEventDefinitionToScheduleViewModelMapper.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:MyEvents.Web.Mappers.Fakes.StubFacebookUserInformationToIdentityMapper">
            <summary>Stub type of MyEvents.Web.Mappers.FacebookUserInformationToIdentityMapper</summary>
        </member>
        <member name="M:MyEvents.Web.Mappers.Fakes.StubFacebookUserInformationToIdentityMapper.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:MyEvents.Web.Mappers.Fakes.StubFacebookUserInformationToIdentityMapper.InitializeStub">
            <summary>Initializes a new instance of type StubFacebookUserInformationToIdentityMapper</summary>
        </member>
        <member name="P:MyEvents.Web.Mappers.Fakes.StubFacebookUserInformationToIdentityMapper.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.Mappers.Fakes.StubFacebookUserInformationToIdentityMapper.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.Mappers.Fakes.StubFacebookUserInformationToIdentityMapper.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:MyEvents.Web.Models.Fakes.ShimHomeViewModel">
            <summary>Shim type of MyEvents.Web.Models.HomeViewModel</summary>
        </member>
        <member name="M:MyEvents.Web.Models.Fakes.ShimHomeViewModel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.Models.Fakes.ShimHomeViewModel.#ctor(MyEvents.Web.Models.HomeViewModel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.Models.Fakes.ShimHomeViewModel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Models.Fakes.ShimHomeViewModel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Models.Fakes.ShimHomeViewModel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Models.Fakes.ShimHomeViewModel.ComingSoonGet">
            <summary>Sets the shim of HomeViewModel.get_ComingSoon()</summary>
        </member>
        <member name="P:MyEvents.Web.Models.Fakes.ShimHomeViewModel.ComingSoonHighlightedGet">
            <summary>Sets the shim of HomeViewModel.get_ComingSoonHighlighted()</summary>
        </member>
        <member name="P:MyEvents.Web.Models.Fakes.ShimHomeViewModel.ConstructorIEnumerableOfEventDefinitionInt32Int32Int32">
            <summary>Sets the shim of HomeViewModel.HomeViewModel(IEnumerable`1&lt;EventDefinition&gt; events, Int32 totalCount, Int32 pageIndex, Int32 pageSize)</summary>
        </member>
        <member name="P:MyEvents.Web.Models.Fakes.ShimHomeViewModel.EventsGet">
            <summary>Sets the shim of HomeViewModel.get_Events()</summary>
        </member>
        <member name="P:MyEvents.Web.Models.Fakes.ShimHomeViewModel.EventsSetIEnumerableOfEventDefinition">
            <summary>Sets the shim of HomeViewModel.set_Events(IEnumerable`1&lt;EventDefinition&gt; value)</summary>
        </member>
        <member name="P:MyEvents.Web.Models.Fakes.ShimHomeViewModel.PageIndexGet">
            <summary>Sets the shim of HomeViewModel.get_PageIndex()</summary>
        </member>
        <member name="P:MyEvents.Web.Models.Fakes.ShimHomeViewModel.PageIndexSetInt32">
            <summary>Sets the shim of HomeViewModel.set_PageIndex(Int32 value)</summary>
        </member>
        <member name="P:MyEvents.Web.Models.Fakes.ShimHomeViewModel.PageSizeGet">
            <summary>Sets the shim of HomeViewModel.get_PageSize()</summary>
        </member>
        <member name="P:MyEvents.Web.Models.Fakes.ShimHomeViewModel.PageSizeSetInt32">
            <summary>Sets the shim of HomeViewModel.set_PageSize(Int32 value)</summary>
        </member>
        <member name="P:MyEvents.Web.Models.Fakes.ShimHomeViewModel.TotalCountGet">
            <summary>Sets the shim of HomeViewModel.get_TotalCount()</summary>
        </member>
        <member name="P:MyEvents.Web.Models.Fakes.ShimHomeViewModel.TotalCountSetInt32">
            <summary>Sets the shim of HomeViewModel.set_TotalCount(Int32 value)</summary>
        </member>
        <member name="P:MyEvents.Web.Models.Fakes.ShimHomeViewModel.TotalPagesGet">
            <summary>Sets the shim of HomeViewModel.get_TotalPages()</summary>
        </member>
        <member name="T:MyEvents.Web.Models.Fakes.ShimHomeViewModel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:MyEvents.Web.Models.Fakes.ShimHomeViewModel.AllInstances.ComingSoonGet">
            <summary>Sets the shim of HomeViewModel.get_ComingSoon()</summary>
        </member>
        <member name="P:MyEvents.Web.Models.Fakes.ShimHomeViewModel.AllInstances.ComingSoonHighlightedGet">
            <summary>Sets the shim of HomeViewModel.get_ComingSoonHighlighted()</summary>
        </member>
        <member name="P:MyEvents.Web.Models.Fakes.ShimHomeViewModel.AllInstances.EventsGet">
            <summary>Sets the shim of HomeViewModel.get_Events()</summary>
        </member>
        <member name="P:MyEvents.Web.Models.Fakes.ShimHomeViewModel.AllInstances.EventsSetIEnumerableOfEventDefinition">
            <summary>Sets the shim of HomeViewModel.set_Events(IEnumerable`1&lt;EventDefinition&gt; value)</summary>
        </member>
        <member name="P:MyEvents.Web.Models.Fakes.ShimHomeViewModel.AllInstances.PageIndexGet">
            <summary>Sets the shim of HomeViewModel.get_PageIndex()</summary>
        </member>
        <member name="P:MyEvents.Web.Models.Fakes.ShimHomeViewModel.AllInstances.PageIndexSetInt32">
            <summary>Sets the shim of HomeViewModel.set_PageIndex(Int32 value)</summary>
        </member>
        <member name="P:MyEvents.Web.Models.Fakes.ShimHomeViewModel.AllInstances.PageSizeGet">
            <summary>Sets the shim of HomeViewModel.get_PageSize()</summary>
        </member>
        <member name="P:MyEvents.Web.Models.Fakes.ShimHomeViewModel.AllInstances.PageSizeSetInt32">
            <summary>Sets the shim of HomeViewModel.set_PageSize(Int32 value)</summary>
        </member>
        <member name="P:MyEvents.Web.Models.Fakes.ShimHomeViewModel.AllInstances.TotalCountGet">
            <summary>Sets the shim of HomeViewModel.get_TotalCount()</summary>
        </member>
        <member name="P:MyEvents.Web.Models.Fakes.ShimHomeViewModel.AllInstances.TotalCountSetInt32">
            <summary>Sets the shim of HomeViewModel.set_TotalCount(Int32 value)</summary>
        </member>
        <member name="P:MyEvents.Web.Models.Fakes.ShimHomeViewModel.AllInstances.TotalPagesGet">
            <summary>Sets the shim of HomeViewModel.get_TotalPages()</summary>
        </member>
        <member name="T:MyEvents.Web.Models.Fakes.StubHomeViewModel">
            <summary>Stub type of MyEvents.Web.Models.HomeViewModel</summary>
        </member>
        <member name="M:MyEvents.Web.Models.Fakes.StubHomeViewModel.#ctor(System.Collections.Generic.IEnumerable{MyEvents.Model.EventDefinition},System.Int32,System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:MyEvents.Web.Models.Fakes.StubHomeViewModel.InitializeStub">
            <summary>Initializes a new instance of type StubHomeViewModel</summary>
        </member>
        <member name="P:MyEvents.Web.Models.Fakes.StubHomeViewModel.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.Models.Fakes.StubHomeViewModel.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.Models.Fakes.StubHomeViewModel.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:MyEvents.Web.Services.Fakes.ShimAuthenticationService">
            <summary>Shim type of MyEvents.Web.Services.AuthenticationService</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.ShimAuthenticationService.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.ShimAuthenticationService.#ctor(MyEvents.Web.Services.AuthenticationService)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.ShimAuthenticationService.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.ShimAuthenticationService.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.ShimAuthenticationService.Bind(MyEvents.Web.Services.IAuthenticationService)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimAuthenticationService.AddUserMyEventsIdentity">
            <summary>Sets the shim of AuthenticationService.AddUser(MyEventsIdentity identity)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimAuthenticationService.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimAuthenticationService.ConstructorIThirdPartyOauthServiceIRegisteredUserRepository">
            <summary>Sets the shim of AuthenticationService.AuthenticationService(IThirdPartyOauthService thirdPartyLoginService, IRegisteredUserRepository registeredUserRepository)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimAuthenticationService.CreateAuthenticationTicketMyEventsIdentityHttpContextBase">
            <summary>Sets the shim of AuthenticationService.CreateAuthenticationTicket(MyEventsIdentity identity, HttpContextBase httpContext)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimAuthenticationService.CreateAuthenticationTicketStringHttpContextBase">
            <summary>Sets the shim of AuthenticationService.CreateAuthenticationTicket(String code, HttpContextBase httpContext)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimAuthenticationService.DestroyAuthenticationTicketMyEventsIdentity">
            <summary>Sets the shim of AuthenticationService.DestroyAuthenticationTicket(MyEventsIdentity identity)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimAuthenticationService.GetIdentityFromTicketHttpContextBase">
            <summary>Sets the shim of AuthenticationService.GetIdentityFromTicket(HttpContextBase httpContext)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimAuthenticationService.GetLoginUrlHttpContextBaseString">
            <summary>Sets the shim of AuthenticationService.GetLoginUrl(HttpContextBase httpContext, String returnUrl)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimAuthenticationService.GetOauthCodeHttpContextBase">
            <summary>Sets the shim of AuthenticationService.GetOauthCode(HttpContextBase httpContext)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimAuthenticationService.HasAuthenticationTicketHttpContextBase">
            <summary>Sets the shim of AuthenticationService.HasAuthenticationTicket(HttpContextBase httpContext)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimAuthenticationService.IsAuthenticatedHttpContextBase">
            <summary>Sets the shim of AuthenticationService.IsAuthenticated(HttpContextBase httpContext)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimAuthenticationService.SetPrincipalHttpContextBase">
            <summary>Sets the shim of AuthenticationService.SetPrincipal(HttpContextBase httpContext)</summary>
        </member>
        <member name="T:MyEvents.Web.Services.Fakes.ShimAuthenticationService.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimAuthenticationService.AllInstances.AddUserMyEventsIdentity">
            <summary>Sets the shim of AuthenticationService.AddUser(MyEventsIdentity identity)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimAuthenticationService.AllInstances.CreateAuthenticationTicketMyEventsIdentityHttpContextBase">
            <summary>Sets the shim of AuthenticationService.CreateAuthenticationTicket(MyEventsIdentity identity, HttpContextBase httpContext)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimAuthenticationService.AllInstances.CreateAuthenticationTicketStringHttpContextBase">
            <summary>Sets the shim of AuthenticationService.CreateAuthenticationTicket(String code, HttpContextBase httpContext)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimAuthenticationService.AllInstances.DestroyAuthenticationTicketMyEventsIdentity">
            <summary>Sets the shim of AuthenticationService.DestroyAuthenticationTicket(MyEventsIdentity identity)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimAuthenticationService.AllInstances.GetIdentityFromTicketHttpContextBase">
            <summary>Sets the shim of AuthenticationService.GetIdentityFromTicket(HttpContextBase httpContext)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimAuthenticationService.AllInstances.GetLoginUrlHttpContextBaseString">
            <summary>Sets the shim of AuthenticationService.GetLoginUrl(HttpContextBase httpContext, String returnUrl)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimAuthenticationService.AllInstances.GetOauthCodeHttpContextBase">
            <summary>Sets the shim of AuthenticationService.GetOauthCode(HttpContextBase httpContext)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimAuthenticationService.AllInstances.HasAuthenticationTicketHttpContextBase">
            <summary>Sets the shim of AuthenticationService.HasAuthenticationTicket(HttpContextBase httpContext)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimAuthenticationService.AllInstances.IsAuthenticatedHttpContextBase">
            <summary>Sets the shim of AuthenticationService.IsAuthenticated(HttpContextBase httpContext)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimAuthenticationService.AllInstances.SetPrincipalHttpContextBase">
            <summary>Sets the shim of AuthenticationService.SetPrincipal(HttpContextBase httpContext)</summary>
        </member>
        <member name="T:MyEvents.Web.Services.Fakes.ShimAuthorizationService">
            <summary>Shim type of MyEvents.Web.Services.AuthorizationService</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.ShimAuthorizationService.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.ShimAuthorizationService.#ctor(MyEvents.Web.Services.AuthorizationService)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.ShimAuthorizationService.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.ShimAuthorizationService.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.ShimAuthorizationService.Bind(MyEvents.Web.Services.IAuthorizationService)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimAuthorizationService.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimAuthorizationService.ConstructorIEventDefinitionRepositoryISessionRepository">
            <summary>Sets the shim of AuthorizationService.AuthorizationService(IEventDefinitionRepository eventDefinitionRepository, ISessionRepository sessionRepository)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimAuthorizationService.ValidateEventAuthorizationMyEventsIdentityEventDefinition">
            <summary>Sets the shim of AuthorizationService.ValidateEventAuthorization(MyEventsIdentity identity, EventDefinition eventDefinition)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimAuthorizationService.ValidateEventAuthorizationMyEventsIdentityInt32">
            <summary>Sets the shim of AuthorizationService.ValidateEventAuthorization(MyEventsIdentity identity, Int32 eventDefinitionid)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimAuthorizationService.ValidateSessionAuthorizationMyEventsIdentityInt32">
            <summary>Sets the shim of AuthorizationService.ValidateSessionAuthorization(MyEventsIdentity identity, Int32 sessionId)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimAuthorizationService.ValidateSessionAuthorizationMyEventsIdentitySession">
            <summary>Sets the shim of AuthorizationService.ValidateSessionAuthorization(MyEventsIdentity identity, Session session)</summary>
        </member>
        <member name="T:MyEvents.Web.Services.Fakes.ShimAuthorizationService.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimAuthorizationService.AllInstances.ValidateEventAuthorizationMyEventsIdentityEventDefinition">
            <summary>Sets the shim of AuthorizationService.ValidateEventAuthorization(MyEventsIdentity identity, EventDefinition eventDefinition)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimAuthorizationService.AllInstances.ValidateEventAuthorizationMyEventsIdentityInt32">
            <summary>Sets the shim of AuthorizationService.ValidateEventAuthorization(MyEventsIdentity identity, Int32 eventDefinitionid)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimAuthorizationService.AllInstances.ValidateSessionAuthorizationMyEventsIdentityInt32">
            <summary>Sets the shim of AuthorizationService.ValidateSessionAuthorization(MyEventsIdentity identity, Int32 sessionId)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimAuthorizationService.AllInstances.ValidateSessionAuthorizationMyEventsIdentitySession">
            <summary>Sets the shim of AuthorizationService.ValidateSessionAuthorization(MyEventsIdentity identity, Session session)</summary>
        </member>
        <member name="T:MyEvents.Web.Services.Fakes.ShimFacebookOauthService">
            <summary>Shim type of MyEvents.Web.Services.FacebookOauthService</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.ShimFacebookOauthService.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.ShimFacebookOauthService.#ctor(MyEvents.Web.Services.FacebookOauthService)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.ShimFacebookOauthService.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.ShimFacebookOauthService.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.ShimFacebookOauthService.Bind(MyEvents.Web.Services.IThirdPartyOauthService)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimFacebookOauthService.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimFacebookOauthService.ConstructorIRegisteredUserRepository">
            <summary>Sets the shim of FacebookOauthService.FacebookOauthService(IRegisteredUserRepository registeredUserRepository)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimFacebookOauthService.GetAccessTokenStringString">
            <summary>Sets the shim of FacebookOauthService.GetAccessToken(String code, String returnUrl)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimFacebookOauthService.GetCodeFromRequestHttpContextBase">
            <summary>Sets the shim of FacebookOauthService.GetCodeFromRequest(HttpContextBase httpContext)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimFacebookOauthService.GetLoginUrlHttpContextBaseString">
            <summary>Sets the shim of FacebookOauthService.GetLoginUrl(HttpContextBase httpContext, String returnUrl)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimFacebookOauthService.GetUserInformationMyEventsIdentity">
            <summary>Sets the shim of FacebookOauthService.GetUserInformation(MyEventsIdentity identity)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimFacebookOauthService.LogOutMyEventsIdentity">
            <summary>Sets the shim of FacebookOauthService.LogOut(MyEventsIdentity identity)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimFacebookOauthService.MapUserInformationToIdentityDictionaryOfStringObjectMyEventsIdentity">
            <summary>Sets the shim of FacebookOauthService.MapUserInformationToIdentity(Dictionary`2&lt;String,Object&gt; userInformation, MyEventsIdentity identity)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimFacebookOauthService._GetAccessTokenb__0String">
            <summary>Sets the shim of FacebookOauthService.&lt;GetAccessToken&gt;b__0(String segment)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimFacebookOauthService._GetAccessTokenb__1StringArray">
            <summary>Sets the shim of FacebookOauthService.&lt;GetAccessToken&gt;b__1(String[] segmentData)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimFacebookOauthService._GetAccessTokenb__2StringArray">
            <summary>Sets the shim of FacebookOauthService.&lt;GetAccessToken&gt;b__2(String[] segmentData)</summary>
        </member>
        <member name="T:MyEvents.Web.Services.Fakes.ShimFacebookOauthService.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimFacebookOauthService.AllInstances.GetAccessTokenStringString">
            <summary>Sets the shim of FacebookOauthService.GetAccessToken(String code, String returnUrl)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimFacebookOauthService.AllInstances.GetCodeFromRequestHttpContextBase">
            <summary>Sets the shim of FacebookOauthService.GetCodeFromRequest(HttpContextBase httpContext)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimFacebookOauthService.AllInstances.GetLoginUrlHttpContextBaseString">
            <summary>Sets the shim of FacebookOauthService.GetLoginUrl(HttpContextBase httpContext, String returnUrl)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimFacebookOauthService.AllInstances.GetUserInformationMyEventsIdentity">
            <summary>Sets the shim of FacebookOauthService.GetUserInformation(MyEventsIdentity identity)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimFacebookOauthService.AllInstances.LogOutMyEventsIdentity">
            <summary>Sets the shim of FacebookOauthService.LogOut(MyEventsIdentity identity)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimFacebookOauthService.AllInstances.MapUserInformationToIdentityDictionaryOfStringObjectMyEventsIdentity">
            <summary>Sets the shim of FacebookOauthService.MapUserInformationToIdentity(Dictionary`2&lt;String,Object&gt; userInformation, MyEventsIdentity identity)</summary>
        </member>
        <member name="T:MyEvents.Web.Services.Fakes.ShimOfflineOauthService">
            <summary>Shim type of MyEvents.Web.Services.OfflineOauthService</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.ShimOfflineOauthService.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.ShimOfflineOauthService.#ctor(MyEvents.Web.Services.OfflineOauthService)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.ShimOfflineOauthService.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.ShimOfflineOauthService.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.ShimOfflineOauthService.Bind(MyEvents.Web.Services.IOfflineOauthService)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.ShimOfflineOauthService.Bind(MyEvents.Web.Services.IThirdPartyOauthService)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimOfflineOauthService.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimOfflineOauthService.Constructor">
            <summary>Sets the shim of OfflineOauthService.OfflineOauthService()</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimOfflineOauthService.GetAccessTokenStringString">
            <summary>Sets the shim of OfflineOauthService.GetAccessToken(String code, String returnUrl)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimOfflineOauthService.GetCodeFromRequestHttpContextBase">
            <summary>Sets the shim of OfflineOauthService.GetCodeFromRequest(HttpContextBase httpContext)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimOfflineOauthService.GetLoginUrlHttpContextBaseString">
            <summary>Sets the shim of OfflineOauthService.GetLoginUrl(HttpContextBase httpContext, String returnUrl)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimOfflineOauthService.GetUserInformationMyEventsIdentity">
            <summary>Sets the shim of OfflineOauthService.GetUserInformation(MyEventsIdentity identity)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimOfflineOauthService.LogOutMyEventsIdentity">
            <summary>Sets the shim of OfflineOauthService.LogOut(MyEventsIdentity identity)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimOfflineOauthService.MapUserInformationToIdentityDictionaryOfStringObjectMyEventsIdentity">
            <summary>Sets the shim of OfflineOauthService.MapUserInformationToIdentity(Dictionary`2&lt;String,Object&gt; userInformation, MyEventsIdentity identity)</summary>
        </member>
        <member name="T:MyEvents.Web.Services.Fakes.ShimOfflineOauthService.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimOfflineOauthService.AllInstances.GetAccessTokenStringString">
            <summary>Sets the shim of OfflineOauthService.GetAccessToken(String code, String returnUrl)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimOfflineOauthService.AllInstances.GetCodeFromRequestHttpContextBase">
            <summary>Sets the shim of OfflineOauthService.GetCodeFromRequest(HttpContextBase httpContext)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimOfflineOauthService.AllInstances.GetLoginUrlHttpContextBaseString">
            <summary>Sets the shim of OfflineOauthService.GetLoginUrl(HttpContextBase httpContext, String returnUrl)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimOfflineOauthService.AllInstances.GetUserInformationMyEventsIdentity">
            <summary>Sets the shim of OfflineOauthService.GetUserInformation(MyEventsIdentity identity)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimOfflineOauthService.AllInstances.LogOutMyEventsIdentity">
            <summary>Sets the shim of OfflineOauthService.LogOut(MyEventsIdentity identity)</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.ShimOfflineOauthService.AllInstances.MapUserInformationToIdentityDictionaryOfStringObjectMyEventsIdentity">
            <summary>Sets the shim of OfflineOauthService.MapUserInformationToIdentity(Dictionary`2&lt;String,Object&gt; userInformation, MyEventsIdentity identity)</summary>
        </member>
        <member name="T:MyEvents.Web.Services.Fakes.StubAuthenticationService">
            <summary>Stub type of MyEvents.Web.Services.AuthenticationService</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.StubAuthenticationService.#ctor(MyEvents.Web.Services.IThirdPartyOauthService,MyEvents.Data.IRegisteredUserRepository)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.StubAuthenticationService.InitializeStub">
            <summary>Initializes a new instance of type StubAuthenticationService</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.StubAuthenticationService.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.StubAuthenticationService.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.StubAuthenticationService.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:MyEvents.Web.Services.Fakes.StubAuthorizationService">
            <summary>Stub type of MyEvents.Web.Services.AuthorizationService</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.StubAuthorizationService.#ctor(MyEvents.Data.IEventDefinitionRepository,MyEvents.Data.ISessionRepository)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.StubAuthorizationService.InitializeStub">
            <summary>Initializes a new instance of type StubAuthorizationService</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.StubAuthorizationService.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.StubAuthorizationService.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.StubAuthorizationService.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:MyEvents.Web.Services.Fakes.StubFacebookOauthService">
            <summary>Stub type of MyEvents.Web.Services.FacebookOauthService</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.StubFacebookOauthService.#ctor(MyEvents.Data.IRegisteredUserRepository)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.StubFacebookOauthService.InitializeStub">
            <summary>Initializes a new instance of type StubFacebookOauthService</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.StubFacebookOauthService.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.StubFacebookOauthService.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.StubFacebookOauthService.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:MyEvents.Web.Services.Fakes.StubIAuthenticationService">
            <summary>Stub type of MyEvents.Web.Services.IAuthenticationService</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.StubIAuthenticationService.#ctor">
            <summary>Initializes a new instance of type StubIAuthenticationService</summary>
        </member>
        <member name="F:MyEvents.Web.Services.Fakes.StubIAuthenticationService.CreateAuthenticationTicketMyEventsIdentityHttpContextBase">
            <summary>Sets the stub of IAuthenticationService.CreateAuthenticationTicket(MyEventsIdentity identity, HttpContextBase httpContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Services.Fakes.StubIAuthenticationService.CreateAuthenticationTicketStringHttpContextBase">
            <summary>Sets the stub of IAuthenticationService.CreateAuthenticationTicket(String code, HttpContextBase httpContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Services.Fakes.StubIAuthenticationService.DestroyAuthenticationTicketMyEventsIdentity">
            <summary>Sets the stub of IAuthenticationService.DestroyAuthenticationTicket(MyEventsIdentity identity)</summary>
        </member>
        <member name="F:MyEvents.Web.Services.Fakes.StubIAuthenticationService.GetIdentityFromTicketHttpContextBase">
            <summary>Sets the stub of IAuthenticationService.GetIdentityFromTicket(HttpContextBase httpContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Services.Fakes.StubIAuthenticationService.GetLoginUrlHttpContextBaseString">
            <summary>Sets the stub of IAuthenticationService.GetLoginUrl(HttpContextBase httpContext, String returnUrl)</summary>
        </member>
        <member name="F:MyEvents.Web.Services.Fakes.StubIAuthenticationService.GetOauthCodeHttpContextBase">
            <summary>Sets the stub of IAuthenticationService.GetOauthCode(HttpContextBase httpContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Services.Fakes.StubIAuthenticationService.HasAuthenticationTicketHttpContextBase">
            <summary>Sets the stub of IAuthenticationService.HasAuthenticationTicket(HttpContextBase httpContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Services.Fakes.StubIAuthenticationService.IsAuthenticatedHttpContextBase">
            <summary>Sets the stub of IAuthenticationService.IsAuthenticated(HttpContextBase httpContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.StubIAuthenticationService.mew::MyEvents#Web#Services#IAuthenticationService#CreateAuthenticationTicket(MyEvents.Web.Authentication.MyEventsIdentity,System.Web.HttpContextBase)">
            <summary>Sets the stub of IAuthenticationService.CreateAuthenticationTicket(MyEventsIdentity identity, HttpContextBase httpContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.StubIAuthenticationService.mew::MyEvents#Web#Services#IAuthenticationService#CreateAuthenticationTicket(System.String,System.Web.HttpContextBase)">
            <summary>Sets the stub of IAuthenticationService.CreateAuthenticationTicket(String code, HttpContextBase httpContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.StubIAuthenticationService.mew::MyEvents#Web#Services#IAuthenticationService#DestroyAuthenticationTicket(MyEvents.Web.Authentication.MyEventsIdentity)">
            <summary>Sets the stub of IAuthenticationService.DestroyAuthenticationTicket(MyEventsIdentity identity)</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.StubIAuthenticationService.mew::MyEvents#Web#Services#IAuthenticationService#GetIdentityFromTicket(System.Web.HttpContextBase)">
            <summary>Sets the stub of IAuthenticationService.GetIdentityFromTicket(HttpContextBase httpContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.StubIAuthenticationService.mew::MyEvents#Web#Services#IAuthenticationService#GetLoginUrl(System.Web.HttpContextBase,System.String)">
            <summary>Sets the stub of IAuthenticationService.GetLoginUrl(HttpContextBase httpContext, String returnUrl)</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.StubIAuthenticationService.mew::MyEvents#Web#Services#IAuthenticationService#GetOauthCode(System.Web.HttpContextBase)">
            <summary>Sets the stub of IAuthenticationService.GetOauthCode(HttpContextBase httpContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.StubIAuthenticationService.mew::MyEvents#Web#Services#IAuthenticationService#HasAuthenticationTicket(System.Web.HttpContextBase)">
            <summary>Sets the stub of IAuthenticationService.HasAuthenticationTicket(HttpContextBase httpContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.StubIAuthenticationService.mew::MyEvents#Web#Services#IAuthenticationService#IsAuthenticated(System.Web.HttpContextBase)">
            <summary>Sets the stub of IAuthenticationService.IsAuthenticated(HttpContextBase httpContext)</summary>
        </member>
        <member name="T:MyEvents.Web.Services.Fakes.StubIAuthorizationService">
            <summary>Stub type of MyEvents.Web.Services.IAuthorizationService</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.StubIAuthorizationService.#ctor">
            <summary>Initializes a new instance of type StubIAuthorizationService</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.StubIAuthorizationService.mew::MyEvents#Web#Services#IAuthorizationService#ValidateEventAuthorization(MyEvents.Web.Authentication.MyEventsIdentity,System.Int32)">
            <summary>Sets the stub of IAuthorizationService.ValidateEventAuthorization(MyEventsIdentity identity, Int32 eventDefinitionid)</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.StubIAuthorizationService.mew::MyEvents#Web#Services#IAuthorizationService#ValidateEventAuthorization(MyEvents.Web.Authentication.MyEventsIdentity,MyEvents.Model.EventDefinition)">
            <summary>Sets the stub of IAuthorizationService.ValidateEventAuthorization(MyEventsIdentity identity, EventDefinition eventDefinition)</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.StubIAuthorizationService.mew::MyEvents#Web#Services#IAuthorizationService#ValidateSessionAuthorization(MyEvents.Web.Authentication.MyEventsIdentity,MyEvents.Model.Session)">
            <summary>Sets the stub of IAuthorizationService.ValidateSessionAuthorization(MyEventsIdentity identity, Session session)</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.StubIAuthorizationService.mew::MyEvents#Web#Services#IAuthorizationService#ValidateSessionAuthorization(MyEvents.Web.Authentication.MyEventsIdentity,System.Int32)">
            <summary>Sets the stub of IAuthorizationService.ValidateSessionAuthorization(MyEventsIdentity identity, Int32 sessionId)</summary>
        </member>
        <member name="F:MyEvents.Web.Services.Fakes.StubIAuthorizationService.ValidateEventAuthorizationMyEventsIdentityEventDefinition">
            <summary>Sets the stub of IAuthorizationService.ValidateEventAuthorization(MyEventsIdentity identity, EventDefinition eventDefinition)</summary>
        </member>
        <member name="F:MyEvents.Web.Services.Fakes.StubIAuthorizationService.ValidateEventAuthorizationMyEventsIdentityInt32">
            <summary>Sets the stub of IAuthorizationService.ValidateEventAuthorization(MyEventsIdentity identity, Int32 eventDefinitionid)</summary>
        </member>
        <member name="F:MyEvents.Web.Services.Fakes.StubIAuthorizationService.ValidateSessionAuthorizationMyEventsIdentityInt32">
            <summary>Sets the stub of IAuthorizationService.ValidateSessionAuthorization(MyEventsIdentity identity, Int32 sessionId)</summary>
        </member>
        <member name="F:MyEvents.Web.Services.Fakes.StubIAuthorizationService.ValidateSessionAuthorizationMyEventsIdentitySession">
            <summary>Sets the stub of IAuthorizationService.ValidateSessionAuthorization(MyEventsIdentity identity, Session session)</summary>
        </member>
        <member name="T:MyEvents.Web.Services.Fakes.StubIOfflineOauthService">
            <summary>Stub type of MyEvents.Web.Services.IOfflineOauthService</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.StubIOfflineOauthService.#ctor">
            <summary>Initializes a new instance of type StubIOfflineOauthService</summary>
        </member>
        <member name="F:MyEvents.Web.Services.Fakes.StubIOfflineOauthService.GetAccessTokenStringString">
            <summary>Sets the stub of IThirdPartyOauthService.GetAccessToken(String code, String returnUrl)</summary>
        </member>
        <member name="F:MyEvents.Web.Services.Fakes.StubIOfflineOauthService.GetCodeFromRequestHttpContextBase">
            <summary>Sets the stub of IThirdPartyOauthService.GetCodeFromRequest(HttpContextBase httpContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Services.Fakes.StubIOfflineOauthService.GetLoginUrlHttpContextBaseString">
            <summary>Sets the stub of IThirdPartyOauthService.GetLoginUrl(HttpContextBase httpContext, String returnUrl)</summary>
        </member>
        <member name="F:MyEvents.Web.Services.Fakes.StubIOfflineOauthService.GetUserInformationMyEventsIdentity">
            <summary>Sets the stub of IThirdPartyOauthService.GetUserInformation(MyEventsIdentity identity)</summary>
        </member>
        <member name="F:MyEvents.Web.Services.Fakes.StubIOfflineOauthService.LogOutMyEventsIdentity">
            <summary>Sets the stub of IThirdPartyOauthService.LogOut(MyEventsIdentity identity)</summary>
        </member>
        <member name="F:MyEvents.Web.Services.Fakes.StubIOfflineOauthService.MapUserInformationToIdentityDictionaryOfStringObjectMyEventsIdentity">
            <summary>Sets the stub of IThirdPartyOauthService.MapUserInformationToIdentity(Dictionary`2&lt;String,Object&gt; userInformation, MyEventsIdentity identity)</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.StubIOfflineOauthService.mew::MyEvents#Web#Services#IThirdPartyOauthService#GetAccessToken(System.String,System.String)">
            <summary>Sets the stub of IThirdPartyOauthService.GetAccessToken(String code, String returnUrl)</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.StubIOfflineOauthService.mew::MyEvents#Web#Services#IThirdPartyOauthService#GetCodeFromRequest(System.Web.HttpContextBase)">
            <summary>Sets the stub of IThirdPartyOauthService.GetCodeFromRequest(HttpContextBase httpContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.StubIOfflineOauthService.mew::MyEvents#Web#Services#IThirdPartyOauthService#GetLoginUrl(System.Web.HttpContextBase,System.String)">
            <summary>Sets the stub of IThirdPartyOauthService.GetLoginUrl(HttpContextBase httpContext, String returnUrl)</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.StubIOfflineOauthService.mew::MyEvents#Web#Services#IThirdPartyOauthService#GetUserInformation(MyEvents.Web.Authentication.MyEventsIdentity)">
            <summary>Sets the stub of IThirdPartyOauthService.GetUserInformation(MyEventsIdentity identity)</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.StubIOfflineOauthService.mew::MyEvents#Web#Services#IThirdPartyOauthService#LogOut(MyEvents.Web.Authentication.MyEventsIdentity)">
            <summary>Sets the stub of IThirdPartyOauthService.LogOut(MyEventsIdentity identity)</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.StubIOfflineOauthService.mew::MyEvents#Web#Services#IThirdPartyOauthService#MapUserInformationToIdentity(System.Collections.Generic.Dictionary{System.String,System.Object},MyEvents.Web.Authentication.MyEventsIdentity)">
            <summary>Sets the stub of IThirdPartyOauthService.MapUserInformationToIdentity(Dictionary`2&lt;String,Object&gt; userInformation, MyEventsIdentity identity)</summary>
        </member>
        <member name="T:MyEvents.Web.Services.Fakes.StubIThirdPartyOauthService">
            <summary>Stub type of MyEvents.Web.Services.IThirdPartyOauthService</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.StubIThirdPartyOauthService.#ctor">
            <summary>Initializes a new instance of type StubIThirdPartyOauthService</summary>
        </member>
        <member name="F:MyEvents.Web.Services.Fakes.StubIThirdPartyOauthService.GetAccessTokenStringString">
            <summary>Sets the stub of IThirdPartyOauthService.GetAccessToken(String code, String returnUrl)</summary>
        </member>
        <member name="F:MyEvents.Web.Services.Fakes.StubIThirdPartyOauthService.GetCodeFromRequestHttpContextBase">
            <summary>Sets the stub of IThirdPartyOauthService.GetCodeFromRequest(HttpContextBase httpContext)</summary>
        </member>
        <member name="F:MyEvents.Web.Services.Fakes.StubIThirdPartyOauthService.GetLoginUrlHttpContextBaseString">
            <summary>Sets the stub of IThirdPartyOauthService.GetLoginUrl(HttpContextBase httpContext, String returnUrl)</summary>
        </member>
        <member name="F:MyEvents.Web.Services.Fakes.StubIThirdPartyOauthService.GetUserInformationMyEventsIdentity">
            <summary>Sets the stub of IThirdPartyOauthService.GetUserInformation(MyEventsIdentity identity)</summary>
        </member>
        <member name="F:MyEvents.Web.Services.Fakes.StubIThirdPartyOauthService.LogOutMyEventsIdentity">
            <summary>Sets the stub of IThirdPartyOauthService.LogOut(MyEventsIdentity identity)</summary>
        </member>
        <member name="F:MyEvents.Web.Services.Fakes.StubIThirdPartyOauthService.MapUserInformationToIdentityDictionaryOfStringObjectMyEventsIdentity">
            <summary>Sets the stub of IThirdPartyOauthService.MapUserInformationToIdentity(Dictionary`2&lt;String,Object&gt; userInformation, MyEventsIdentity identity)</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.StubIThirdPartyOauthService.mew::MyEvents#Web#Services#IThirdPartyOauthService#GetAccessToken(System.String,System.String)">
            <summary>Sets the stub of IThirdPartyOauthService.GetAccessToken(String code, String returnUrl)</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.StubIThirdPartyOauthService.mew::MyEvents#Web#Services#IThirdPartyOauthService#GetCodeFromRequest(System.Web.HttpContextBase)">
            <summary>Sets the stub of IThirdPartyOauthService.GetCodeFromRequest(HttpContextBase httpContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.StubIThirdPartyOauthService.mew::MyEvents#Web#Services#IThirdPartyOauthService#GetLoginUrl(System.Web.HttpContextBase,System.String)">
            <summary>Sets the stub of IThirdPartyOauthService.GetLoginUrl(HttpContextBase httpContext, String returnUrl)</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.StubIThirdPartyOauthService.mew::MyEvents#Web#Services#IThirdPartyOauthService#GetUserInformation(MyEvents.Web.Authentication.MyEventsIdentity)">
            <summary>Sets the stub of IThirdPartyOauthService.GetUserInformation(MyEventsIdentity identity)</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.StubIThirdPartyOauthService.mew::MyEvents#Web#Services#IThirdPartyOauthService#LogOut(MyEvents.Web.Authentication.MyEventsIdentity)">
            <summary>Sets the stub of IThirdPartyOauthService.LogOut(MyEventsIdentity identity)</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.StubIThirdPartyOauthService.mew::MyEvents#Web#Services#IThirdPartyOauthService#MapUserInformationToIdentity(System.Collections.Generic.Dictionary{System.String,System.Object},MyEvents.Web.Authentication.MyEventsIdentity)">
            <summary>Sets the stub of IThirdPartyOauthService.MapUserInformationToIdentity(Dictionary`2&lt;String,Object&gt; userInformation, MyEventsIdentity identity)</summary>
        </member>
        <member name="T:MyEvents.Web.Services.Fakes.StubOfflineOauthService">
            <summary>Stub type of MyEvents.Web.Services.OfflineOauthService</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.StubOfflineOauthService.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:MyEvents.Web.Services.Fakes.StubOfflineOauthService.InitializeStub">
            <summary>Initializes a new instance of type StubOfflineOauthService</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.StubOfflineOauthService.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.StubOfflineOauthService.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.Services.Fakes.StubOfflineOauthService.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:MyEvents.Web.Validators.Fakes.ShimDateGreaterThanAttribute">
            <summary>Shim type of MyEvents.Web.Validators.DateGreaterThanAttribute</summary>
        </member>
        <member name="M:MyEvents.Web.Validators.Fakes.ShimDateGreaterThanAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.Validators.Fakes.ShimDateGreaterThanAttribute.#ctor(MyEvents.Web.Validators.DateGreaterThanAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.Validators.Fakes.ShimDateGreaterThanAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Validators.Fakes.ShimDateGreaterThanAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Validators.Fakes.ShimDateGreaterThanAttribute.Bind(System.Web.Mvc.IClientValidatable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:MyEvents.Web.Validators.Fakes.ShimDateGreaterThanAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Validators.Fakes.ShimDateGreaterThanAttribute.ConstructorString">
            <summary>Sets the shim of DateGreaterThanAttribute.DateGreaterThanAttribute(String propertyName)</summary>
        </member>
        <member name="P:MyEvents.Web.Validators.Fakes.ShimDateGreaterThanAttribute.GetClientValidationRulesModelMetadataControllerContext">
            <summary>Sets the shim of DateGreaterThanAttribute.GetClientValidationRules(ModelMetadata metadata, ControllerContext context)</summary>
        </member>
        <member name="T:MyEvents.Web.Validators.Fakes.ShimDateGreaterThanAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:MyEvents.Web.Validators.Fakes.ShimDateGreaterThanAttribute.AllInstances.GetClientValidationRulesModelMetadataControllerContext">
            <summary>Sets the shim of DateGreaterThanAttribute.GetClientValidationRules(ModelMetadata metadata, ControllerContext context)</summary>
        </member>
        <member name="T:MyEvents.Web.Validators.Fakes.ShimIsTrueAttribute">
            <summary>Shim type of MyEvents.Web.Validators.IsTrueAttribute</summary>
        </member>
        <member name="M:MyEvents.Web.Validators.Fakes.ShimIsTrueAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:MyEvents.Web.Validators.Fakes.ShimIsTrueAttribute.#ctor(MyEvents.Web.Validators.IsTrueAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:MyEvents.Web.Validators.Fakes.ShimIsTrueAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:MyEvents.Web.Validators.Fakes.ShimIsTrueAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Validators.Fakes.ShimIsTrueAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:MyEvents.Web.Validators.Fakes.ShimIsTrueAttribute.Constructor">
            <summary>Sets the shim of IsTrueAttribute.IsTrueAttribute()</summary>
        </member>
        <member name="P:MyEvents.Web.Validators.Fakes.ShimIsTrueAttribute.IsValidObjectValidationContext">
            <summary>Sets the shim of IsTrueAttribute.IsValid(Object value, ValidationContext validationContext)</summary>
        </member>
        <member name="T:MyEvents.Web.Validators.Fakes.ShimIsTrueAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:MyEvents.Web.Validators.Fakes.ShimIsTrueAttribute.AllInstances.IsValidObjectValidationContext">
            <summary>Sets the shim of IsTrueAttribute.IsValid(Object value, ValidationContext validationContext)</summary>
        </member>
        <member name="T:MyEvents.Web.Validators.Fakes.StubDateGreaterThanAttribute">
            <summary>Stub type of MyEvents.Web.Validators.DateGreaterThanAttribute</summary>
        </member>
        <member name="M:MyEvents.Web.Validators.Fakes.StubDateGreaterThanAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:MyEvents.Web.Validators.Fakes.StubDateGreaterThanAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:MyEvents.Web.Validators.Fakes.StubDateGreaterThanAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:MyEvents.Web.Validators.Fakes.StubDateGreaterThanAttribute.FormatErrorMessage(System.String)">
            <summary>Sets the stub of ValidationAttribute.FormatErrorMessage(String name)</summary>
        </member>
        <member name="F:MyEvents.Web.Validators.Fakes.StubDateGreaterThanAttribute.FormatErrorMessageString">
            <summary>Sets the stub of ValidationAttribute.FormatErrorMessage(String name)</summary>
        </member>
        <member name="M:MyEvents.Web.Validators.Fakes.StubDateGreaterThanAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:MyEvents.Web.Validators.Fakes.StubDateGreaterThanAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:MyEvents.Web.Validators.Fakes.StubDateGreaterThanAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubDateGreaterThanAttribute</summary>
        </member>
        <member name="M:MyEvents.Web.Validators.Fakes.StubDateGreaterThanAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:MyEvents.Web.Validators.Fakes.StubDateGreaterThanAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:MyEvents.Web.Validators.Fakes.StubDateGreaterThanAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>Sets the stub of DateGreaterThanAttribute.IsValid(Object value, ValidationContext validationContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Validators.Fakes.StubDateGreaterThanAttribute.IsValid(System.Object)">
            <summary>Sets the stub of ValidationAttribute.IsValid(Object value)</summary>
        </member>
        <member name="F:MyEvents.Web.Validators.Fakes.StubDateGreaterThanAttribute.IsValidObject">
            <summary>Sets the stub of ValidationAttribute.IsValid(Object value)</summary>
        </member>
        <member name="F:MyEvents.Web.Validators.Fakes.StubDateGreaterThanAttribute.IsValidObjectValidationContext">
            <summary>Sets the stub of DateGreaterThanAttribute.IsValid(Object value, ValidationContext validationContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Validators.Fakes.StubDateGreaterThanAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:MyEvents.Web.Validators.Fakes.StubDateGreaterThanAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:MyEvents.Web.Validators.Fakes.StubDateGreaterThanAttribute.RequiresValidationContextGet">
            <summary>Sets the stub of ValidationAttribute.get_RequiresValidationContext()</summary>
        </member>
        <member name="F:MyEvents.Web.Validators.Fakes.StubDateGreaterThanAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:MyEvents.Web.Validators.Fakes.StubDateGreaterThanAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.Validators.Fakes.StubDateGreaterThanAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.Validators.Fakes.StubDateGreaterThanAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:MyEvents.Web.Validators.Fakes.StubDateGreaterThanAttribute.RequiresValidationContext">
            <summary>Sets the stub of ValidationAttribute.get_RequiresValidationContext()</summary>
        </member>
        <member name="P:MyEvents.Web.Validators.Fakes.StubDateGreaterThanAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:MyEvents.Web.Validators.Fakes.StubIsTrueAttribute">
            <summary>Stub type of MyEvents.Web.Validators.IsTrueAttribute</summary>
        </member>
        <member name="M:MyEvents.Web.Validators.Fakes.StubIsTrueAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:MyEvents.Web.Validators.Fakes.StubIsTrueAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:MyEvents.Web.Validators.Fakes.StubIsTrueAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:MyEvents.Web.Validators.Fakes.StubIsTrueAttribute.FormatErrorMessage(System.String)">
            <summary>Sets the stub of ValidationAttribute.FormatErrorMessage(String name)</summary>
        </member>
        <member name="F:MyEvents.Web.Validators.Fakes.StubIsTrueAttribute.FormatErrorMessageString">
            <summary>Sets the stub of ValidationAttribute.FormatErrorMessage(String name)</summary>
        </member>
        <member name="M:MyEvents.Web.Validators.Fakes.StubIsTrueAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:MyEvents.Web.Validators.Fakes.StubIsTrueAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:MyEvents.Web.Validators.Fakes.StubIsTrueAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubIsTrueAttribute</summary>
        </member>
        <member name="M:MyEvents.Web.Validators.Fakes.StubIsTrueAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:MyEvents.Web.Validators.Fakes.StubIsTrueAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:MyEvents.Web.Validators.Fakes.StubIsTrueAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>Sets the stub of IsTrueAttribute.IsValid(Object value, ValidationContext validationContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Validators.Fakes.StubIsTrueAttribute.IsValid(System.Object)">
            <summary>Sets the stub of ValidationAttribute.IsValid(Object value)</summary>
        </member>
        <member name="F:MyEvents.Web.Validators.Fakes.StubIsTrueAttribute.IsValidObject">
            <summary>Sets the stub of ValidationAttribute.IsValid(Object value)</summary>
        </member>
        <member name="F:MyEvents.Web.Validators.Fakes.StubIsTrueAttribute.IsValidObjectValidationContext">
            <summary>Sets the stub of IsTrueAttribute.IsValid(Object value, ValidationContext validationContext)</summary>
        </member>
        <member name="M:MyEvents.Web.Validators.Fakes.StubIsTrueAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:MyEvents.Web.Validators.Fakes.StubIsTrueAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:MyEvents.Web.Validators.Fakes.StubIsTrueAttribute.RequiresValidationContextGet">
            <summary>Sets the stub of ValidationAttribute.get_RequiresValidationContext()</summary>
        </member>
        <member name="F:MyEvents.Web.Validators.Fakes.StubIsTrueAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:MyEvents.Web.Validators.Fakes.StubIsTrueAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:MyEvents.Web.Validators.Fakes.StubIsTrueAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:MyEvents.Web.Validators.Fakes.StubIsTrueAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:MyEvents.Web.Validators.Fakes.StubIsTrueAttribute.RequiresValidationContext">
            <summary>Sets the stub of ValidationAttribute.get_RequiresValidationContext()</summary>
        </member>
        <member name="P:MyEvents.Web.Validators.Fakes.StubIsTrueAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
    </members>
</doc>
